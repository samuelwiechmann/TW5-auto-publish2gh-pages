created: 20180515075746309
modified: 20180515075746309
title: C:\Users\Samuel Wiechmann\understand\wiki\tiddlers\favicon.ico
tmap.id: 3dadd847-8d3e-4333-94d8-595c29907da5
type: image/x-icon

created: 20180503185427522
modified: 20180503185427522
title: C:\Users\Samuel Wiechmann\understand\wiki\tiddlers\favicon.ico
tmap.id: e877cab4-ef4f-4c52-8816-776c4b55245b
type: image/x-icon

Y3JlYXRlZDogMjAxODA0MjMxOTI5NTYwNzUKbW9kaWZpZWQ6IDIwMTgwNDIzMTkyOTU2MDc1CnRpdGxlOiBDOlxVc2Vyc1xTYW11ZWwgV2llY2htYW5uXHVuZGVyc3RhbmRcd2lraVx0aWRkbGVyc1xmYXZpY29uLmljbwp0bWFwLmlkOiAwYzQ0NjZiNy0wZjFjLTQ0MTktOWZiZi1jNDA5ZTA1N2FhOTMKdHlwZTogaW1hZ2UveC1pY29uCgpZM0psWVhSbFpEb2dNakF4T0RBME1UQXlNREF4TkRFMU16Z0tiVzlrYVdacFpXUTZJREl3TVRnd05ERXdNakF3TVRReE5UTTRDblJwZEd4bE9pQkRPbHhWYzJWeWMxeFRZVzExWld3Z1YybGxZMmh0WVc1dVhIVnVaR1Z5YzNSaGJtUmNkMmxyYVZ4MGFXUmtiR1Z5YzF4bVlYWnBZMjl1TG1samJ3cDBiV0Z3TG1sa09pQXdZelF5WlRFMk5DMW1abVptTFRRMVlqUXRZVFF5TkMwek0yRTNZelUwTVRnNU9UY0tkSGx3WlRvZ2FXMWhaMlV2ZUMxcFkyOXVDZ3BaTTBwc1dWaFNiRnBFYjJkTmFrRjRUMFJCTUUxRVdYaE9SRVY0VFdwSk1VMUVWVXRpVnpscllWZGFjRnBYVVRaSlJFbDNUVlJuZDA1RVFUSk5WRkY0VFZSSmVVNVVRVEZEYmxKd1pFZDRiRTlwUWtSUGJIaFdZekpXZVdNeGVGUlpWekV4V2xkM1oxWXliR3haTW1oMFdWYzFkVmhJVm5WYVIxWjVZek5TYUdKdFVtTmtNbXh5WVZaNE1HRlhVbXRpUjFaNVl6RjRiVmxZV25CWk1qbDFURzFzYW1KM2NEQmlWMFozVEcxc2EwOXBRbXBQUjFrelQwZE9hMDFwTURCT1ZFbDZURlJTYkZwVVozUlpiVlpxV1hrd2VFNVVaR2xhUjBreFdtcFZlRmxVWTB0a1NHeDNXbFJ2WjJGWE1XaGFNbFYyWlVNeGNGa3lPWFZEWjNCYVRUQndjMWRXYUZOaVJuQkZZakprVG1GclJqUlVNRkpDVFVVeFJWWllaRkJXUld3MFZHeFNUazB3T1ZWVVZYUnBWbnBzY2xsV1pHRmpSbkJZVlZSYVNsSkZiRE5VVmxKdVpEQTFSVkZVUms1U1IzUTFWRlpTVm1Wck5UWmhNM0JFWW14S2QxcEZaRFJpUlRsd1VXdFNVR0pJYUZkWmVrcFhaVmROZUdWR1VscFdla1Y0VjJ4a00xb3hXWGxpUjNoYVRXMW9NRmRXWXpGa1ZtaEpWbTVXWVZJeFdqVlplazVUWVVkS2RGVnRUbXROYlhoNVdWWmFORTFIUmxoVmJYUnBVakZhTlZsNlJqUmlWbXhaVjI1Q1drMXFiREZVUnpGellXMUtNMk5FUW1sV01Gb3pWRWN4YzJFd09YQlJWRXBhWVd4S2MxZHRjRTloUm5CVVRVUkNVRll3V205VVJsSlRZVlp3ZEZOWVVsQlNSa1V4VjJ0TmVHSlZPVVZSYlhoT1ZqRndkRlJzWkVaTlJUVjBWRlYwYTFOSGVETlhiRkoyV2pKR1dFMVhhR0ZOYkZZeVdsVk5lR05HYTNsUFdGWkVXak5DWVZSVVFuZGpNV1JYWVVaT2FWSnVRa1paYWtwclZHMUdjbEpxVWxWTlJrcERWRlZWZUZKV1ZsbGhSVFZvWVRKM01GWkdhSGRWYXpWR1RWaEdWRlpZVW5CV2JuQnpZMnhzVjFwSFJtcFNia0paVmxaU1lWTnNTa1ppUkU1VlZteEtkVnBFUVRGU1ZrWlZVV3MxVjFKWGR6RldSbHBUVkdzeFJrOVZWbFJYUjNoRldXMTRTMlF4Y0VaYVJGSnBVbFJzZDFWWGRGTlZSMHBKWVVaa1dtVnJjRmhhVm1ST1pVZFdSMVZzY0ZkbGExWTBWako0YTAweGIzaFhXR3hwVWpOb1lWUlhNVzlOUm1SWFdYcEdhMVp0YUVwV2JUVlhXVlpKZUZkcVZscGxhelZVV1ZWa1MyUkdWblJVYlhST1lsaG9OVmRXV21GT1JURklVbXhvVm1KWVVuQlZha1poVGxac05sSnFVbWxXYlhoYVZqSTFRMWRyTVhGaVJFWlZVbnBHZWxsWE1VdE5NazVGVVcxc1YwMUdiM3BXUldONFl6SkZkMDlZUWxKV1JrcFJWbXRXVjAweFpGaGpSbHBQVWxSR2QxUldaRzlVTWxaMFZXNUNWVkpzU2xOYVZsVjNaVlpPV1ZWc1FsTlNiSEF3Vmtaa2NtUXlWa2RpUmxaWVlsUkdhRlpyVmxabGJHUnlWV3h3VDFadVFqQlZNVll3WVRGT1NHVkVUbGhpUmtveVYycEtSMWRGTVZoaFIwWk9Za1paZVZkc1ZrNWxSMDVIWVROc1VGZEdXa1ZYYWs1RFdWWlNWVkZ1WkdwTlYxSllXVlZhVDJGV1NuVlJhMXBhWVd0d2NsWkhNVWRqYkVweFZXeFdUbEpyY0VSWGJHUjZaVWRPVjFOc2JHaFNWRlpZVld4YVZtUXhXa2RXYkU1WVlsWmFlVlJzYUVkV2JGcFpWVzVDVjJKdVFucFpNbmh6VmpGd1NGSnRjRk5pYTBwYVZteGFVMWxXVG5OVGExcHBVa1UxVmxadGVFdGtWbkJGVVZob1QySkZOVnBaVlZVeFZqRktWMWRVUWxkU1JVcFVWVmR6ZUdOck1WVlhiR2hYVWxWd1JsZFhNVFJUTWxGNFkwVmFZVkpHU25CVmJGSnpaREZXV0dSR1RsWlNNSEJLV1ZWYWExZHRWbkpqUm1oaFZtMVNUMXBWWkZkU01WWnpZMFprYkdFeFdUQldha28wWVRBd2VHSXphRmhYUjNod1ZXcE9iMWxXVWxoTlZ6bE9VbTFTV0ZkWWNFZGhNVnAwWVVWd1YySlVWbGhYVmxwS1pVWmtjVlpzY0d4aGVsWlZWMVpXYTFNeVVrZFdibEpWWWxoU1QxbHNhRzlPVm1SWFYyMUdUMUpVUmtsVmJYaHZWbTFLV1ZWdVFsWmhhMXBvVkd4YWMwNXNTbkZWYld4WFlsaG9ZVlpxU1RGUk1XUnlUVmhHYVZKRldsWlZibkJIWld4c1dFMVZkRTVOYXpWR1ZWY3hjMVl3TVVkaU0zQlhVbGRPTkZsNlNrWmtNRGxaVVd4S2FWWkZXbEZYYkdRMFdWZE9SMVZzYUdwU2JIQlFWVzB4TkZaV1VsZGFTR1JWVFd0YWVsWnRjR0ZXVmtwelUyeE9ZVkpGUmpSV01GcFRWMVpXYzFGc1RsTmhNMEkyVm10YWIyTnRVWGxXYkdScVUwWktWbFl3WkRSaFJteFlUVlpPYWsxWFVsbFpNRnByWVVVeFJWSnNiRlpOVmxsM1dWUkdUMU5IVmtWVWJHaHBVbXR2ZVZZeWNFdFNNV1JHVFZab2FGSXdXazlaYTFwYVpWWmtjMVpyTld4U01EVklXVlJPYzFWR1pFZFhhMVpZWVdzMVJGZFdXbE5XVmtaMVdrZHdUbFl4U2xsWFZsWmhWREpHVjFOdVZsSmhNWEJoV1ZkMGQyTnNXa2hOVldScVlrVndlRlpYZUZkVWJFcHlZMFZTV0dKSFVqWmFWVnBoVjBaS1dXTkhhRk5XUjNoMlYxWlNTMDFGTlhOWGEyUmhVMGRTVmxsWWNFTk5NVkY0Vm14a1ZrMVdjRnBXVnpWRFZqSktkVkZ1Y0ZwTmJtaDZWbXBHZDFOR1NuUmpSazVwWVRCd1lWWnRlR0ZWTVd4WFZHNU9WR0V4Y0hCVmExVXhWbXhhZEdWRmRHdFdia0pHVlZab2IxUXlTa1pqUmxwWFlsaE5lRlpxUmt0a1IxSTJVbXhrVTJWc1dYcFdWRWw0VmpKT2NrNVdWbGhpVlZwUFZGY3hiMUpzWkZoTlZGSlVUV3hHTkZrd1ZtRlpWa3BIVTI1Q1ZtSkdTbnBhUkVaWFYwZFNSMVJzV2xOTlNFSkxWMVpXWVdFeFpIUldia3BxVW0xb2FGWnRNVk5VTVhCV1drWmtVMDFXV25wWk1GcHJZa2RGZUZkVVFsZGhhMjh3V1ZSQmQyVkhTWHBoUm1oWVVqTm9kMVpYY0U5aU1XeFhWV3hvVGxaNmJFOVZiVEZUVjBaa1dXTkZaR2hOVm5Bd1dWVldkMVl5U2xWV2JHaFlWbXh3UzFwVldtdGpWbHB6WTBkNGFHVnNXbFpXTVZwWFlURk5lVlZyWkZkaWJFcFdXV3hvVTFReGJITmhSemxQVm0xU1dGWXlNVWRVTVVwVlVtdHNWbUpZYUhaV2JURkxWMVpXZFZGc1dtaGhNWEJ2VmtkNFlXTXdOWE5UYmtaV1lsZDRXRmxzYUc5WlZscHhVMVJHVWsxWFVubFVWbWhIWVZaS1JsZHNXbFppYmtKSVdsZDRjMWRGTVZaa1JUVk9ZWHBXUjFaV1kzaGpNVmwzVFZWa2FVMHpRbGhWYkdSUFRrWnNObE5yV210TlJHeGFWVmQ0UzJGV1pFZFRiVGxYWWxoQ1JGcEVTazlqTVZaMVZtMXdVMWRHU25aV1YzaFRVakpSZUZWc1pHRlNlbXhoVm0xNGQxTkdiRmxqUldSWFZtdHdlbFV5ZUU5V1YwVjRZMFJPVmsxR2NGaFdNVnBYWXpGR2MxcEdUbGRpYTBreVZtMTBVMUl4VW5SVldHUk9WbTFTY1ZWdGVHRldWbXh6Vld0a1ZsSnNXbmxXYlhRd1lXMUtSMU5zYUZkV00yaG9Wa2N4UjA1c1duTlhiR2hYVWxWc00xZFdVa2RVTVU1SVZtdFdWV0pIYUhCVmJYUjJaVlpaZVdORmRGTk5WMUpIVkZaYWIyRkdTWGRYYXpsYVlURndZVnBXV210ak1WcHlUbGQ0VTAxRVZrbFhWbEpQWXpGV1IxcEZaRmhoTVZwWldWZHpNVkpHWkZkWGJFNVhWbXRhTVZkclpIZFViRmw0VTJ4c1dGWnNXbWhXUkVwSFZqRk9kVlpzU21oTldFSm9WMVprTUdReVRuTlhhMmhPVmxkU2NWbHJWbmRsUmxwWVpVWmtWV0pGY0hsWk1GWlRWMGRLU0ZWcVdtRldWbkJvVmpCYVMxZFhUa2hoUms1WFVteHdNbFl4WkRCWlZscDBWbXRrV0dFeVVtOVZNR1JUWWpGc1dXTkZaRmROVmtwWVZtMTRhMWRHU25OalJuQlhWbnBXUkZacVNrdGtWa1oxWTBad1RtSnRhRFpXYlhCSFpERk9SMU51VW1wU2F6VndXVlJDZDFsV1duUmxSMFpXVFZkNFdGWkhOVTlXUjBWNFkwaENWbUV4VlhoV2JYaGhaRWRXUm1SSGRGZGlhMHBIVmxaYWIySXhVWGxUYTFwcVVteHdXRmxzYUU1bFJscHhVbXQwV0ZJeFNrWldWM2hyVlRGS1YyTkdWbGRoTWxJMldrUktVbVF3TlZkYVJtUnBVbGhDV1ZaWGVHOVJNVXB6V2tab1RsWkdTbFZVVjNoSFRrWnJkMVp0UmxwV2EzQklWVEkxUTFadFNrZFRibkJoVWtWYVdGWXdaRk5TTVZKelYyeE9UbE5GU2t4V01WcFhXVmRGZUZwSVVsZGlhM0J4VlcweGIyRkdXblJOVms1VlRWaENWMWRyV210Vk1ERlhWMjV3V2sxR2NISlphMlJHWlVaa1ZWRnNaR2hoTWpoM1YxWlNRbVF5VmtoVFdIQm9VbTFvV1ZWcVRtOWtNVnBZWTBVNWFVMVhlRmhXVjNodlZHeGFObUpGT1ZaaVZFWlVWakJhYTFkWFRrWmFSMmhPVm01QmQxZFdWbGRrTVZsNVUyeFdWMkpIYUZsV2JYaDNVekZ3VmxkdGRHcFdiSEI2V1RCa05HRkhWbk5YYkZwWFRWWndXRmxVUms1bFZsWnlXa1prYVdKRmNGZFhWM2h2VlRGUmVHSklUbWhTZW14UVZtMHhVMWRHV1hsTlZXUlZUVlZ3VmxWdGRITldiVXBaWVVoYVYySlVSa3hXTVZwWFpGWkdjMWR0YUdoTldFSjJWbXRrTkZsWFRYZE9XRTVVWW10YVYxbHNaRFJYUm14ellVYzVXbFpzY0hoVk1WSkhWV3N4V0ZWdWJGVldiV2hJV1ZaYVMxSnNaSE5YYkZwcFltdEtTVmRzWkRSak1XUkdUVlphYTFKVVZrOVpXSEJYVWpGYVYxa3phR3BOVm13elZGWldhMkZWTUhwUmJHaFdZa2RTVUZSclduTk9iRTV5VjIxMFRsSkhlR0ZXVm1RMFV6SkdWMWRZYkdoU2EzQllWbXBPVTJOc2JGVlJWRVpxVFZoQ1NGbFZaSGRWTVZwSFYyeEdWMVo2UWpSVWExcGhWakZXYzFkc1dtbFNWRlpYVmtaYVYyUXhUbGRhU0VwV1lrVTFXRlp0ZEhkbGJGVjVaVVU1VjFZd2NFaFdiRkpIVm1zeFIyTkZlRmROVm5CWVdYcEdSMk14Y0VkVWJXeFlVbFJSZDFadE1UQlpWMGw1Vkc1U1ZsZEhVbEJXYkZwM1ZERmFjbGR1WkZwV2JrSlpXbFZXTUZac1NuTlhibWhXWWxob2NsWkVTa3RTTVU1eFVteHdUbEp1UWsxV2EyUTBXVlphVjFKdVJsZGlSbkJ3VlcxNGMwMHhaRmRWYTJSVlRWVTFTVlp0ZEZkV1YwcElZVWhDVm1KWVVqSmFWbHBhWlZkT1JtUkdUazVXTVVwSVZrWmFZV0l5UmtkVFdHUllZWHBzWVZsVVJuZFpWbkJYVjIxMGFrMVdjSGxVYkdRMFZUQXhSVlpyYkZoV2JFcFFXWHBHVjFJeGNFWmFSbWhvVFZad1dsZFdaSHBOVmtwSFdrWmtXR0pGTlZoV2JYUmhUVlprY2xwSVpGVmlSbXcwVlRKNGMxZEdXbk5YYldoWFVrVndTRlpxUms5a1ZscHpVMjFvVGxkRlNtOVdNVnByVFVkUmVWUnVUbGhoTW1oUFZteGtVMk5XYkhKV2JtUnNVbXh3V1ZwVldtdFdWMHBHWTBoc1drMUdXbFJXTUdSTFUwWldjVmR0UmxkV2JrSnZWbTF3UzFOdFZuUlVhMmhvVW1zMVdGVnRlSGROYkZsNFYyeE9VMDFYVW5sVVZtaFBWMGRGZVZWdGFGWk5SMUpVVm10YWMxZFhUa2RhUms1T1ZtdHdXVlpxU2pSaE1WbDRWMjVPYWxKdVFsaFdibkJYVWtaYWNWTnJkR3RXYTFveFdUQmFkMVJ0U25SaFJGcFhZbGhDU0ZwRVJrOVNNVTUxVlcxd1UyRjZWbmRYVmxKRFpERnNWMWR1VW14U01GcFhWRlprTkZkR1draE9WVGxYVWpCV05Ga3dhRU5XYlVWNFZsaG9WMkpZYUdoYVJXUlhVbTFTU0dSR1pHbGhNSEJJVm14YVlXSXlTWGhWV0d4VVlURndjVlZ0ZUhkWFJscHhWR3MxYkZKc2NIaFZiWFF3VjBaSmVGTlVTbFpXTTJoeVZsUktTMWRHYjNwalJtUlhVbGQzTUZadGNFZFRNazV5VDFaa1dHSkhVbkJWYkZKWFYyeGFWVkZzWkZSTlZYQjZWMnRhYjFSc1drZFRiRlpWVmpOb1NGUnJXbkprTVZwMFVteHdWMkV6UWtsV1ZFa3hVVEZhZEZOclpGUmlia0pvVld0V1lWZEdXWGRhUms1VFRWWktlbFl5ZUU5VWJFNUdVMnQ0VjAxV2NGaFhWbVJHWlVad1NWVnNaR2xoTTBKNFZsY3dlR0l5UmtkWGJsSk9WbXMxVmxSV2FFTldNV1J5VjIxMFZrMUVSbGhXTWpWM1Yyc3hSMk5JU2xwaE1sSkhXbFZhYTFaV1JuTmFSMmhvVFdwb00xWXhXbE5SYlZGNVZtdG9WRmRJUW05VmJURnZWMVpXY1ZSdE9XdE5WbkJaV1RCVk5XRlZNVmhsUm1oWFZqTm9kbFpIZUdGT2JVcEdUMVphYVZaRldsVldha0poWVRGa1dGUnJXbUZTTW1oUFZtMDFRbVF4WkZkV2JHUnJUVlpzTlZVeWVGZFdNa3BJWVVac1YySllhRE5WZWtaM1ZteGtkR1JIY0ZkaVNFSTJWMVJDYTA1SFJraFdiazVZWWtad1dGUldXbmRYUm14VlVtczFiRlpzV25sWGExcHJZVmRLUm1OR1pGaFdNMmgyVmxSR1VtVkhTa2xVYldoVFpXMTRVVlp0TUhoVk1XUkhWMWhzVGxaWFVsWlVWbFozVm14V2RHUklUbGRpVlhCYVdWVm9ZVll5U2xWU2EzaFhUVlp3V0ZwR1drZGpNV1IwWVVkb1RsZEZTakpXYlhSclRrWnNXRlJZWkU5WFJUVlZXVzEwWVZZeGJITmFSRkpZVW0xNGVsbFZZelZYYkZwelkwaG9WazFXU2toV1YzTjRWMFpXZFdKR1ZsZGlWMmhKVjFaYVlWTXhTbk5hU0U1WVlrWndjRmx0ZEV0VFZtUnpXa1JTYWsxWFVrZFVWbHBoWVRGS1ZWWnJPVnBYU0VKWVZXcEdZVll4YTNwaFIzQk9WbTEzZWxaR1dsZGhNa1pXVFVod1VtSkhhRmRaYTJSVFZVWlNjbGR1VGs5aVJUVjVWakl4TUZSc1NraGxSMFpYVm0xUk1GVjZSbXRTTVU1WlkwZG9VMkV4Y0ZwWFYzUnJWV3N4UjJKRVdsSlhSMUp6VlcxNFlWZHNiRlphUldSV1RWWndNVlZYZUVOV01rcFpZVVpTVjJGcldreFdha1pYWXpGa2MxZHRiRk5XUmxwaFZqRmFiMlF4U1hsV2JrNVhZbXMxVjFsVVNsTlhSbHAwWkVoa2JHSkdWalZhVlZVMVZqRlpkMVpxVWxkaVdFSlVWbXBCZUZJeVRrZFZiR1JPVm01Q1dWZFljRWRTTWsxNFZXNUtUMVp0VWxsVmJGWnlaVlphZEUxVVFtaGlWbHBKVmtjMVUxWnNaRWhsUm1oYVlsaE5lRmt4V2xka1IxWklVbXh3VjJKRmNGZFdhMlF3VkRKR1IxTnVUbXBUUjJoWFZtMTRTMU5HYkZWU2EzUnJVbXhhTVZrd1dtOWhSVEZYWTBoc1dGWnNXbWhWZWtwVFUwWmFjbUpIYUZOaVYyaFpWbGQ0VjJNd01IaGFSbVJXWVRKU1ZsUldWVEZUVmxwMFpFWmtWMVl3Y0VsWlZXaERWbTFLV1ZWcVNtRldiSEJoV2xaa1QxSnRVa2RVYXpWWFRWVndTVlpyV21GWlYwbDVVbXRrVkZkSFVsbFpXSEJ6V1Zac1ZWSnVaRnBXYmtKWVZqSXhNR0ZyTVZkalNHeFZZa2RSTUZaVVFYaFNWbHB5WWtab1YySkZjRkZYV0hCSFZqRkplR05GV21GU2JXaHZWRlphZDFkc1pGZGFTSEJPVm10d1NGZHJXbXRYUjBwR1RsWm9WMkpZVW1oVVZscHJZMnh3U1ZwR1ZtbFNiWGN3VmxSS05HTXhaRWRYYms1WVlsZG9XRlZyVm5kVFJscHhVbXM1YTFac2NIcFZNakZ2Vkd4a1JsTnRPVmROVm5CeVZGVmtVbVZXVW5WVWJHaG9UVzFvVUZadGVHdFZNazVYWWtoS1YySnRVbk5WYlhoM1YxWndWbGR0ZEZkV01IQkhXVEJvYzFkck1VZFhiRkpYVFVkU1RGVXdXbGRqVm1SMFVteGtWMkpyU25aV2JURjNVakpSZUZOWWJGUmhNbWh2Vlcxek1WZEdWbkZVYlRsUFlrWnNORll5ZUU5V1JURkZVV3BPVlZac1duSldNR1JHWlZaV2RHRkdXazVTTVVwVlZtcENZV014WkZoVWEyUmhVbXMxVDFadGRIZFhWbHB4VTJwU2FFMVhVa2hWTWpWUFlXeEtjMk5HYUZwaVIyaFVWakJhV21WVk1WWmtSazVPVmxSV05WZFdWbUZXTVZsM1RVaHNhRk5IZUZsV2ExWjJUVVp3UlZKck9WZE5WbG94VmxjeGMxVXlTbGRUYkVKWFZucEJlRlZVUm5OV01XUjFWV3MxVkZJeFNucFdWM2hUVWpGT1IxZHVVbXRTZW14WFZGZDBkMU5HYTNkWGJFNVlZa1pzTmxsVlpHOVdNa3BaWVVkb1dtVnJXbkpaTWpGVFVqRlNjazVXWkdoTk1FVjRWbTB3ZUU1SFNYbFRXR2hYVjBkb1dWbHRjekZXVm14eVlVVk9XbFpzY0hwV01uaGhWR3hhZEdWR1pGaGhNVnBvV1d0YVMyTXlUa2xoUm1ST1ltMW9lVlpzVWt0VE1WbDRWR3hzYWxKdFVsaGFWM1JLVFVaYWRHTkZaRnBXTURWNVZHeGFhMWxXU25SVmJrSlhZa1p3TTFaVldtRlNNV3Q2WVVkc1RsWnNjRmxXYWtadll6RlJlRnBGYUZaaVJUVldWbTE0ZDFSR1ZYZFhia3ByVFZad01GVnRlSGRXTWtZMlZtdG9WMUl6YUZkVWJGcGhaRVpLZFZOc1VtaGhlbFpZVmtaYVlXUXlSa2RpUkZwVFlrZFNjbFZ0ZEhkbGJGcFlUVmhPVmsxWFVrZFZNbmh6VmpKRmVHTkdhRmRXUlZwUFdsVmFkMUpzY0VkVmJXeFRUVlZ3TkZac1kzZGxSMGw1VW10a1dHSnJXbFpaYkZKelZERlNWMWR1VGs5U2JHdzFXVE53VjJGRk1WZGlSRTVWWWtaYWRsWXlNVVpsUjA1SFVXeHdWMVl4U2xsWFdIQkhZVEpPVjFSdVRtRlNWRlpZVkZaV1YwMHhXWGhhU0dSVFRWZFNNRlp0ZUd0V1YwcHlZMGM1Vm1KWWFFeFpha1pUVmpGYWRWcEdaRk5pVmtwYVYydFdhMDFIUmxaTldFcHBVa1pLV0ZSWGNGZFRSbHBWVTJ0MFYySkhVakZWYlhocllWWmFSbFpZWkZkaVdFSklXVlJHWVZZeFZuVlZiRUpYVFcxb1ZWZFdVa3ROTWxaeldrWldVbUpGTlZOVVZscDNWMVpWZVdSSE9WZGlWWEJIVlRJeFIxWXlSWGhYYldoYVZsWndWRnBGWkZkVFJrcDBaRVprYUdWc1dUSldNVnBYWVRKTmVGWllaRTVYUmtwdlZXeFNWMWRHVWxoT1Z6bHFWbTVDVjFZeWVHRmlSa3B6VTI1c1dHRXhjRlJaVm1STFVqSk9SMkpHYUZkTk1taFpWakZhWVZsV1NYbFRhMnhXWVhwV1dGUlVSa3RWVm1SWVpFZDBWazFYVWtoV01XaHpWR3hhUmxOc1dscGhNVnA2VkZSR1UyTXhXblJQVm1ocFVtNUNXVlpxU1RGa01WbDVVMnhXVTJFemFHRlVWelZ2VlVad1JscEZaRk5OVjFJd1dWVmtiMVJzWkVaVGF6bFhZV3R2TUZsVVFURlRSa3BaWWtaV1dGSXphRlZYVmxKSFpESk9jMVp1UmxWaVZHeHhWVzE0WVdWR1ZYbE5SRlpYVWpCd1NGa3dhRzlXYXpGWVlVaGFXbFpzVmpSWk1uaGhZMVphYzFkck5XbGlWMmQ1VmpGa01GbFdVWGhUYms1aFUwWktWRmxyYUVOWFJsSlZVbXQwVDFadFVubFdWM1JyWVRBeFZtSkVVbHBOUmxwb1YxWmFTMlJIUmtkVmJIQm9UVlp2ZVZkc1ZtRlpWMDVYVkc1R1VtSkhVazlXYlRWRFRteFplV1JHWkZwV2JGWTFWVzAxUzFReFduUmxSbWhhVmpOTmVGcEhlSEpsVjFaSFdrZHdWMkY2VmpaV1ZFbDRUVVpTZEZOclpHcFNXRkpZV1d0a1QwNUdiRFpTYkZwclRVUkdTbGxWV2xOaFZrcFpVV3h3VjJKVVJUQmFSRVpyVWpGYWRWSnNTbGhTTVVwNlZsY3hORmxWTVZkWGEyaE9WbGRTVjFSV1duTk9SbFY1VGxkR1YwMVdiekpWVm1odlZteGFSbGR0YUZwbGExcHlXWHBLUjFKck5WZFZiRTVPWWxkb1dWWnFSbXROUmxsNFdraEtUbGRGTlZoWmJYaExWVVphYzFWdVRsaFNiSEI0VlZjMWExWXlTa2RYYWtKVlZtMU5NVll3WkV0U01rcEZWMnhrVjJKRmNFVldiWEJMVXpGSmVWUnJaR2hTYlZKd1ZXMDFRMVJXWkZsalJXUlRUV3N4TkZaWE5VdFVNVnB5VGxoQ1ZtRnJOWEpVYlhoaFpFVXhWVkZzV2s1V1YzY3dWbTE0YjJJeFdrZGFSV2hzVW14YVlWWnJWbmRXUm10NFYyeGthMUl4V2tkYVJWcFhWR3hhYzJORVZsZGlWRVYzVkZWa1IxSXhUblZVYlhCVVVqSm9XRlp0TlhkV01WWkhWMnRXVTJKVlduRlVWbFV4Wld4a2NsZHRPV2hTVkVaYVZWZHplRmRHV1hwVmJrcFdaV3RhVUZVd1dtRmpiSEJIWVVkc1UySnJTak5XYlRFd1ZqRmFkRlZZYUZoaWEzQlhXVlJPVTFkR1VsaGxSWFJVVm14d1dWcEZaRWRXYkVwelkwaHNXazFHVlRGV01uaGFaVzFHU0dGR1pHbFNia0p2VmxSQ2ExWXhUa2hWYTJSWFlYcFdXRlpyV21GVGJGcDBZMFYwVDFKc2JEUlhhMVp2VlRGa1NWRnNUbHBoTVhCTVZtMTRZV1JYVGtkYVIzUlhZbXRLUjFaWE1UUmtNa3BIVTI1U1ZtRnJTbWhWYkdSVFpHeGFTRTFWV214aVJWcDVXVlZhYjJGRk1WWmpSa1pZWVRGS1NGbDZSbUZqYXpGV1lrZG9VMkpGY0hkV2JYUnJUa1prVjFwR1pHRlNSVXBVV1d4YVlWTkdXbGhsUnpscFVtczFSMVJzYUV0V2JVcFZVbGhrVldKWWFISlpNbmhyWXpGU2MxWnRiRk5YUlVreFZqRlNRMWxXVlhoYVJXUllZVEZ3VlZsc1pHOWhSbFp5Vm0xR1YxSnRkRFZaZWs1dlZqSktWbU5GYUZaTmFrWjZXVlprUm1ReVRrZGpSbVJvVFZoQ2IxWXhXbXRWYlZaWFZtNVdWV0pIYUhCVmJYaDNWbXhrVjFWck9WWk5WbkJJVmxkNGIyRnRWbkpYYkZKVlZteHdNMVJWV2xOV01rWkdUMVprVjAxSVFsaFhWRUpoWWpGYWNrMVlWbWhTVmtwWVZGVmFkMkZHY0VaWGJHUllWbTVDU0ZZeU1XOWhSVEZIVjFSQ1YySkhVak5WYWtaYVpVWndSMXBIY0ZOV01VcGFWMWQ0YTJJeFVYaFdXR1JYWVROU1VGbHJXbk5PUmxsNVRVUldhRTFFUmxkWmExSlRWakF4Y1Zac1FsZE5SbkJ5VlRCa1IxTkZPVmRYYld4cFlUQnZNbFp0TUhoT1IwMTVWRzVPV0dKc1dtaFZiWE14VkRGYWRHUklaRmhXYkhCNlYydFNVMVpWTVZkaVJGSlhUVmRvY2xacVNrZGpNVTV6V2taV1YwMHdTbGxYYkdRMFlURlplRnBJVG1wU00yaHdWVzEwZDA1R1duTmFSRkpyVFZaS2VsWXlOVmRWYlVwSVpVWm9XbUpHU2tSVWExcGhWbFpLY2s5V1VsTmhlbFkxVmpKMGExSXhWWGROU0d4b1UwZFNXRmxYZEV0amJHeDBZek5vVjAxWFVqRlZiWGhQWVZaYVYyTkhhRmRpV0VKRVZtcEJNVkl5U2tsVGJHaHBWa2Q0V1ZadGNFTldNRFZYVjJ4b1QxWlhVbGhaYkZaM1ZteFdkRTVYUmxkTmExcDVWakl4YjFkck1YVmhTRXBoVW14d00xVnFSbGRqYXpWWFdrZHNWRkpWVmpSV2JUQjNaREpSZDAxV1pGWlhSMmhYV1cxMGQxUXhXblJOVms1WFZtMTRlVmRyWXpWWFJrcHpZMFJHV2sxR1dreFphMXBMWkVkV1IxZHNXbGRpVjJneVZteFNSMWxYVG5SVWEyUllZa1p3VDFsdE1XOWlNV1JYVjIxR1ZFMXJOVEJXUjNSaFZHeGFkRlZ0T1ZWV00yaEhXa1JHV21WR1pIUlNiRkpPWVhwRk1GWnJZekZXTVZWNVUydG9hRk5GU2xkWmJHaHZUVEZaZUZkdGRGaFNNVXBJVjJ0a01GUnNXblZSYTJ4WFlXdHZkMWxxU2t0U01VNTFWRzF3VkZKVVZsaFhWM1JoVXpGa1IyTkdhR3hTTUZwVlZXcEdZVk5HWkhKWGJVWm9WbXh3V0ZZeFVrTldNVnBHWVROb1ZsWkZXbkphUlZwTFYxZEdSMkZIYUdobGJGcFlWbTB4TUZZeGJGaFViazVvVFRKNGMxVnFRbUZqYkZaeFVtdDBVMDFXUmpSV01uTTFWbGRLUms1VlpGWk5ibEo2Vm1wS1JtVkdUbkpoUm5Cb1lURndTRmRzVm1GWlYxSlhWbTVPVldKSGFGUlVWekZ2VmpGWmVGcEVRbGROVjNoWVdXdGFhMkZXU25OWGJGWmFZa1pLZWxreWVITmpiR1IxV2tkNFUySkdiM2RXUjNoV1RsWmFWazFZU21wU1YxSldXV3RrYjAweFdYZGFSVnBzVm14YVZsVlhlR3RoUjBWM1YxUkNWMVl6YUdoVmVrWmhWakZLZFZSdGFGTk5ibWhWVjFkMGIxRXlVbk5YYmxKc1VtczFWRlJYZEZkT1ZscEhZVWM1V2xack5VZFdNbmh6VjIxRmVGWllhRmROVm5CWVdURmFUMlJGT1ZkaFIyeFRUVlZ3WVZZeWRGZGhNREZIVjI1U1ZHSkhVbGxaYlRWRFYxWnNWVk50T1ZSU2JIQldWVEowTUZaR1duSlhha1pYVWpOb2NsbFZaRVprTWtsNlkwWmtWMUpXY0c5WGExSkhXVmROZUdORmJGZGlWVnBVV1d0YWQyUXhXblJsUnpsU1RWZFNlbFl4YUhOaGJFcFZZa2M1VlZac2NIcFVWRVpUVmpGa2RHUkhhR2xTVkZaSVZtcEtORmxXV1hsVGJGWlRZa1pLV0ZsVVJuZGhSbXQ0VjJzNWFtSklRa2hXUnpGelZqRmtSbE5yY0ZkaGEyOTNXVlJLVG1WV1NuTmFSbEpwWWtad1ZGZFhNVFJrTVdSSFlraEtZVkpyTlU5VVZscGhaVVpXZEU1Vk9WZE5hMWt5Vm0xNGIxZEhSWGxWYm5CWFZrVmFURnBHV2tkak1YQkhZVVprVGsxVmNGbFdhMXBoWVRGT2RGWnJaRmhpYkZwVVdXdFdkMk5HYkhOWGEzUldVbXh3V1ZSV1VsTmhNREZZVld4b1YxWXphSEpXYWtaaFVqRmtkRTlXV21sU2EzQkpWbGN4TkZZeVVraFVhMXBWWWtoQ1dGbHJhRU5YYkdSWFZtMDVhMDFXYkROVVZtaFhZVVpKZVdGSFJtRldNMUl6VmtWYVUyUkhWa1phUjNCT1ZtNUNObFl5ZEdGaE1WSnpWMnhzVW1FelVsaFpiRkpIVFRGV1ZWSnVUbGROVjFKYVdXdGFZV0ZGTVhSaFJtaFlWbXhLVEZscVNrOVNNVnAxVlcxd2JHRXhjRmRXUmxwaFpEQXhSMVZzV2xaaVJUVndWVzEwZDJWc2JISlZiRTVZWWtad1dWbFZhRXRXTVZwR1VtcFNWbUpHY0doWk1qRkxVakZrY2s1WGJHbFdNbWN4Vm1wR1lWbFdiRmRVV0d4V1lUSm9XRmxVU2xOalJsWjBUbFZPYWxKc2JETldNblF3VmxaYWMySkVVbGROYWtaSVZtMXplRmRHVm5KaVJtUlRUVEZLTmxadGVHdFNNRFZ6VjI1T2FGSnVRbTlVVmxwMlpXeGFWVk5xVWxwV2EydzBWMnRvVTFWR1duTlhhemxhVmtWYU0xVXllR0ZXVms1eFZXeHdWMDFHY0ZoV1JsWnZaREZXZEZOc1dsaGlSbkJZV1d0YWQwMHhXa1pYYkdScVlrZFNNVlpIZUd0VWJGbDRVMnBhV0ZaRlNuSlVWVnBUWXpGa1dXRkdVbWhpUlhCWlYxWlNTMVZyTVVkWGJrWlRZa1p3YzFadGVIZE5WbFY1WlVjNWFGSXdjRXBWVjNoM1ZqSktWVkpVUWxabGExcEhXbFZhVjJSV1VuUlNiRTVYVWpOb1ZsWnJXbUZXTWxGNVZtNU9XR0pzU25OVmJGSnpZakZXY1ZKdFJteGlSbXcxVkd4b2ExZEdTbk5pUkZwWFZucEdkbFpxU2tkamJFcFpZVVprYUdFeGNIbFdha1pyVXpGT1NGWnJaRlZoZWxaUFZteG9RMWRzV25GU2JVWnBUV3hHTkZWc2FHdFViRTVJWVVaa1dtSllUWGhXTVZwelkyeGFWVkpzWkdsU00yZzFWbXBKTVZsV1VuUlRhMlJZWVd0S1ZsWnRlR0ZqYkZsM1drVjBVMDFyYnpKVk1uaGhZVlphUjFkcmJGZE5WbkJvVlhwR1MyTXhjRWxVYkZwcFVtNUNkbGRXVWtka01XUlhXa1pzYWxKWFVsWlVWM014WlZaU2MxZHRkRnBXYTNBd1ZsZDRVMWR0UlhsVVZFSmhVa1ZhYUZwRlpFOVNiVkpJWkVVMVYyRXhhM2RXYlRFMFlqSkplRmRZYkZOWFIzaFhXV3RrTkZkR1VsWmFSazVyWWtkNGVGVnRlRTlXTVZweVRsUkNWVTFXY0hKWlZscExaRlpHY1Zkc1pHbFhSMmd5VjFkd1IxVXlUbkpOVm1ScFVtdHdjRlZxVG05aFJtUnpXa2h3VGxZeFNucFdNV2hyVjBkRmVsVnVSbFZXTTAxNFZXMTRWMWRIVmtsYVJsWnBVbGhDTmxadGVHOWlNV1JIVjI1T1dHSnJjRmRaYkZKSFYwWldjVkp1WkZOTlZuQjZWVEl4YzFVd01WWmpSbHBYVFc1b2NsUlZXbXRrUmxwMVZHMUdVMkpHY0ZaWFZ6QXhVVEZSZUZkdVVtdFRSMUp6Vm0xNFMxZEdXblJPVlRsb1VteHdlVmt3VWtOV01WbDZZVWhhVjJGclJqUlZha3BQVW0xV1NGSnNaR2xUUlVwMlZtMHhORmxXU1hsVmEyaFdZVEZ3VVZadGN6RlhSbFp6Vm01S2EwMVdjSGhWTW5CRFlWVXhWMUpxVWxkTmFsWlVWbXRrUzJOck5WbFNiRnBvWVROQ01sWnRNVFJaVjA1WFZXNU9WV0pYYUZSWmEyUXpUVVphY1ZOcVVsVk5WbXd6VkZaYWMxVnRSWGxsUmxwVlZteHdNMVJVUm1GalZrcDBVbXhPYVZJeFNqUldha28wWVRKR1YxZHJXbGhYU0VKWVZqQm9RMU5HYkRaU2JIQnNVbTVDU2xaSGVHOWhSMVp6VjJ4c1YxWjZSWGRhUkVwSFVqRmtjbHBHWkdsV1ZuQjVWa1prTkZsV1pFZGhNMlJZWWxoU1dGUldXbmRUUmxsNVpVaE9WMDFyY0ZwWlZWSlBXVlphYzJOSGFGZE5SbFkwVm0xNGQxSXhXblJoUjNob1RWaENTbFpxUmxOUk1rWnlUbFprV0ZkSGVGUldNR1J2WTFaV2RHVkZkRmROVm5CNVZtMDFhMVpyTVZsUmJHaFhUVzVvVUZZd1dscGtNV1J5WWtaYWFWZEhhRkZYVmxwaFdWZE9kRlJyVmxSaVIxSndWV3BCTUUxR1pITmFTSEJzVW0xU1NGWlhOVXRaVmtwMFZXNUNXbUV4V2pOV1ZscGhaRWRXUjFkck5WZGlTRUpKVjFkMGIxTXhiRmRUYTJSVVltczFWMWxzYUc5WFJsSnpWMnhPVjAxV1dubFdSM2hyVkd4YWRHUXpjRmhXUlVwb1dWUkdXbVF3TVZsU2JHUnBZbXRLV1ZkWGVGTlNNVkpIVjFob1dHRXlVbkZVVmxwaFpXeGtjbHBJVGxaTmEzQklXVlJPYTFZeVNraFZhazVXWVd0YVUxcFdXbE5rVmxKelYyMXNhVkpZUWxaV01XUXdZVEZWZUZWWWFGWmlSbkJYV1d0V2QyTnNVbGRYYm1ST1VteEtXRlpYZUU5WFIwcEhZMFJDWVZaV2NIWldNR1JHWlVkT1NWTnNjRmROTW1oTlZtcENZVll5VFhoVmJrNXFVakpvVDFadGVGcE5SbHAwVFZSQ1dsWXdNVFJXTW5oclZrZEtjazVZUmxaaVJrcFlXVEJhVjJSRk5WWlVhemxYWWtoQ05GWlVSbTloTVZGNFYxaGtWMkZyTlZaV2JYaDNaR3hhZEUxVlpHcGlSVFY2V1ZWYWQyRldTWGxoUkVwWVZteGFhRmRXV2t0V01VNTFWVzEwVTJGNlZuZFdWM0JIVTIxUmVGZHNhRTVXUmtwWVZGWmFjMDVHV1hoaFNFNW9VbXR3ZWxZeWVITldNa1Y0VjJ0NFdsWldjSEpXYWtaM1VqRlNjMkZHVG1sU1dFRXhWakZrTUZsV1dYbFNiR1JoVWxad1ZWbHRNVk5YUmxweFZHdE9WbEp0ZUhoVmJURXdWakF4V0ZWc2NGcGhNbEYzVmxSQmQyVkdUbk5XYkdSVFlsWkdNMVl4V210V01rMTRWMnhzYVZKVWJGaFpiRnBMVjBaa1dHVkdaR3ROVlRWWVdUQmFZVmRIU2xWaVJtaFZWak5TTTFZeWVITldiRnB4Vld4b2FWSnVRbGxYVkVKaFlURnNWMWR1VWxaaVIyaFhXV3hTUjFaR1ZuRlNiRTVyVWpCd1NGZHJXbTlWTVZwWlVXdHdWMkpVUWpSVVZXUkdaREExVmxwR2FGaFNNbWhhVm1wQ2EwNUdXbGRpUmxaVFltMVNjVlp0ZUdGbFZscDBUVlZrV0ZKc2NEQmFWVnBoVm0xS1dWVllaRmRXTTA0MFZqRmFSMk14Y0VkYVIyeFRZVE5DU2xZeFdtdGxiVlpIVjI1S1QxWnRlSEZWYlRGVFkwWlpkMXBIT1ZaV2JWSllWbTB4TUZZd01YSk5WRkpZWVRKb1VGWnFTa3RUUmxaellVWldWMUpWY0UxV2ExcGhXVmRPYzFadVNsUmlXRkpQV1d0YWQxTldXWGxrUnpsVVRXdGFTRlV5ZUZkaFZrcDBaVVprV2xZelVtaFdSVnBoWTFaS2RHUkdaRTVoTVhCTFZqSjBZVlF4VW5SVGEyUnFVbTE0V0ZsclpGSk5SbXhWVTJ0a1UwMVZOWHBaVlZwaFlWWkplbUZHYUZoV00yaDJXV3BCZDJWR1duVlNiRTVwVWxSV2VGWkdXbUZrTWxaeldraEtXR0pVYkc5V2JYaDNWMnhXV0UxVlpGaFNiSEI2VmpKNGIxWlhSWGhqU0hCWFlXdGFVRmt5ZUd0ak1rWklZVWRvYkdKR2NGcFdha1pyVGtkSmVWTllaRTVUUjJoWVdXMXpNVmRXYkhKYVJrNXFZa1phZUZWWE5XdFdSa3B6WTBWc1lWWlhVWGRXYlhONFVsWkdjVlpzYUdoTlZYQnZWbTF3UzFNeFpGaFNhMmhvVW01Q1dGVnNWbHBOUmxwWVkwVmtXbFp0VWxsVmJYUnJXVlpKZVdGRk9WcGlSMUoyVm1wR1dtVkdaSE5VYkZKT1VrWmFTbFpVUm05aU1WbDVVMjVPVkdGNmJGaFpiR2hPWlVaa1YxZHRSbXRTVkZaWFZrZDRiMVl5U25KVGEyaFlWbXhhY2xSVldtdFNNVTUxVTIxd1UxSldjRmhXYlhCUFlqSlNjMWRZWkdGU1ZuQnpWVzE0ZDFkc2JGWlhibVJvVWxSR1dsVlhkRFJYUjBwSFYyMW9XbFpGY0ZCYVJWcExZMnh3U0ZKc1RtbFdhM0JSVm10YWFtVkhSWGRPV0U1WVlteEtUMVl3WkZOV1ZsSlhWMjVPVDFac2NFbFViRlUxVjBaSmQyTkliRmROYm1oeVZqSXhSbVZXVm5OVmJHUlRVbFp3TmxkclZsWmxSbVJHVDFab2JGSnRVbkJWTUZaTFUyeGFkR1ZIZEU1U01GWTFWV3hvYzFaSFNraFZiR3hhVmtWd2RsWXhXbk5XVmtwMVdrZDRhVkl6YUZsV2Frb3daREpLUjFkWWFGaGhNbWhZVm1wT2IxZEdXbkZTYTNSWVZtdGFlRlV5ZUc5V01rcEhZMGM1VjAxV2NHaFZNakZYVTBaS1dXTkhjRk5OYldoVlZrWmpNV0l4VmtkWGJHaHJVbTFTWVZadGN6RlhSbGw0WVVoT2FFMVZiRE5XTWpBMVZsWmFkRlZzVWxWV1ZuQm9Xa1ZWTVZadFVrZGhSazVPVTBWSk1WWXhVa05aVjBsNFdraFNWR0V5VWxWWlZFcHZZVVpXY1ZSdE9WZE5XRUpZVjJ0YWExWkdTbkpqUkVKaFVsWndVRlpxUmt0ak1rNUhZMFprYUdFeU9UTldNVnByVlcxV1IxcEdiR2xTYXpWWlZXcE9iMlZXWkhOYVJFSlVUVmRTU0ZscldtOWhNVTVJVldzNVZWWnNjRE5hVlZwWFpFVXhWVkZ0YUU1V1dFSTJWMVJDVTFJeFduSk5XRlpWVmtWYVdGbFhkSGRVUmxaMFRWVTVWRkl3V2toWGEyUnpWMFpKZVdGRVZsZGlXR2hVVldwR1ZtVkdUbGxpUmxab1RWaENXbGRYZEd0aU1rNUhWbTVHVTJFelVuTldiWGgzVjFaU1YxVnNUbGRTVkVaR1ZXMTBiMWRyTVVkWGJXaFhZV3RhYUZWdGVHdGtSVGxYV2tkc1YxSldjRlpXYkZKSFdWZEZlVlZzYUZWaE1YQm9WVzB4VTFReFZuSldiVVpZVm0xU1ZsVlhNVEJoVlRGWVZXdG9WMDFxVmxCV2FrWnJVMGRHUjFwR2NHbFNNbWhSVmtkMFlWbFhVa1pOVmxwaFVtczFUMVp0ZEhaa01XUllaRWRHVlUxV1NqQlZNbmh2WVVaS2RWRnNhRnBXTTFKb1dUSjRVMk5zY0VaalIzaFRZa2hDWVZkWGRHRldNa1pHVFZoT1ZHSkhlRmxXYm5CR1pERmtWMWR0UmxOTmEzQktWa2Q0YTJGV1dsZGpSbWhYVm5wRk1GcEVRWGhTTVZaeldrWmFhR1Z0ZUZkWFYzaFhaREZPUjFkWWJHcFNWVFZaV1Zod1IxTkdhM2RYYTA1WVlrWndXRmt3Wkc5WGJWWnlZMFpDVm1KR2NFaGFSVnBMWXpGd1IxcEhiR2hOUm10NVZtMHdkMlZIVVhoU2JsSlhZVEpvVmxsclpGTlhWbXgwWkVoa1YwMVhlSGxYYTFwUFZsVXhXR1ZFUWxwTk0wSkVWa2Q0UzJSR1ZuTlhiRnBwVmtWV00xWnRkRlpsUmxwMFZHdGthRkpzY0U5WlYzaGhWVlphZEdORmRGUk5WWEI1Vkd4YWMxWlhTa2xSYkdoV1lrWndNbHBXV21GU01YQkZWV3hvYVZac2NFbFdNblJ2VlRKR2MxTlljR2hTYkVwaFZqQm9RMUl4Y0ZobFIwWlRUVlp3TUZReFpIZFViRnAxVVd4d1YxWXphSFpaYWtaclUwWk9jbGRyT1ZkTlJuQm9WMVpTUzFVeFZYaFZiRnBZWWtoQ2NsUldaRk5sYkZwSVpVZDBhRlpyYkRSVk1XaHZWakpHY21KRVVsVmhNbEpJVm1wR1QyUldXbk5UYldoT1lsZG9XbFpyV21GWlZrMTRWbXRrYVZORldsVlpWRXBUWTFac1dXTkZaRmhpUmxZMVdsVmtNR0ZHU1hkWFZFcFhZbGhvY2xacVJrdGpNazVKVTJ4d2FHRXhjRTFXVjNCSFlUSk5lVkpyV2s5V2JWSlpWVzEwZDFsV1duTmFTR1JUVFZkNFdGVXhhRzlXYkdSSVlVWnNXbUpHV21oWmFrWlhZMVpHYzFwRk5VNVdiWGN3VjFaV2IyRXhaRWRUV0dScVVsZG9ZVlJWWkZOa2JGbDVaVWRHVTJKSFVqQlpWVnByWVVkRmVHTkdWbGhoTVhCb1ZrUktVMUl4VG5WVWJGWm9aV3hhZDFkWGVHdGlNV3hYVjI1U1RsTkhhRTlWYlRFMFYwWnNjbGR0UmxWaVJUVkpXVlZhYzFkc1drWmpSbEpYVFZad2VsbDZTa2RTTVZKelZtczFWMkpIT1ROV01uaFhWakpGZUZWWWFGUmlhelZ3Vld0YVlXRkdWbk5hUlRWT1ZteHNNMWRyVmpCV01ERllWV3BHV21FeGNISldSekZMWkVkR1NFOVdaR2xXUlVrd1ZsaHdSMkV4WkVkVGJrcFlZbGhvVkZsc1drdGtiRnBIVjIwNVVrMUVWbnBXTWpWVFZHeGFSMU50UmxkaVdHZ3pWakJhVjJSRk5WZFViV3hUWVROQmQxWnNZekZSTVZwMFUyeFdWMkV4U21GV2JGcDNZVVp3UmxwR1pGUlNNVXBIVkRGYVQxUnNXbGRoTTJSWFlsaENTRmxxU2tabFJsWjFWR3hvYVdKRmNGaFhWM1JyWWpGc1YxZHVSbFZpVkd4dlZXMTRjMDB4V1hsbFIzUm9UVlpzTTFSc1ZtdFhSMFY1VlZSQ1YyRnJjRXhaTW5oUFkyeHdSMXBHWkdsVFJVbDVWakZhVTFNeFNuUlZXR1JPVm14d1dGbHJaRk5qUmxaeFUyMDVhRkpzY0RCYVZXUkhZVEF4VjFkcmFGZE5WMmh5VmpCa1JtVnNSblZVYkhCcFVteHdiMVpVUm1GVmJWWkhXa2hTYTFKdFVrOVZhMVpLWld4YVZWTnFRbFpOVjFKSlZUSjBhMWRIU2toVmJXaFdZVEZhTTFZd1dsZGpWa3AwVW0xd1RtRXpRa3BXVnpFMFZERlNjMU51VmxKaVJuQllXV3hTUm1ReFpGZFhiazVZVW14d01WWkhNVWRWTWtwWFUyNWFWMVpGU25KV1ZFWnJVakZXYzFwR1pGZFNWbkJhVmxjeE5HTXdOVmRqUmxwaFVrVktXRlJWVWtkbFZsbDVUbGhPVjJGNlJuaFZWbEpIVmpKS1IyTkhhRnBsYTFwb1ZqRmtSMUl4WkhKT1ZtUnBZVEJaTWxadE1IZGxSVFZIVjFoc1ZXSnJjRkZXYlRGVFlqRldkR042UmxWTlZsWXpWbTEwTUZaSFNrZGpTSEJYVmpOUmQxbFVRWGhXYXpGVlZXeG9hRTFXY0RKV2JGSkxVekpPZEZScmJGTmlSbkJ3VldwR1MwMXNXbkZSYlVaV1RWWndlbGRyYUU5WlZrcFZZa1pTV21FeVVYcGFWM2hhWlZkU1IxcEhhRTVXYmtKSlZsUkpNVk15Um5OVWEyaHNVbXh3WVZsVVNsTldSbkJZWlVkR1YxWnJOWGxhUlZwVFZUQXhWbUV6YkZkV2VrVXdXVlJLUjFOR1NsbGlSa0pVVWpGS1dWZFhlRzlSTVU1SFYyeFdWR0pGTlZSVVZtUlRUVlpWZVUxWE9WWk5hM0JJV1RCb1lWWXhTblJWVkVKV1pXdHdWRmw2Um10amJIQkhWMjFvVGsxVmNGSldiR040VGtac1YxcEZaRmhYUjJodlZXcE9VMWRXVm5GUmJtUlhUVlpzTlZwVldrOVdNREZ5WTBaYVZtSllhRlJYVmxwaFZqSk9TR0ZHV2s1U01VcFZWbGN4ZWs1V1dYbFNhMmhwVW1zMWNGbFVRbkpsVmxwMFpVWk9WRTFFVmtoWmExcHJWMGRLY2s1V2JGcFdNMmd6VmpCYWMyUkhVa2xhUm5CWFlraENORlpyWkhwT1ZsRjRVMjVPYVZKRk5WaFVWelZ2WTJ4c1dHTXphR3BpUjFKNVdWVmFkMVJzU25WUmJteFhZbGhDVEZWNlNrOWpNVkoxVkd4U2FWSXhTbEJXYlRBeFVUSkplRmRZYUZoaVZWcFdXV3hhWVZkR1duUk9WVGxhVm10d2VWUnNhRU5YYkZwR1RsVlNWMDF1YUhKV01HUlRVMFU1VjFOck5XaE5ibU4zVmpGa01GbFdXWGhYYkdoVFYwZFNVRll3VlRGWFJteHpZVWM1VGsxWVFsaFdNakV3VmpGYWMxTnFRbFZOVm5Cb1ZrZDRTMUpzWkhGV2JHUlRUVEpvTWxkclVrZFpWMDV5VFZac1UySkhVbTlVVnpGdlYxWmtXR1ZHVGxOTlZrcElWbTAxUjFVeVNsbFZia1phVjBoQ2VsWXdXbHBsVlRGWlZHeG9VMkV6UWpWWFYzUlRXVlpaZVZOcmFGWlhSMUpaVm0weFUxSXhjRmRYYkU1WVZqQmFTVmt3V2s5V01EQjVZVVJTVjJKSFVqTldSRXBLWlVaa2NscEhiRlJTV0VKMlZsZDRWazFXWkZkWGJsSnNVMGRTVDFWdGVFdFhSbHBZWlVVNWFGSXdXVEpWYlhoeldWWmFWMk5JV2xkaVdFNDBXVEZhWVdOdFZrZGFSMmhPWWtWd1RsWnNVa05oTVVsNFUxaG9hbEpYVW5GVmFrbzBWa1pTV0UxWE5XeFdiSEF3VkZab2ExVXdNWE5TYWxKWFRXcFdVRmRXV2s5U01VNXpWV3h3YUUxV1ZqUldhMUpIV1ZkU1JrNVdXbFZoZW14d1ZXMDFRMDVXV1hsa1JrNVdUV3RhUjFSV2FFdFhSMHBJWVVab1ZWWXpRbGhXVlZwelYwZFdSbVJHYUZOTlJuQkpWMVpXWVZsWFJraFNhbHBYWVd0d1dGbFhkRXRoUm1SWFdrVTVWMDFWTlRGV1YzaFBZVlprUmxOc1FsZGlXRUpJVlhwQk1XTXhjRWRoUjNSVFRVWndhRlp0Y0VOWlZtUlhWbTVPYUZJelVtOVphMVozVFVad1ZsZHVUbGROYTNBeFZWZDBUMWxXV2xkalJtaFhZa1p3VUZsNlJuZFRSMDVHVGxkb1RsWnRkRFZXYWtaclRVZEZkMDVWWkZoaE1sSlZXV3RhWVZkR2JISmFSRkpZVW14YU1GcFZhR3RoTWtwSFYyeGFWbUpZVFRGV2FrRjRWakpPUlZKc1pGZE5NREUwVm1wQ1lWTnRWa2RVYms1b1VtMVNWRmxzV2tkTk1XUnlWV3QwVjAxV2JEUldNbmh6WVZaSmVtRkdWbFpoYTFwTVZqRmFZVkl4Y0VWUmJYUk9WbFJXU1ZkV1VrOWhNV1JJVTJ0YVQxWnRlRmRaYkdodlRURndXR1ZJU210TlYxSjVWa2Q0YjJGV1duTmpSRlpYWVd0dk1GVlVSbXRqYXpGWlZtMW9WRkpZUW05V1YzaHJWVEZTUjFadVJsTmlSVFZ4VkZaYVMyVnNaSEpYYXpsb1ZtczFSMVV5TVVkV01rcFZVV3BPWVZKRmNGTmFWbHBoWTJ4a2NrOVdaRmROVlhCWVZtMXdRMkV3TlVkWFdHaHBVMFZ3YUZWdGN6RmpWbHAwWlVkR2JHSkdiRFZVVmxaclZqSkdObEpzYUZwaE1VcFFWakJrUm1WV1VsVlNiR1JwVjBkb1RWZHJWbXRXTVU1WVUydGtZVkl5ZUZoVmJYaDNUbFphZEUxWVpGUk5WVEUwVlRGb2IxbFdUa1pPV0VKV1lsUldSRlpFUmxOV1ZrWnlaRVpTVjJKSVFYZFdSbHB2WkRKS1IxTnVUbXBTUlVwWFZGYzFVMWRHV1hkYVJYUlVVbXhhZWxaWGVGZFdNVXBXWTBVeFYySllhR2hYVm1SVFUwWlNjbGR0UmxOaVJYQlFWbTE0YjFFd05YTlhXR3hyVW5wc1ZsUldXbmROUmxWNVpFZDBhR0pGY0RCWlZWcGhWakpGZUZkclpHRlNSVnBVVm0xNGEyUkdTblJrUms1WFVsWndhRll4VWtOaE1EVkhWbGhzVkdFeWFISmFWM1JMVjBac1dHUklTbXhTYkhCR1ZXMHhNRlpHU25KT1dHeGFWbFp3YUZsV1drdGpiVTVIWWtab1YwMHhTbmxYVjNCSFV6RkplRmR1VmxOaVJUVndWVEJXUzJWc1dsaE5TR2hPVWxSV2VsbHJXbUZXTVZwSFYyeGtWVll6VW1GVVYzaFhZekZXY2xwR1pFNWhNMEpKVjFSQ2IxbFdaSFJTYmtwcVVsZG9ZVnBYZEdGVlJtdzJVbTVrVkZJd05VaFdSM014WVZaWmVXRkdjRmRoYTFwb1ZsUkdTbVZXVmxsaFJscG9UV3hLZGxaR1VrdFZNV1JYWWtoS1lWSnJOWEZXYlhoTFYwWlplVTFWWkZWaVJuQjZXVEJXYzFaV1duTlRhMUpYWWtkU1RGVnFTazlUVjA1SFkwVTFVMkpyUmpaV2JYQkRZVEZLZEZaclpHRlRSa3B2VlcweFUxWkdWbk5YYm1ScFRWZFNXbGt3Vm10V1ZURllWV3hvV2sxR1duWlpWM2hMWTJzMVYySkdXbWxTYkc5NlYxZHdSMWxYVWtaTlZsWldZa2hDV0ZSV1ZscE5WbHB5V1hwR1ZVMVhVa2hYYTFadllrWktWV0pHYUZwaVJrcElWbXRhY21WR1pIVlViWEJPVm01Q1YxWlhNVFJWTVZWNVUyeHNhRkp0YUZoVVZ6VlRWMFpzVlZKc2NHdE5SRVphVlRJeGQxVXlTbGhoUm1oWFVtMU5lRmxxUmt0U01XUlpXa2RHVTFkR1NsVldSbHByVlRBeFYxWlliR3hTTTFKdlZXcENWMDVHYTNkV2FsSllVakJ3U0ZZeU1XOVhSbHAwVld4U1YyRnJXbGhhUmxwWFpFZE9SMVJ0YUd4aVJtOTZWbTB3ZDJWRk1VaFZXR1JQVjBVMVdWWXdaRzlYVm14eVZsUkdWMUpzU2xoWGExcFBZa1phYzFOc2FGZGlWRVYzVmpCYVNtUXlUa2xpUm1ST1ltMW9XVlpxU2pSWGJWWjBVbXRhYkZKdVFtOVpWRVozVmxaYWRFMVVVbGROYXpWNlZsYzFTMVZHV25KT1dFSlhUVWRTZFZSVldtRmtSMUpJWTBkMFRsSkdXbGxXTW5SWFlURmFTRk51VGxSaVIxSmhWbXRXZGsxR2JGWlhiVVpxVFZoQ1NWUXhXazlWTWtwSlVWaGtWMUpzY0ZoWlZFcEhaRVpLY1Zkc1pHbFRSVXBaVmtaak1XSXlVbk5YYmtaVVlUTlNWVlp0ZEdGbGJGcDBaVWQwYUZJd1ZqTlpNRnB2VjBkS1IxZHRhRnBXUlZwTVdUSnpOVll4Y0VkaFIyaHNZbGhvV2xZeFdtOWtNVmw1VlZob1dHSnNTazlXYTFaTFkyeFNWMXBHVG14aVJtdzFWR3hXYTFack1YSmpSbHBhWVRKb1RGWnNXbUZqTVdSMVkwWldhVkp1UWxsWFdIQkxVakZPUms5V1pHaFNhelZQVlRCV1NrMXNXbk5WYTNCclRVUldXRll5TlZOV1IwVjVZVWM1Vm1KR2NFeFdNRnBUVm14a2RWcEhlR2xTTTJONVZsY3hOR0V5Um5KTlZteFNZVEpvWVZac1duZFZSbXhYVjIxR2FtSlZOVWhaTUZwcllWWmtSbE5yTVZkU2JGcHlWbGN4VjFZeFVuVlRiVVpUWWtWd2QxZFhkRmRrTVdSSFdrWm9UbE5IYUhCVVZtUlRVMFpzY21GRk9XaFNhMjh5V1d0Vk5WWldXblJWVkVKaFZteHdjbGt5ZUdGa1IxSkhWbXMxYUUwd1NrcFdNVkpEWWpKUmVGZFliRlJpUjNodlZUQmFkMWRHYkZoa1NHUlZVbXhhZUZVeWN6VldSbGwzWTBWb1dHRXhjSFpXYTFwTFZtMU9SazVXWkdsWFIyaFZWbGR3UjFReVVrZFhia3BoVWpCYVZWVnRlSGRYVm1SWVpFZEdhMDFyTlVoV2JUVlRZa1pPU0ZWdVNsVldiSEF6V2xWYVYxZEZNVlphUm1SVFZrVmFXVlpxU2pCaU1XUklVbGhvYWxOR2NHRlpWRVozVkVaU2RFMVZkRlJXYTFwNlZtMTRhMVl5UlhwUmJIQlhZbGhDUkZkV1pFWmxWbEoxVkcxR1ZGSnJjSGxXVnpCNFlqRmFSMVZzV21oU1ZUVlpWVzE0ZDJWR1ZYbGpSazVXWVhwR1dGa3dVa05XYXpGMVZXNUtWMkV5VWtkYVZtUkhVakZ3UjFac1pHbFRSVVkyVm0xd1ExbFhVWGhUYms1cVVsZFNhRlZ0ZUV0V1JscHlXa1JTV0Zac2JEVmFSV1F3WVdzeFYySkVVbGhoTVZwb1ZtdGtTMWRIUmtkaFJuQnBVakpvTWxkVVJtRlZNVmw0V2toS1dHSllhRlJaYkZwS1pVWmFjMXBFVWxWTmExcFpWV3hvZDFWdFNrbFJiR3hYWVdzMWRsa3llSE5qVmtwMFVtMXdUbUV6UWt0V1ZFbzBZakpHV0ZOc1pGUmlia0paVm1wT1UyRkdWalpSV0doVFRXczFTRll5ZUd0aFIwVjNZMGhhV0ZZelVtaGFSRXBYWXpGa1dXSkhjRk5XVkZaYVYxZDRWMVl3TlVkaE0yUm9VbGhTV1ZsclduZGxiR3QzWVVWMFYyRjZSa2xXVjNSdlZtc3hTRlZyYUZaaGExb3pWVEJrUzFJeVJrZFViR1JZVWxWd1VGWnRNSGhOUm14WFlrWmthVkp0VWxWWmJYaExWMFpzVlZOc1RtcFdiRnA2VjJ0U1UxWXhXblJsUm5CYVRVWndjbFl3V21Gak1XUjFZMFprVG1Gc1dubFhWbEpDWlVaWmVWUnJaR2xTTUZwVVZtMDFRMlZXV25GVGFsSmFWakF4TlZaSGRITmhiRXAwVlc1Q1YyRXhjR2hXTVZwclZqRndSVlZzVWs1V01VcEpWbTB3TVZZeFdsaFRhMnhTWWxSc1ZsWnFUbTlTTVhCRlVtMUdhbFpyY0RCVmJYaGhWR3hhZEdSNlFsZGhhMnQ0VldwR1YyUkdUbkphUm1ocFZrZDRiMVp0Y0U5Vk1rWkhWVzVPV0dKVldsVlZha1poVTBaa2NsZHVaRmROYTNCS1ZWZHdZVll5Um5KalJFNVlWbXh3VjFwV1drOWtWbHB6VTIxc1UwMXRhRzlXYlRGM1ZERlZlRlJyWkZaaWEzQlpXV3RrVTJOV1duUmpla1pzVm0xME0xZHJVbE5oUmxwelkwWmFWMkpZVW5wV2FrRjRaRlpXZEdGR1pGTlNWbkJvVjJ0U1FtVkdXbk5YYms1WVlrZG9WRlJXVm5kWGJGcHlWMjFHYUUxcmJETlVWV2h2VmpKR2MyTkdVbHBXUlRWVVdUSjRWMlJIVmtoU2JHaHBVakZLTlZacVNqQlVNVmwzVFZoS2FsSnVRbUZXYkZwM1ZrWlpkMWRzY0d4aVJscDZXVlZrUjFVeFNsZGpTR3hYWWxoQ1NGZFdaRk5XTVU1MVZHeFdhVll5YUZCV1JscFhaREZrVjFkdVVrNVRSMUp6VlcxNFYwNUdaSEpYYlhSb1lrVndlbGt3V25OWGJVcEhWMjFvVjJKWWFIcFpNbmhyWkZaU2NrNVZOVmRoTTBFeVZtMXdTbVF3TlZkWFdHUk9WbTFTY0ZWclduZFpWbHB6V2tjNWFGSnNjSGhWYlhSM1lrZEtWbGRyYkZwV1ZuQXpXV3RrUm1Wc1JuTlNiR1JYVWxad2IxWnNVa3RVYlZaWFZXNUtZVkl5YUZSWmExWjNWbFphZEdWSE9WSk5WM2hZVmpJMVUxUnNUa2hoUmtKV1lsUkZNRll3V21Gak1rWklUMVpvVTAxSVFqWldWRW8wVlRGa2MxZHJXbWxsYTBwaFZteGFkMWRHY0VaYVJtUlVVbXR3TUZrd1drOWhWazVHVW1wT1YwMXVhRmhaYWtwR1pVWldXV0pHVW1oTmJXaFlWMWQwYTJJeFpFZFhia1pWWVhwV1QxWnRNVFJYUmxwellVYzVWMDFFUm5sVWJGWnZWMnhhVjJOSGFGZFNla1pJV1hwR2EyTXhTbk5hUjJ4WVVtdHdOVlpzYUhkU01VNTBWbXRrVm1Kc1dsZFphMVV4WTBaVmQxWnJkRmhXYkhCWldsVmtSMkV3TVZoVmEyaFlZVEpvVUZacVNrdFdiR1IxVW14d2FWSnVRbTlXVkVKaFlUSk9kRkpyWkdGU2JXaFVWRlZvUTFsV1pGZFdiVGxTVFZad01GVXllSE5oUmtwR1RsWmFXbUpIYUhaWlZWcGhZMVpLZFZwR1RsZGlSbTkzVjFaV1ZrMVdXWGxUYTJSb1RUSlNXRmxzYUVOVVJsSldXa1ZhYkZKdVFrZFpWVnBQWVZkR05sWnVhRmRXZWtJMFdXcEdjMVl4WkhWVGJHUnBWbFp3VjFaWE1UUldNREI0VjFoc1RsWlhVbGhWYlhSM1ZteFdkR1ZIT1ZoU01GWTBXVEJhVTFZeFdrWmpSV2hWWWxob2FGa3hXbXRqTVhCR1RsZHNhVkpZUVRGV2Frb3dWVEZKZUZkdVVsZGlSMUpXV1cxMGQyRkdWbkZVYTA1WFVtNUNXVlJXVWxOWFJscHpZMFpzVlZac1NsUldhMVY0VmpGT2NtRkdjR2hOYldoSlZteFNTMU15VG5KT1ZtUm9VbXhhV0ZSVVJrcGxiRnBWVVcxR2FrMVdjSHBXTW5oWFZUSktTR0ZHVWxwWFNFSllWVEJhWVZaV1RsVlNiWEJPVm0xM01GWlVTVEZVTWtaelUxaHNhRkp0VW1oV2FrNVRUVEZaZDFkdFJtcFdhM0F3V2tWa2QxUnRSWGhqUldoWFVqTm9hRmxVUmxwa01ERlhWMjF3VTFKWVFsbFhWM1JyVlRBd2VGWnNWbE5pV0ZKeFdWaHdSMWRzV2toTldFNVhVbXR3V2xWWGVIZFhSbG8yVW1wYVZWWnNjSEpWYWtwTFVqSktTR05HVGxkTlZYQmhWbXhqZUU1SFRYZE9WV1JwVW14d2FGVnJWa3RYVmxaeFVXNWtWRkp0ZEROV2JURXdWakF4UlZKcVJscFdWbHBVVm1wS1MxZFdVbkZWYkZwT1VtNUNXVmRZY0V0U01VbDRXa2hTYVZKck5YQlpWRUozVmpGYWNWSnRPV3ROVlRFMFZURm9iMVpYUlhsaFJsWmFWa1Z3VkZadGVITmpNWEJJVDFaV1RsWXphRnBXUmxwdlpESktSMU51VG1wU1JVcFdWbTB4YjJOc1duSldXR2hxVFZWd2VGWlhlR3RWTWtwWVlVUktWMkpZVW1oWlZFWlBVMFpLY21GSGFGTmlTRUozVmxjd01WRnRWbk5YYmtwV1lUSlNZVlpxUmt0U01WSlhWMjA1VmxKc2JEVmFWVlUxVmpKS1dXRkVUbFZoTVhCb1ZtcEdjbVZ0UmtkVWF6VlhZbXRLV1ZacldtRlpWMGw1VTJ0a1ZXRXlhSE5WYlRGdlZteGFkV05HWkd0aVJrcFdWVzAxVDJGdFNraFZha0pXWWxSRmQxWlVTa3RTTWtsNllVWm9WMUpWY0c5WFZsSkxVakZaZUdORldsaGhlbFpZVlcxMGQxZHNXblJqUlRsV1RXdGFTRlpzYUhOVWJGcHlZMGhLVlZaV1NsaFdNRnBhWlZVeFdFOVdXazVoTTBJMVZsUktOR014V1hoWFdIQm9VbXhLV0ZsWGRFWmxSbXcyVW0xMGExWnNTbnBYYTJSelZqRmFkVkZxU2xkaE1YQm9WbXBLVG1Rd05WWmFSMFpVVWxoQ2RsWlhlRzlWTVdSSFZXeG9hMU5IVWxWV2JURTBWakZrV1dOR1pGaFNNSEJKVmxkMGQxWnNXWHBoU0ZwWFlsUkdURlZxU2s5VFJrcDBVbXhrVjJKclNqVldNblJYV1ZaTmVWUllhR0ZUUlhCUVZtMHhVMk5HYkZWUmJtUmFWbXh3TUZwVlpIZGhNREZGVW14b1YwMVhhSFpaVmxwTFpFWldjMVpzWkU1U01taEZWbXhTUjJNeFpGaFVhMnhWWWtkb1ZGbHNhRzlYYkdSeVZtMTBVMDFXY0ZoVk1qVlBZVlpLUjFOc2FGVldNMEpIV2tSR1lXTldSbGxoUm1ST1lYcFdSMVpXWkRSWlYwWlhXa1ZvYUZKdGVGaFpWRXBQVGtaV2RFMVdaRlJTYkVwNVYydGtjMVV5U2xkVGJHeFhWak5vY2xSVlZURlNNV1IxVlcxd1UxWXhTbGxXUm1RMFV6Rk9SMVpZYkd4VFJUVnZWVzEwYzA1c1ZsaGxSazVYVm14d1dGa3dVazlYYkZwWFkwZG9ZVkpYVWxCVmJYTTFWakZrY2s1V1RsTldWM1F6Vm1wR1lWVXhVWGxVV0d4VVlUSlNWVll3WkZOWFZteHlWMjFHVjAxWGVIbFdNblF3VmtaS2MyTklhRlppVkVWM1dWY3hTMU5XUm5KalJtaG9UV3hLTWxadGNFdFNiVlp6VW01U1UySkhVbGhaYkZwS1pXeGFjMVZyWkZoaVZscFlWa2MxUzJGR1NuTmpSbWhXWWtaYU0xWXhXbXRXTVhCRlVXeHdWMkpJUWtsWFYzUlRXVlpWZVZKcVdtbFRSWEJZV1d4b1RtVkdVbFpYYmtwclRWZFNlVlF4V210VWJVVjRWMVJLVjFadFRqUlZha1phWkRBeFYyRkdXbGhTTVVwb1ZtMTBWMWxXV1hoalJWWlNWa1ZhV1ZadGVFdE5SbXQzVjJzNWFGWnJOVWRWTWpGSFZqQXhXRlZVUWxkaGExcDZWbXBHZDFKc2NFZFhiV3hUVFZWd1lWWXhaRFJXTVd4WVZGaG9hVk5GY0doVmExcExZekZhZEUxV1RteFdiVkphV1RCYWExWXdNWEpYVkVwV1lsUldlbFpxU2t0WFZrWnpVV3hrVG1Kck5EQldWM0JMVkRGT1dGUnJaR0ZTTW1odlZGWm9RMlJzV25KWk0yaFBVbXN4TkZZeWVHdFZNa3B5VGxkb1ZtRnJjSFpaYWtaVFZteGtkVlJyT1dsU2JYY3hWMnhXWVdFeFpITlhXR1JYWVd4YVdGVnVjRmRXUmxwVlUydGFiRll3V2twV1IzaGhZVlprUmsxVVVsaFdNMEpJV2tSR2ExTkdXbkpoUms1cFVqRktkMVpYTUhoTk1ERkhWMjVHVkZkSFVsQldha0pYVFRGU1YxZHRkR2hXYTNCSVZUSjRiMVpXV25SVmJscGhVak5vYUZwRlpGZFRSMUpIVld4T1RsSnVRa3BXTVdRd1dWZFJlVkpyV2s1WFJUVlZXV3RhWVZkR2JITmhSVTVVVW14d1ZsVnRlSGRpUmtwMVVXdHdWMkpVUmtoV1ZFcExWakZPZFZwR1pGZGxhMFkwVmxaamVGVnRWa2RqUld4VVlrZFNjRlpzV25ka2JGcEhWMjEwVmsxVk5WaFdiR2h6WWtaSmQxZHRPVnBoTVZvelZqRmFjMVpzWkhSa1JtUlhZa2M0ZVZadE1UUlZNV3hYVTFod2FGSXlhR0ZhVjNSaFkyeHNObE5yT1ZSU01WcEpXV3RhYTFZeVNuSlRhekZYWWxob1ZGVjZRVEZUUmxaWllVWmFhV0pGY0ZaWFZ6RTBVekpHUjFWc1ZsVmhNRFZaVlcxNGQyVldXblJOVldSb1VtdHdlbGt3V21GV2F6RjFZVVpDVjJFeGNFeFpNbk14VjFkS1IyRkhhRTVpUlhCS1ZtMTRVMUl4YkZkVFdHaGhVMFUxV0ZsclpHOVhSbkJZWkVaa1RrMVdjRnBaTUZZd1ZUQXhWbUpFVWxoaE1taFlWbTB4UjA1c1duTldiRnBvWVRGd1RWZHNXbUZaVmtsNFkwVldWbUpJUWxoWlZFb3pUVVphYzFwRVVtaE5WbXcxVlRKNGMxWnRTa2hoUmxwWFlXczFWRll3V2xOak1XUjFWR3hrYVZJeFNqWldhMlEwWWpKR1YxZHNaRmhXUlVwWlZtdFdTMVpHV2tWU2JIQnNWbXR3V2xsVlpIZFdSazVHVTJ4c1YxSnNXbkpXVkVaclVqRmFXVnBHYUdoTk1VcDRWa1phYjFFeFRsZGlTRXBZWVhwc2IxWnFRbGROTVd4VlZHNU9WMDFyY0ZaVmJYQlBWbTFXY2xKcVVsWmlXRTQwVm0xNGQxSXhjRWRoUms1T1ZsaENVbFp0TUhka01sWkhWbGhvV0dKSFVuQlZNRnBMVkRGYWNsZHJkRmhXYkZvd1ZGWlNVMkpHV25SVmJteFlWMGhDV0ZsVlZYaGpiVTVHWVVad1RsSnVRbTlXYlRCNFV6RmFWMU51U21oU2JrSllWRlJCTUUxR1duUk5XSEJPVm0xU1dWWkhkR3RoYkVwVlZteFNXbUpZVWtoVWJYaGhaRVV4V1ZwR1RrNVdNMmhhVm10YWIySXhaRWhUYmtwWVlrZFNZVmxVU2xOa2JGbDNWMnhPVjFacmNIbGFSV1EwVmpKS1NWRnNjRmRTYkZwMldXcEdXbVF3TVZkWGJXeFRVbXR3V2xkV1VrdGlNVlpIWWtaa1dHRXpRbk5XYWtKaFUwWmFXR1ZJWkdoV2EzQXhWVmR6ZUZZeVNsbGhSMmhZVm14d1MxcFZXbUZrVms1MFpFWk9UbUp0YUZGV2JUQjNUVlpGZUZwR1pGaGlhMXBWVm10V1lWWnNVbGRhUkZKWVVteHdTVnBGYUU5V2JVcFdZMGhzVldKR2NISldNakZMVTBkR1NWZHNWbGRTVm05NlZtMXdSMkV5VFhoVmJrNWhVbFJXV0ZSV1ZuTk5NVmw1WkVaa1dsWXdWalJXVnpWVFZURmtTVkZzVGxwaE1taEVWakZhWVdSSFZraFNiWFJwVW01Q1IxWlhNSGhOUjBWNFUyNUthbEp1UW1GV2JHUlRUVEZhVlZKcmRGZFdiSEI2V1d0YWEyRldaRWhoUnpsWVlURktURlZxUmtwbFZrNXlWbXhvYVZKVVZuZFdha0poVXpKV1IxZHJaRmhpVlZwVlZGZDRZV1ZzV25OaFNFNW9ZbFphZVZZeWVHOVdWbGw2Vld4b1ZXSllhRmhXTUdSVFUxWndSMXBGTlZOU1ZuQmFWbXhTUzAxR1ZYaFhXR3hUWW10d1dWbHROVU5YUm14WVpFaGtWVkpzV25oVmJUVnJWVEF4VjJORVFscFdWbFY0VmpCYVMxWnRUa2RVYkdScFZrVkpNRlpIZEdGV2JWWlhWV3hzYUZKdGFGbFZha3B2WkRGYVdFMUlhR2xOYXpWNlZtMDFUMkZHU25KT1ZscFZWbXh3VEZZd1dscGxWMVpJWkVaV1RsWllRalpYVjNSVFZqRmFWMWR1VGxoaWEzQmhWbXhrVTFOR1VuUmxSWFJxVFd0YVNGZHJWVEZoVjBWM1kwVmFWMkpVUWpOYVZWcE9aVVp3UjJGR1RtaE5iRXBZVjFkMGIxRXhaRWRpU0Vwb1VsVTFWbFp0ZUhkbFJsWjBUVlZrVmsxRVJubFVWbEpYVm0xS1dWVnVTbGhXYkhCTVdUSnpNVmRXUm5OWGJXeFhVbXh3UmxadE1IaE9SbXhZVkZoc1UyRXllR2hWYlhNeFZERnNWVkpzY0U1U2JIQldWVzB3TldGVk1WZGpSbXhXVFdwV1RGWkVSbHBsVjBaSFdrWndWMDB3TVRSV1YzUmhXVmRPYzFwSVZsVmlXRUpQVmpCV1MxTnNXa1ZTYlhScVRWWktlbFl5TlZkVmJHUklWV3hzVjJFeFdreFdha1pUWXpGd1JscEdaR2hsYTFwWVZtMHhORk15UmtoVGExcHFVbTE0V0ZWdGVIZGpiR3h4VTJ4T2FrMVhVbHBYYTJSSFZURlplRk5zUmxoV00yaFlXa1JHVDJNeFdsbGlSM2hUVFRGS2RsWlhjRU5XTURCNFYyNVNhbEpyTlZoVVZscDNVakZWZVUxWE9WaGlWbHA1V1RCYVExZHRWbkpYYWs1V1RWWndVRmw2Umtkak1YQkdUbGRzVjAxdGFGaFdiVEV3V1Zac1YySkdhRlpYUjFKUVZqQlZNVmRXYkhSa1IwWlhWbTE0TUZSV1drOVdNVnB6VTJ4b1YwMXFWbEJXUjNONFZqRk9jMkZHWkU1aGEwVjRWbTF3UzFNeFNYbFVhMXBoVW14d1QxbFhkR0ZUVmxweFUycFNXR0pXV25wV2JUVlRZVVpLZEdGR2FGcGhNbWhEV2xkNFlXUkhUa1phUjJoT1lYcFdOVlpFUm1GaU1rWnpVMWhzYkZKdGFGaFpiRkpYVWtaVmVXVkhSbXRTTVZwSldUQmtORlV3TVVoa2VrSlhZa2ROZUZaRVJtdFRSazV5WVVkNFUyRjZWbWhYVmxKSFpESkdSMWRZWkZoaVJUVllWRlpvUTFOR1ZYbE5WRUpWWWtac05sbFZXbXRXTVZwR1lqTmtZVkpGY0V4VmFrWnJaRlpPY2s5V1pHbGhNSEJ2Vm0weE5GbFhVWGxWYms1cFVtMVNhRlZzV25kak1WWnhVVlJHVkZKc2NEQmFWV00xVmpBeFJWRnFWbHBXVm5CNlZtcEJlRll5VGtsVGJHUlRVbFp3YUZkc1ZtRmtNVTVYVjI1T1dHSlhhSE5aYTFwM1YyeGFjMWt6YUU1U01VWTBWMnRhYTFkSFJYbFZiR3hhWWtkb1ZGWnFSbE5XTVdSMVdrZDRhVkp0ZHpGWGExWnFUbFphV0ZOcldtcFNWMmhZVkZkd1FrMVdXblJOVlhSWVZteGFlRlpITVVkV01rcEpVV3BhV0ZaRmJ6Qldha3BQWTJzNVYxcEhhRk5OYldoNlYxWlNSMlF4VG5OWGJrNVdZVE5TVDFWdGVGZE9SbGw0WVVoT1YxSXdWalZaVlZwclYyeGFSazVZV2xkaGExcFVWbTE0YTJSV2NFZGhSazVwVjBkT05WWnNZM2hOUjBWNVVtNUtUbGRGY0ZCV2JHUnZWMVpzVlZKdVpGWlNiSEI0VlRKME1HRnRTa1pPV0doV1RXNW9jbGxXV210U01VNTFZVVpvYVZKc2NGaFdSbHBoVTIxV1YxUnVTbUZTTW1oVVdXdG9RMlF4V2xoalJXUlVUVlpzTkZkcldtOVViR1JKVVdzNVYyRnJTbnBVYTFwaFpFVTFWbHBHWkZOTlJuQTJWbFJLTkdJeFduUlRiR3hvVWxob1dGUldXbmRXUmxweFVtNU9UMkpHY0hwWGExcHJWR3hPUmxOcmNGZE5WMUYzVmxSR1dtVkhTa2RhUm1ocFVqSm9XRmRXWkhwTlZteFhZa1pXVTJKdFVsWlZiVEV6VFd4V2RFMVZaR2hpUm5CNlZqSTFkMWRIUlhoalJrSlhVak5PTkZadE1VOVNWbHB6V2tkc1YxSldXWHBXTVZwVFVqRlNkRlpzWkZaaVIzaHZWV3BDWVZaV1ZuTlZiR1JyWWtad1dWUlZVa2RWYXpGeVRsVm9WMkpVVmxSWmExcFBVMFpXZFZGc1ZsZGlTRUY2VmtaV1lXUXhTbk5qUlZwaFVqSm9iMXBYZEdGT2JGcFZVMnBDYUUxV2NGaFdNalZQWVd4T1IyTkhSbGRoTVZwb1ZrVmFZV014Y0Vaa1JsSlhZVEZ3TmxacVNYaGlNa1pHVFZac1VtRjZWbGhaYkdoRFUwWmtWMWR1VGxoU2JFcDZWMnRhVjJGV1NYcGhTRnBYVmpOb1ZGWnFSbUZTTWtwSlUyeGthV0pXU2xGWFYzUmhaREZhYzFadVVrNVNSbHB2Vld4U1IxZEdWblJqUms1WFRVUkdNVmxWYUdGWGJGcFhZMFYwWVZKRlduSlpla3BIVWpKT1NHRkZOVmhTVlZreVZtcEdZVll4YkZoVldHaGhVbGRvV0ZsVVNtOVdSbXh6WVVaT1YxSnNjSGxXYlRGSFYwWktkRlZ1YkZkaVZFVjNXVlJCZUdOc1pITmhSbHBPWW0xb1dWWnRjRWRoTVU1SFZtNU9hVkp0VW5CV01HUnZZakZrVjFadFJtaE5WbXcwV1RCV1lWbFdTbk5UYkZKYVZrVTFSRmRXV210V01WcDBaRWQwVGxac1dUQldha293V1Zaa1NGTnJiRkppUjNoWVdWZHpNVlpHYTNsbFIwWllVakF4TmxsVldrOVViVVY2VVd0c1YySlVSVEJXVkVwSFUwWmFkVlJzYUdsaWEwcFpWMWQ0VTFKdFVYaGpSVlpVWWtkU1dGUldaRk5YYkd4eVZsUkdWMDFWY0ZkWk1GcHZWakZLYzFkc1VsWldSVVY0Vm1wS1MxSXhaSFJoUms1T1RWVndXbFpyV21GWlYwMTNUbGhPVjJKSGFISlZhMXBMVjFac2MxWnRSbXhXYkd3MVdsVldUMWRIU2xkWGJteFhUV3BXVEZkV1drdGpNazVHWlVad2JHRXhjRmxYV0hCTFVqRkplRlZ1U2s5V01uaFlWRmN4VWsxc1duUk5TR2hPVW0xNFdWVnNhR3RVYkZwWVZXeHNWMDFIVWxSV1ZWcGhaRVV4VjFSc2FGTmlSM2Q2VmpKMFUxVXlSbkpOVm1SWVlXdGFZVlJWWkc5VlJteFlaVVYwYWsxWFVuaFZWM2gzVkdzd2QxTnJiRmRpUmtwRFdsVmFXbVZXVG5KV2JHUnBVbXh3V1ZkWGRHRmtNbFpYVjI1R1VtSllVbFZVVmxaelRsWlZlV1JHWkZoU01IQkpWbGQ0YjFsV1dYcGhSMmhWWWxob1lWcFZXbXRrUmtwelZXczFWMWRGU1RKV2Frb3dZakZKZUZkc2FGUmhNbEp4Vlc1d2MxbFdXbkpXYlVaT1lraENXVnBWWkVkWFJrcFZVbXhhVjFaNlJYZFdSM2hoVjBkU05sSnNaRmRsYTFZelYxWlNSMWxXWkVkVWJrNW9Vak5vVkZsclZuZFhWbVJZVFVSR1VrMXNXbGhXVjNoaFYwZEtWbGR1U2xaaVJrcElWako0YTJOc1pITlViRlpwVWxoQ1NGWnFTakJqTVZsNVVtNUtXR0pzY0dGWlYzUmhZMnhWZDFkck9XdFdhelY1VkRGYWExUnRTbGhoUm14WFRWZFJkMWRXWkZKa01ERkpZVVpvYVdFelFscFhWekY2VFZaa1YxWnVSbEpXUlVwUFdXdGFZVTFHY0ZaWmVsWlhUVVJHZVZrd1ZuZFdiRmw2VVd4U1YyRnJjRWRhVmxwVFkxWlNjMVp0YkZOTlZYQktWakowVjFsV1VYbFViazVxVWxkU2IxVnFTalJqUmxweFUyMDVXRlpzY0hsV01qRjNWR3haZDJKRVVsZFdNMUp5V1ZaYVMyTXhaSE5VYkdST1VqRktNbGRVUm1GVk1WbDRZMFZrVldKWWFGaFpiR2hTWld4YWNWTllhRTVTYkd3elZGWm9UMWRIU25SbFJtaFZWbnBXUkZsVldtRmpWazV5WkVaT1RsWlVWalZXYTJONFVqRlZlRk5zYkZKaVIzaFlWbXBPUTFOR1dsVlRiRTVYVFZaYU1WWkhlR0ZoVmxsNllVWldWMUp0VGpSWmFrWnJZekZrV1dGSFJsTlNWWEIzVmtaYVYxWXdOVWRhU0VwWVlsaFNXVlZxUW5kVFZteFdWbFJXVjJGNlJrbFdWelZoVmpKR2NsZHVjRnBsYTFweVdrVmFTMk14Vm5OVWJXeFlVbXRaTWxadE1IZGtNbFpHVFZWb1UyRXlVbGxaYlhSM1kwWldjbGR1WkZkTlZuQjRWa2N3TlZZeFNuTmpTR2hXVFc1U2NsbFhNVXRUUmxaMVlrZEdWMVl4U2tsV2JGSkNaREpXV0ZKcmFGQldiV2h2VkZaYWQyVldXblJqUldSVVlsWmFTRlp0TlZkV1YwcEhWMjA1WVZZemFHaGFSRVpoVjBVeFJWSnNTazVXVkZZMlZtcEpNVlV5Um5OVGJHaFdZbXRLVmxacVRsTmxiRkp6VjJ4a2ExSXhTa2xhUlZwclZqQXhSMWRVUmxoV2JGcG9XVlJHYTJSR1RuSmFSbWhwVmpKb1dWWkdWbUZrTWxaellrUmFWR0V5VWxSVVZscExaV3hyZDFkdGRHaFdhM0JhVlZjeFIxWXdNWFZoUm1oWVZtMVNSMXBXV2t0WFYwWkhWVzFzVTJKSVFscFdNV1F3WVRGVmVGZHVUbFppUjFKWldXMHhVMk5XYkhKWGJtUnNVbXhhTUZSV1ZtdFdhekZ5WTBWc1YxWjZWbnBXTWpGR1pVZE9TVk5zWkdoaE1YQk5WbXBDYTFVd05YTlNiazVoVW0xU1QxUlZWbmRUYkZsNFlVaGtVMDFYVWpCV2JYUnJWbTFLYzFkc1ZscGhNbEoyV1RCYVYyUkhVa2xhUm1oWFlraENXbGRzVm1GaE1rVjNUVlpvVm1KSGFGbFpWRVozWkd4c1ZWSnJjR3ROVjFJeFZUSjRWMVl5U2xkVGJGWlhWa1ZLYUZreU1WSmxSbVIxVld4T2FWTkZTbGxYVmxKUFVURnNWMWR1VG1GU1JrcFhWRlprVTJWc1pISldiazVXWWxWd01WVlhlRzlXVmxwelkwUk9ZVll6YUhsYVZtUlhVMGRTU0dSR1RrNVdXRUpMVmpGYVYxbFhSWGxTYTFwT1UwZFNWRmxYY3pGWFJsSllUbFpPVjFKc2NFWlZNbmhMWWtaS2RGVnNjRnBoTVhCVVdWWmFTbVZ0UmtkVmJHaFhZa1Z3VFZkWGNFZGpNVmw0V2toV1ZHSkhVbkJaYkZwTFYwWmFSMWR0T1ZKTlZtdzBWakZvYzFSc1dsaFZiVGxWVm14d00xcFdXbE5qTWtaSlZHeGtWMDFJUWtsWFZFSmhWVEZaZUZkcldsTmhiRXBZV1d4U1IxVkdWbkZTYXpscVRWaENTVmxyV205Vk1WcFpVV3RrVjJKVVFqUmFSRVpLWlVaV2RWVnNaR2hOYkVwWlYxZDBhMDVIU1hoV2JsSk9WbnBzY1ZWdE1UUldiRlowVGxkMFYwMXJjRWxXVjNoeldWWmFWMk5HUWxwV00wNDBWakJrVjFJeVJrZGFSVFZvWWtad1ZsWnRkR3RPUm14WFUxaG9WV0pyTlhCVmJURlRZMFphY2xkdFJsTldiSEJaV1RCV2ExZHNXWGhUYTJ4WFVqTlNhRlpzWkV0WFIwWkhWV3hrYUUxV2NHOVdha0poWVRGYVYxSnVVbEJXTTFKUFZtMDFRMDVXV2tkWGJUbFRUVlpzTlZVeU5WZFZiVXBJWVVkR1YyRnJOVlJaVlZwelZteGtjMVJ0ZEZOTlZuQktWbGN3ZUdReVJsZFhiazVxVWxkNFdGUlhOVk5oUmxwRlVteE9hbUY2UmxwV1Z6RnZWVEZhUjFkc2JGaFdNMmhVVlcxemVGSXhjRWRhUm1ob1pXeGFlbFp0TVRSWlYxWnpZa1phV0dGNmJHOVZiRkpIWld4VmVXVklaRmhTYkd3MlZsYzFTMVl4V2taalJrSldZV3RhY2xwR1drdGpNVlowWWtab1UyRXpRbE5XYWtaclRVWnNXRlZZWkU1V1YxSnhWV3hhZDJGR1ZYZGFSazVxVW14YU1GcEZhR3RpUjBwSVpVaHNWMVl6YUhKV2FrRjRWbTFLTmxOc1pHbFhSMmhGVm0xd1MxSnRWbGRXYmtwc1VtNUNUMWxYZEdGVlZscFlZMFZrVkUxck1UUlpNRlp2WVZaS2RHRkdVbHBXUlc5NlZGZDRZV1JGTVZWUmJGcE9WbGQzTVZacldtOWlNV3hYVTJ4b2FGSnRhR0ZXYTFaM1pHeGFjbGR1VG1waVNFSklWa2Q0YjFVeVNsbGhSRlpZVm14YVdGWkVSbUZUUms1eVlVWmFhV0pyU2xsWFYzaFRVbTFSZUZkcmFHeFNXRkp4VkZkek1WTkdaSEpYYkdSWFRXdHdTbFZYTURWV01rVjRVMnRvV0Zac2NISlZNRnBMWTJ4d1NHRkdUbWxTYmtKYVZqSjRhMDVHYkZaTldFNVlZbXRhVTFsc1ZtRlhWbXh6VjJ0a1QxSnRkRE5XYlRGSFYwWkpkMk5HY0ZwV1YyaEVWbTB4UzFJeVRrVlViRlpwVjBkb2IxZFljRWRrTVVwWFZtNU9ZVkpVVmxoWmJHaHFaVVphZEUxSVpFNVdiRVkwVjJ0V2IxVXlTbkpqUm14YVlUSlJNRmRXV21GamJGcDBVbXhXVTJKR1dYcFdha28wWkRKS1IxZHNWbE5pUjJoWldWUkdkMVZHV2tobFIzUlRZa1UxZVZwRldtdGhWa2wzVGtSQ1YxSnNXbWhXYlRGU1pEQXhWMkpHV21sV01taFZWMVpTUTJReFpITlhibEpPVmtaS1ZWUldXbUZUUmxwMFpVWmtWazFyV1RKWmExcFRWbFphZEdGRlVsWk5ibWhYV2xaa1YxTkdTblJoUms1T1ZtMDVNMVl5ZUZkaU1rMTRWMWhvVkdKck5YRlZNRlozVm14c1ZWSnVaRnBXYmtKWFZqSjRhMkZyTVZoVmFrSmFWbFp3VUZsclpFdFhWMFpIWTBaa2FWSXhTWHBXVmxKTFZXMVdSMXBJVmxWaVYzaFZWV3hvUTFkc1pGaGxSazVxVFZkU1dGbHJhRXRYUjBweVRsWkNXbUV4Y0ROV01WcDNVbXh3UlZGc2FHbFNia0kyVjFSQ1lXSXhaSEpOVldScVVteEtXRmxYZEVkT1JsVjNWMnhrYWsxcldraFdNbk14VmpKS2NsTnNXbGROYmxKWVdWUkdWbVZHVGxsaFJscHBZa1Z3ZDFaWE1IaGlNVnBIWWtaV1UySklRazlXYlhoM1RVWlNWMkZIZEZkU1ZFWkdWVzEwYjFkdFJYaGpTRXBYWVd0YWNsVXdaRWRTTVhCSFkwZHNXRkpVUlRCV2JURTBXVmROZVZWcmFGWmhNbmhvVldwT1ExZEdiSEpYYmxwclRWZFNlbFp0ZUd0VWJFcDBWV3RvVjAxcVZsQlpWM2hQVTBkV1IyRkdjR2xTTW1oVVYydFNSMk14WkVaTlZscHJVbXMxVDFac1VsZE9iRmw1WkVkR2FFMVdTakJWTWpWVFlVWktObUpHYkZkaVdHaE1WVlJHZDFac1pISmtSbVJPVmxSVmVGWnJZM2hrTVZWNVUyeGtWR0p0VWxoWmJHaFRWMFprVjFkck9WZE5WMUl4VmtkNFlXRkZNWE5UYkZwWFVteHdhRnBFUm10U01XUlpZa1U1VjFaSGVIWlhWM1JYWkRBeFIxZHNhRTlXVlRWWVZGVlNSMU5HV1hsa1JGSlhUVlp3ZWxrd1pHOVhiVlp5VjJ4b1drMXFSbFJWYWtaaFkyczFXR0ZIZUdoTlZsbDZWbTB4ZDFNd01VaFRXR2hZVjBkb1dWbHRlRXRXVm14eVdrUlNWazFYZURCWk0zQkhWMnhhYzJOSWJGZGlWRVpJVmtkemVGZFdSbk5hUm1ST1lXdFdNMVpxUW1GVGJWWkhXa2hLYUZKdGFHOVVWM2hIVFRGYWNscEVVbHBXYlZKSlZsZHdZVlZ0U2toVmJUbGFWa1ZhTTFSWGVHdFhWMDVHWkVaU1RsWlhkekJXYTJNeFZqRmFkRk5yWkdwVFJVcFhXVmQwZDJSc1duRlNiVVpyVWxSR1ZsWlhlSGRXTVZwR1UxUkNWMkpIVVRCWlZFWnJVMFpPY21GR1dtbFNNMmhZVjFkMFlWTXhUa2RYYmtaVFlsaFNjVmxyWkZOTlJuQkdWMnhrYUZacmNERlZWbWhyVmpGS1JsTnVXbHBsYTFwaFdsVmFhMWRYVGtoaFJrNXBVbGhDV1ZadE1UQldNV3hZVkc1T1YySnJXbFJaYkdoVFkyeGFkR1ZGZEd4aVIxSjVWakl3TlZack1VVlNha0phVmxkTk1WWnFRWGhrVjBaSlUyeFdWMVp1UWpaV2JURjZaVVpPV0ZKclpHRlNiV2hVVkZjeGIxbFdXWGhhUkVKWFlYcEdXVlpITlU5V01rcHlWMnhPV21KR1dtaFdiRnBYWkVkV1NWcEdVbGRpYTBwWVZqRm9kMVl4V1hsU2FscFRZbTE0V0Zsc2FFTmhSbHAwWlVkR2FrMVZOWGxhVlZwcllVZEZlbEZyYkZoV1JXOHdXVlJLVTFZeFVuVlViR1JwVWpGS1dWWkdXbGRrTVU1WFYxaHNiRkl3V21GV2JYaEhUa1prY2xkdE9WWk5hMVkxVmxkNGIxZHRTa2hWYmxwWFVrVmFlbGt5ZUdGa1ZuQkhZMFprYVZJelkzZFdiWEJMVGtaUmVGZHJXazVYUlhCd1ZXdGFTMWRHV25STlZ6bHJZa1pzTTFkclZqQmhhekZZVldwR1ZtSllhR2hXUjNoTFl6RmFjVlZzYUZkU1ZYQnZWbXhTUjFkdFZrZGpSV3hYWWxWYVZGWnJXbUZXVm1SWVpFWmthMDFYVWxoV01qVkhWa2RLZFZGc1FsZGlXR2g2Vkd0YVZtVlZOVlprUjJocFVsUldTMVpXWTNoU01XUnpWMnRhV0dFemFGaFVWVnAzWVVac05sSnVaRk5pVmtwSVZrZHpNVll5U25KVGJHaFhZa2RPTkZSclpFWmxSbFoxVkd4U1dGSXlhRlpYVm1oM1VqRmtSMkpJVGxaaE1YQlBWVzB4VTFkR1pISldWRlpYVFVSR1dGWXljRWRXTVVsNllVaEtXbFpzY0dGYVZ6RkhVakZhYzJGR1pFNU5WVzk1Vm14YVUxSXhiRmhVV0doaFUwWmFWMWxZY0ZkWFZsWnhVbXQwVjFKdFVsbGFWV1JIVjJ4YWNrNVZhRmROYmxKMldWUkdTbVZzVm5OaFJsWlhUVEZKZWxkc1dtRmpiVkY0WWtSYVYySkhVbkJXYkdoRFZqRmFXRTFVVWxaTlZtdzBWVEowWVZkSFNraGhSMmhXWWtad1YxcFZXbUZrUjFaSFZHMTBVMDFJUWtoV1IzaGhZVEZTYzFkc2FGQlRSMmhZV1d4U1EwMHhjRVZUYkdSVFlYcEdWMWRyV205aFZrcDFVV3hDVjJKVVJUQmFSRVpYVWpGa2RWUnRSbE5TYTNCWlZrWmFhMDVIVm5OaVJscFlZWHBzYjFsc1ZuZFRSbXQzWVVoa1dGSXdWalJXTVdoclZqQXhSMk5IUm1GU1JWcHlXVEl4UzFJeFduSk9WbVJwWVRCd1lWWnRNSGhrTVUxNFZGaG9ZVkpYYUZSWlZFWjNWakZzY2xwSE9XcFNiRm93Vkd4V1QyRlZNVmRpUkZKWFRXcEZkMVpzVlhoV01rcEZWV3hrVTJWc1dsbFdiVEI0VXpGa1YxSnVUbFppUmxwWVZXeGFkMVJXV25OV2JVWm9UVmRTU1ZaWGRHdFpWa3AwWVVoQ1YySllhRE5VYlhoaFkxWk9jVkZ0YUU1V01VcEtWbFJLTkZsV1pFaFRiRlpwVW14d1dGbFhjekZXUm14V1YyeGthbFpyY0hwV1IzaHJZVlphVjJORmRGZGhNazQwV1hwR1ZtVldTbGxqUmtwWVVqRktXVmRYZEd0VU1EVkhWbTVHVTJKWVVuRlVWbVJUWlZaWmVVMVlaRlpOYTNCSFdUQmpOVll4V1hwUmJFSmFZV3R3U0ZWcVJtdGtWbFowWlVaT1RrMVZjRFZXYkdONFRVZFJkMDFWWkdoTk1sSlpXV3hvVTJJeFduUmtTR1JZWWtaYVdGWlhkREJXTURGeVkwWndWMVo2VmtoWFZscGhWMFpXY21SSFJsZFdia0p2Vm1wR2ExTXhTWGhXYmxKb1VsUldjRlpxU201TlZscDBaRWRHVmsxV1JqUlZiR2h2V1ZaS1dGVnVRbFpOUmxWNFZtcEdjMVpXUm5WYVIzQk9WbXh2ZDFaR1dsTlZNVmw1VTJ0a1dHRnJTbWhXYkZwYVpERnNWMWRyZEdwTmF6VktXV3RhVjJGV1NYbGhSRnBYWVd0c05GVnRNVmRUUmxKeVYyMTRVMkpyU2xsV2JURTBWMnN4UjFwR2JHcFNWMUpXVkZkemVFNVdXa2hrUjNSb1VtdHdNRlpYTlVOV2JVcElZVVZTVmsxdWFHaFpNVnBMWkVaS2RHRkZOVmRoTVd0NFZtMTBZV0l5VFhoWGEyaFRWMGQ0VjFsclpHOVpWbXhWVW14YWJGSnRkRE5XTWpGSFlXc3hXRlZxUmxoaE1sRXdWbXBLUzFOV1JsbGFSbVJUWWtoQ1ZWWldVa2RoTWsxNFdrWnNhRkp0YUhCVmFrcHZZVVprVjFWclpHdE5hMXBJVjJ0YWExZEhSWHBWYkd4V1lsaG9hRnBYZUhOV2JHUnpXa1prVG1FelFrdFdWbHB2WkRGa1NGTnJaR3BTTW1oaFZGZHdSMVV4Y0ZaWGJtUlVWbXMxTUZWdGVFOWhWbGw1WVVaYVYwMVhVWGRaYWtaR1pEQTFXVlJzYUdsaE1YQldWbXBDYTJJeVRrZFZiR1JZWW1zMVQxUldXa3RYUm14V1ZtMTBWMkY2Um5sWk1GWnpWMnhhV0ZWcmFGaFdiSEJoV2xkNFYyUkhSa2RqUm1SWFltdEdObFpzWkhkU01rVjVWV3RrVkdKc1NuSlZiWE14WWpGU1ZWRnJjRTVpUm5Bd1drVmtkMkpHU1hkTlZGSlhUVmRvY2xaSGVHdFNNVTUwVDFaYWFWWkZXbFZXYWtKaFl6Sk5lRlp1U2xWaGVteFVXVzEwUzFJeFdsaE5XSEJPVmpCd1NGWXlOVXRVTVZwMVVXMUdWMkpHY0ROYVIzaHpWakZrY21OSGVGTmhlbFYzVmtSR1lXRXhXWGxXYmtwWFYwZFNXRlJXV25kaFJscDBUVlprVkZKck5YbFphMXBYWVZaSmVGTnVaRmRpV0dob1drUktWMUl4Y0VkaFIzUlRUVVp3VmxaR1dtdFZNVTVIVjFoc1QxWlViRmhaYkZaWFRsWmFXR1ZIT1ZkaVZYQmFWbGR3VDFsV1dYcGhTR3hoVWtWYVdGa3llRk5qTVhCSFdrVTFWRkpWY0V0V2FrWlRVVEpKZUZSWWFGaFhSM2hVV1cxMGQxZFdiSE5XYlVab1VteGFlVlp0Tld0V2JFcHpWMjVvVm1KVVZuSldWRUY0VjFaR2NscEdWbWxTTVVvMlYxWmFZVmR0VmxkaE0zQnBVbTFTY0ZaclZrcGxiR1J5Vld0MFYwMVZiRFJXVjNoellVWktjMWR0T1ZWV2VrWjJWbXhhYTFZeFZuSmFSM1JPVm01Q05sZFhkRzlUTVdSSVUyeGFXR0pIZUZkWmJHaHZWRVphZEdWR1dteFdWRVpHVm0weGIxVXlSWHBSV0dSWFlrZE5lRmw2UmxwbFJtUlpZMFphYVdFelFsbFdSbU14WWpGc1YyTkdXbGhoZW14eFdXeFdkMU5HWkhKWGJYUlZZWHBHVjFrd1VsZFdNREZYWTBoS1ZXRXhjRTlhVmxwWFkyeHdSMXBIYkdoTk1FcFRWbTB3ZUU1SFVYbFVhMlJZWW10d1dWbHNWbUZXUmxwMFpVaGtXR0pIZEROV2JURXdWMGRLUjJKRVVsWk5ibEo2Vm1wS1MxZFdWblZYYkhCWFRUSm9UVlp0ZUdGWlYwMTVVbXRrYWxJeWFFOVdNRlpMWWpGYWNsZHRSbHBXYlhoWVYydFdZVlJzV25OWGJHUmFZa2RTZGxaRVJtRmtSVFZXVkd4U1YySkhkekZYYTFaaFlUSkdjazFXWkZoaGEwcFhWRmMxVTJGR1drVlNiSEJyVFZkU01GVnRlSGRoUlRGelUycEtWMkpZVW1oWFZscExZekZ3U1ZWc1RtbFhSa3BWVmtaYVlXUXhUbk5YYkdoT1UwZG9jbFJXV25OT1ZsVjVaRWRHYUdKRmNFaFdNbmh2VjJ4YVJtTkdUbFZXVm5CNlZteGFTMk14WkhSbFJtUm9aV3haTVZadGNFcGxSMUY0Vmxoc1ZHSkhlRzlWYlRFMFYxWmFkRTFXU210TlYzUTFWRlphYTFVd01WaFZibXhYWWxob1VGbFdXazlTYkU1MVlrWmtVMkpHY0ZWV1YzQkhZVEZKZVZOcmJGUmlSMmh2VkZSR1MyUnNXbGhsUms1VFRXeGFlbFpzYUhOaVJrbDZWV3hvVlZac1dqTmFWM2h5WkRKR1JtUkdaRTVXYlRoNVZsY3hORlF4YkZkWGJHaFdZVE5vVjFsWGRHRmpiR3cyVW01a1UwMXJXa2hXUjNNeFlWWlplV0ZHYUZkaVZFSXpXa1JLVjFKck5WWmhSbHBZVWpKb2IxWlVRbFpOVjA1SFZtNVNiRk5IVWxsV2JURTBaV3hzVmxkck9XaFdWRVpZV1RCU1ExbFdTbGhoUmtKWFVrVmFURmw2Um1GalZsWnpZMFprVjAxdGFEVldiVEYzVVcxV1NGUnVVbFZoTWxKeFZXMTRkMWRHVWxWU2ExcHJUVlp3TUZSVmFHOVZNREZ5VGxSQ1YxSXpVbWhXVlZwYVpERmtjMkZHWkdsV1JscEZWbTE0WVdFeFpGaFVhMXByVW14S1QxWnNVbGRUYkZwWVRWUkNhRTFXY0ZsVk1uaHZZa1pLZEdGSFJsZGhNVlY0Vld0YWExWXhaSFJTYlhSVFRWWndTbGRyVmxaT1ZsVjNUVlZvYTJWclNsaFdhazV2Wkd4c2NWSnRkRlJTYXpVeFZUSnpOVll5U2xsaFIyaFlWak5vZGxscVJsTlNNa3BGVjJ4T2FWSXhTbmhXYlRFMFV6SldjMWRyYUd4U00xSldXV3RhZDJWV2EzZFhibVJZVWpCd1NGWXlOVXRXYlVaeVkwVjRWazFHY0ZCWk1qRkhVMGRTUjFSc1RsZFNiSEJoVm1wR2EwNUdWWGhUV0doVllUSlNXVll3WkZOWFZteFZWR3RPYW1KR1NsbFpNM0JIVmtkS1NHVkliRmROYm1oeVdWVmFZV050VGtWU2JGcFhUVEJLYjFadGNFdFRNVnBYVW01R1ZtSkdjSE5aVkVaM1lqRmFkR05GWkdoTmJFcFlWa2MxVDFkSFNsaGxSbEphWWxoU1RGWldXbUZrUlRGSldrVTFWMkV4YjNkV2JUQXhWREZrU0ZOdVRsUmhlbXhZV1ZSR2QxUkdaRmRYYlVaclVsUkdXRlpIZUc5V01rcEhZak5rV0dFeFduSlVWVnBhWkRBeFdWTnRjRk5pV0dob1ZtMTRhMkl4VmtkWFdHeHNVakJhVkZsclpGTk5WbXQzVjJ4a1YwMVZjRmhaTUdNMVYwZEZlRmR1U2xkaGExcFFWV3BHVDJSV1ZuUmlSazVYVW14d01sWnJXbUZaVjA1MFZWaG9XR0pyV2xWWlYzUkxWMFpTV0dSR1pFOVNiVko1Vm0wd05WWXhTWGRqU0d4YVRVWndSRlpxUVhoU01XUjBZVVprYUdFeGNGVldiVEUwWVRKU1IxTnVTazlXVkZaWVdXeG9hMDVzV25SalJYUlBVakJXTlZWdE5WTldSMFY1Vlc1R1ZtRXhXbWhXTVZwelZsWktkVnBIY0dsU2JrSlhWbFJLTUUxSFJuUlRhMXBQVjBkNFlWWnNXbmRqYkd4V1drVmFiR0pGV2xaVk1uaHJWVEF3ZVdGSWJGZFdla0kwVm1wR1NtVkdWblZXYkZacFVqRktkMVpYY0VkVE1sRjRWMnhvYWxKVWJIQlVWM1JoVTBaa2NsZHRkRmRpVlZZMVZsZDRiMWR0U2tkalIyaFdUVVp3WVZwV1ZURldiVkpIWVVaT1RsSnNhM2xXYlhoclRrZEplRmRZYkZSaVIzaFhXV3hrYjFkR2JITmhSemxZVW0xM01sVnRlR3RYUmxwMVVXdG9WbUpZYUdoV2FrWkxVbXhLVlZKVU1EMD0=