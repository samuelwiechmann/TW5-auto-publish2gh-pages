created: 20180529124106889
modified: 20180529124106889
title: C:\Users\Samuel Wiechmann\understand\wiki\tiddlers\favicon.ico
tmap.id: f9eccc22-f601-4aae-92f8-4e50c2382352
type: image/x-icon

created: 20180515075746309
modified: 20180515075746309
title: C:\Users\Samuel Wiechmann\understand\wiki\tiddlers\favicon.ico
tmap.id: 3dadd847-8d3e-4333-94d8-595c29907da5
type: image/x-icon

Y3JlYXRlZDogMjAxODA1MDMxODU0Mjc1MjIKbW9kaWZpZWQ6IDIwMTgwNTAzMTg1NDI3NTIyCnRpdGxlOiBDOlxVc2Vyc1xTYW11ZWwgV2llY2htYW5uXHVuZGVyc3RhbmRcd2lraVx0aWRkbGVyc1xmYXZpY29uLmljbwp0bWFwLmlkOiBlODc3Y2FiNC1lZjRmLTRjNTItODgxNi03NzZjNGI1NTI0NWIKdHlwZTogaW1hZ2UveC1pY29uCgpZM0psWVhSbFpEb2dNakF4T0RBME1qTXhPVEk1TlRZd056VUtiVzlrYVdacFpXUTZJREl3TVRnd05ESXpNVGt5T1RVMk1EYzFDblJwZEd4bE9pQkRPbHhWYzJWeWMxeFRZVzExWld3Z1YybGxZMmh0WVc1dVhIVnVaR1Z5YzNSaGJtUmNkMmxyYVZ4MGFXUmtiR1Z5YzF4bVlYWnBZMjl1TG1samJ3cDBiV0Z3TG1sa09pQXdZelEwTmpaaU55MHdaakZqTFRRME1Ua3RPV1ppWmkxak5EQTVaVEExTjJGaE9UTUtkSGx3WlRvZ2FXMWhaMlV2ZUMxcFkyOXVDZ3BaTTBwc1dWaFNiRnBFYjJkTmFrRjRUMFJCTUUxVVFYbE5SRUY0VGtSRk1VMTZaMHRpVnpscllWZGFjRnBYVVRaSlJFbDNUVlJuZDA1RVJYZE5ha0YzVFZSUmVFNVVUVFJEYmxKd1pFZDRiRTlwUWtSUGJIaFdZekpXZVdNeGVGUlpWekV4V2xkM1oxWXliR3haTW1oMFdWYzFkVmhJVm5WYVIxWjVZek5TYUdKdFVtTmtNbXh5WVZaNE1HRlhVbXRpUjFaNVl6RjRiVmxZV25CWk1qbDFURzFzYW1KM2NEQmlWMFozVEcxc2EwOXBRWGRaZWxGNVdsUkZNazVETVcxYWJWcHRURlJSTVZscVVYUlpWRkY1VGtNd2VrMHlSVE5aZWxVd1RWUm5OVTlVWTB0a1NHeDNXbFJ2WjJGWE1XaGFNbFYyWlVNeGNGa3lPWFZEWjNCYVRUQndjMWRXYUZOaVJuQkZZakprVG1GclJqUlVNRkpDVFVVeFJWZFlhRTlTUlZZMFZGZHdTazFWTVVWV1ZYUnBWbnBzY2xsV1pHRmpSbkJZVlZSYVNsSkZiRE5VVmxKdVpEQTFSVkZVU2s1V1JrWTBWRlpTU21WVk5WVlJWRVpFWW14S2QxcEZaRFJpUlRsd1VXdFNVR0pJYUZkWmVrcFhaVmROZUdWR1VscFdla1Y0VjJ4a00xb3hXWGxpUjNoYVRXMW9NRmRXWXpGa1ZtaEpWbTVXWVZJeFdqVlplazVUWVVkS2RGVnRUbXROYlhoNVdWWmFORTFIUmxoVmJYUnBVakZhTlZsNlJqUmlWbXhaVjI1Q1drMXFiREZVUnpGellXMUtNMk5FUW1sV01Gb3pWRWN4YzJFd09YQlJiWEJRVWpGcmVsUXdaRTloTURGd1RVUkNUMVpGYkRaVVJsSlRZa1p3VlZvelVscGlWbHB4VjFocmQyVkZOVlZhUjJ4aFVqQnJlRmR0Y0ZabFJteFZXVEIwYTFOSGVETlhiRkoyV2pKR1dFMVhhR0ZOYkZZeVdsVk5lR05HYTNsUFdGWkVXak5DWVZSVVFuZGpNV1JYWVVaT2FWSnVRa1paYWtwclZHMUdjbEpxVWxWTlJrcERWRlZWZUZKV1dsbGFSa0pYVWxkM01GWkhlRk5VYXpCM1QxWldWVlpZVW5CV2JuQnpZMnhzVjFwSFJtcFNia0paVmxaU1lWTnNTa1ppUkU1VlZteEtkVnBFUVRGU1ZrWlZVbXMxVTFJelVURldSbHBUVm0xV2NrNVVXbWhOTTBKRldXMTRTMlF4Y0VaYVJGSnBVbFJzZDFWWGRGTlZSMHBKWVVaa1dtVnJjRmhhVm1ST1pVZFdSMVZzY0ZkbGExWTBWako0YTAweGIzaFhXR3hwVWpOb1lWUlhNVzlOUm1SWFdYcEdhMVp0YUVwV2JUVlhXVlpKZUZkcVZscGxhelZVV1ZWa1MyUkdWblJVYlhST1lsaG9OVmRXV21GT1JURklVbXhvVm1KWVVuQlZha1poVGxac05sSnFVbWxXYlhoYVZqSTFRMWRyTVhGaVJFWlZVbnBHZWxsWE1VdE5NazVGVVcxc1YwMUdiM3BXUldONFl6SkZkMDlZUWxKV1JYQmhXVmQ0UzJNeFpIUmpSVGxvVW01Q1ZWUlZVa05WUmxsM1YyMDVWVkpzU2xSWlZscDNaRVpPV1ZWc1FsTlNhMVY0VmpKMFRtVkhTbFpQVlZaU1lsaG9UMVpxUm5ka1JsSnpXa1ZhVGxKVVZqQldSbFl3WVRGT1NHVkVUbGhpUmtveVYycEtSMWRGTVZoaFIwWk9Za1paZVZkc1ZrNWxSMDVIWVROc1VGZEdXa1ZYYWs1RFdWWlNWVkZ1WkdwTlYxSllXVlZhVDJGV1NuVlJhMXBhWVd0d2NsWkhNVWRqYkVweFZXeFdUbEpyY0VSV1JsWldaVVpLVjFac2JHaFNWRlp2V1ZSS00wMUdXa2RoU0dSV1lYcFdSMVJXYUVkV1JscFpWVzVDVjJKdVFucFpNbmh6VmpGd1NGSnRjRk5pYTBwYVZteGFVMWxXVG5OVGExcHBVa1UxVmxadGVFdGtWbkJGVVZSR1UxWnJXbFpWVjNNeFZqRktXR1I2UmxkU2JIQlVWa2R6ZUZKck9WWldiRkpZVWpOb1JsZFhNVFJUTWxGNFkwVmFZVkpHU25CVmJGSnpaREZXV0dSR1RsWlNNSEJLV1ZWYWExZHRWbkpqUm1oaFZtMVNUMXBWWkZkU01WWnpZMFprYkdFeFdUQldha28wWVRBd2VHSXphRmhYUjNod1ZXcE9iMWxXVWxoTlZ6bE9VbTFTV0ZkWWNFZGhNVnAwWVVWd1YySlVWbGhYVmxwS1pVWmtjVlpzY0d4aGVsWlZWMVpXYTFNeVVrZFdibEpWWWxoU1QxbHNhRzlPVm1SWFYyMUdUMUpVUmtsVmJYaHZWbTFLV1ZWdVFsWmhhMXBvVkd4YWMwNXNTbkZWYld4WFlsaG9ZVlpxU1RGUk1XUnlUVmhHYVZKRldsWlZibkJIWld4c1dFMVZkRTVOYXpWR1ZWY3hjMVl3TVVkaU0zQlhVbGRPTkZsNlNrWmtNRGxaVVd4S1YxSnJjRkpXYlhSWFZqQXdlRnBHYUdwU2JIQlFWV3hTUjJReFVsZGFSemxWVFd4YU1GWlhOVU5XVmtwelUyeE9ZVlpzVmpOYVZscFBWMVpXYzFGc1RsTmlTRUYzVm10YWEyTnRVWGxXYTJScFVteGFXVmxzVWtkaFJscHlWbXhhYkdKSFVubFdWM2gzVkRGYWRWRnFRbFpOVmxsM1dWUkdUMU5IVmtWVWJHaHBVbXR2ZVZZeWNFdFNNV1JHVFZab2FGSXdXazlaYTFwYVpWWmtjMVpyTld4U01EVklXVlJPYzFWR1pFZFhhMVpZWVdzMVJGZFdXbE5XVmtaMVdrZHdUbFl4U2xsWFZsWmhWREpHVjFOdVZsSmhNWEJoV1ZkMGQyTnNXa2hOVldScVlrVndlRlpYZUZkVWJFcHlZMFZTV0dKSFVqWmFWV1JQVmpGT2MySkhhRk5XUmxwWlZsZDRZVlp0VVhoWGEyUlhZa1UxV1Zsc1dtRmxWbEp6WVVWa1YySkdjRnBXVnpWRFZqSktkVkZ1Y0ZwTmJtaDZWbXBHZDFOR1NuUmpSazVwWVRCd1lWWnRlR0ZWTVd4WFZHNU9WR0V4Y0hCVmExVXhWbXhhZEdWRmRHdFdia0pHVlZab2IxUXlTa1pPVm5CYVZsWlZlRlpxUmt0V01XUlZVV3hrVTFKVmNGVldWbVI2WlVkT2NrMVdWbGhpUjJoWVZXeFdkMUpzWkZoTlZGSlVUV3hHTkZrd1ZtRlpWa3BIVTI1Q1ZtSkdTbnBhUkVaWFYwZFNSMVJzV2xOTlNFSkxWMVpXWVdFeFpIUldia3BxVW0xb2FGWnRNVk5VTVhCV1drWmtVMDFXV25wWk1GcHJZa2RGZUZkVVFsZGhhMjh3V1ZSQmQyVkhTWHBoUm1oWVVqTm9kMVpYY0U5aU1XeFhWV3hvVGxaNmJFOVZiVEZUVjBaa1dXTkZaR2hOVm5Bd1dWVldkMVl5U2xWV2JHaFlWbXh3UzFwVldtdGpWbHB6WTBkNGFHVnNXbFpXTVZwWFlURk5lVlZyWkZkaWJFcFdXV3hvVTFReGJITmhSemxQVm0xU1dGWXlNVWRVTVVwVlVtdHNWbUpZYUhaV2JURkxWMVpXZFZGc1dtaGhNWEJ2VmtkNFlXTXdOWE5UYmtaV1lsZDRXRmxzYUc5WlZscHhVMVJHVWsxWFVubFVWbWhIWVZaS1JsZHNXbFppYmtKSVdsZDRjMWRGTVZaa1JUVk9ZWHBXUjFaV1kzaGpNVmwzVFZWa2FVMHpRbGhWYkdSUFRrWnNObE5yV210TlJHeGFWVmQ0UzJGV1drWlhiRVpZWWtkUk1GZFdaRTlTTVZaellVZHdVMkpJUWxGV1Z6QjRUa1phVjFWc1pHRlRSMUpXVkZkMFlXVnNXblJqUjBaWFZtdHdlbFV5ZUU5WlZrcEdVbXBTVjAxR2NGUldNVnBYWXpGR2MxUnNUbWhOTUVreVZtMTBZV0l5VG5SVldHeFhZa2RTY1ZVd1drdFdiRmwzV2tSU2FGSnRlRmxVVmxwUFlXc3hXRlZzYkZwTlJuQnlXVlZWZUZKV1NuTmlSbHBPVm14c00xZFdVa2RVTVU1SVZtdFdWV0pIYUhCVmJYUjJaVlpaZVdORmRGTk5WMUpIVkZaYWIyRkdTWGRYYXpsYVlURndZVnBXV210ak1WcHlUbGQ0VTAxRVZrbFhWbEpQWXpGV1IxcEZaRmhoTVZwWldWZHpNVkpHWkZkWGJFNVhWbXRhTVZkclpIZFViRmw0VTJ4c1dGWnNXbWhXUkVwSFZqRk9kVlpzU21oTldFSm9WMVprTUdReVRuTlhhMmhPVmxkU2NWbHJWbmRsUmxwWVpVWmtWV0pGY0hsWk1GWlRWMGRLU0ZWcVdtRldWbkJvVmpCYVMxZFhUa2hoUms1WFVqTm9NbFl4V2xOVE1ERkdUbGhPV0dFeVVtaFZNR1JUVm14c1dXTkZUazVOVmtZMFZtMTRhMVpyTVZkalJuQlhWbnBXUkZacVNrdGtWa1oxWTBad1RtSnRhRFpXYlhCSFpERk9SMU51VW1wU2F6VndXVlJDZDFsV1duUmxSMFpXVFZkNFdGWkhOVTlXUjBWNFkwaENWbUV4VlhoV2JYaGhaRWRXUm1SSGRGZGlhMHBIVmxaYWIySXhVWGxUYTFwcVVteHdXRmxzYUU1bFJscHhVbXQwYTFJeFNUSlZiWGhyVlRKV2MxZFljRmRXUld3MFZtcEtUMk5yTlZkV2JHaHBWbFp3VUZaR1kzaGlNVXB6V2tab1RsWkdTbFZVVjNoSFRrWnJkMVp0UmxwV2EzQklWVEkxUTFadFNrZFRibkJoVWtWYVdGWXdaRk5TTVZKelYyeE9UbE5GU2t4V01WcFhXVmRGZUZwSVVsZGlhM0J4VlcweGIyRkdXblJOVms1VlRWaENWMWRyV210Vk1ERlhWMjV3V2sxR2NISlphMlJHWlVaa1ZWRnNaR2hoTWpoM1YxWlNRbVF5VmtoVFdIQm9VbTFvV1ZWcVRtOWtNVnBZWTBVNWFVMVhlRmhXVjNodlZHeGFObUpGT1ZaaVZFWlVWakJhYTFkWFRrWmFSMmhPVm01QmQxZFdWbGRrTVZsNVUyeFdWMkpIYUZsV2JYaDNVekZ3VmxkdGRHcFdiSEI2V1RCa05HRkhWbk5YYkZwWFRWWndXRmxVUms1bFZsWnlXa1prYVdKRmNGZFhWM2h2VlRGUmVHSklUbWhTZW14UVZtMHhVMWRHV1hsTlZXUlZUVlZ3VmxWdGRITldiVXBaWVVoYVYySlVSa3hXTVZwWFpGWkdjMWR0YUdoTldFSjJWbXRrTkZsWFRYZE9XRTVVWW10YVYxbHNaRFJYUm14ellVYzVXbFpzY0hoVk1WSkhWV3N4V0ZWdWJGVldiV2hJV1ZaYVMxSnNaSE5YYkZwcFltdEtTVmRzWkRSak1XUkdUVlphYTFKVVZrOVpXSEJYVWpGYVYxa3phR3BOVm13elZGWldhMkZWTUhwUmJHaFdZa2RTVUZSclduTk9iRTV5VjIxMFRsSkhlR0ZXVm1RMFV6SkdWMXBGWkZSaVZHeFlXV3hvUTFKR2NFVlRhemxxVFZaYU1WWnRNWGRWTVdSSFUyNWFWMVl6YUZSVmFrcFNaVVpXYzFwSFJsTmxiWGhvVm0weE5HUXhUa2RpUm14cVVsZFNXRlp0ZEhkbGJGVjVaVVU1VjFZd1ZqUlpNRkpQVm1zeFIyTkdhRmROVm5CWVdYcEdSMk14Y0VkVWJHUnBZVEJyZVZadE1UQlZNVWw0Vlc1U1ZsZEhVazlXYlRGVFkxWldkR1ZIUmxkV2JYaDZWbGQwYTFac1NuTlhibXhYWWxoUmQxbFhNVXRTTVU1ellVWmtWMDB5YUc5V2EyTjRVakExYzFkdVRsaGlSMmhZVld4V2MwMHhaRmRWYTJSVlRWVTFTVlp0ZEZkV1YwcElZVWhDVm1KWVVqSmFWbHBhWlZkT1JtUkdUazVXTVVwSVZrWmFZV0l5UmtkVFdHUllZWHBzWVZsVVJuZFpWbkJYVjIxMGFrMVdjSGxVYkdRMFZUQXhSVlpyYkZoV2JFcFFXWHBHVjFJeGNFWmFSbWhvVFZad1dsZFdaSHBOVmtwSFdrWmtXR0pGTlZoV2JYUmhUVlprY2xwSVpGVmlSbXcwVlRKNGMxZEdXbk5YYldoWFVrVndTRlpxUms5a1ZscHpVMjFvVGxkRlNtOVdNVnByVFVkUmVWUnVUbGhoTW1oUFZteGtVMk5XYkhKV2JtUnNVbXh3V1ZwVldtdFdWMHBHWTBoc1drMUdXbFJXTUdSTFUwWldjVmR0UmxkV2JrSnZWbXBDWVZNeFpGaFVhMmhvVW1zMVdGVnRlSGROYkZsNFdrUkNXbFpzY0RCV2JYUnJWMGRGZVZWdE9WWk5SMUpVV1dwR2MxZFhUa1phUm1ST1ZtdHdXVlp0TVRSaE1XUkhVMjVPYWxKdVFsaFdibkJYVWtaYWNWTnJkR3RXYTFveFdUQmFkMVJ0U25SaFJGcFhZbGhDU0ZwRVJrOVNNVTUxVlcxd1UyRjZWbmRYVmxKRFpERnNWMWR1VW14U01GcFhWRlprTkZkR1draE9WVGxYVWpCV05Ga3dhRU5XYlVWNFZsaG9WMkpZYUdoYVJXUlhVbTFTU0dSR1pHbGhNSEJJVm14YVlXSXlTWGhWV0d4VVlURndjVlZ0ZUhkWFJteHpZVVUxYkZKc2NIaFZiWFF3VjBaSmVGTnJXbGRXTTJoeVZsUkdTMVl5VGtkV2JHUm9UV3hKTWxkclVrdFZiVkYzVGxaa1lWSnRVbkJWYkdoRFYxWmFXR1ZIT1ZKTlZYQjZWMnRhYjFSc1drZFRiRlpWVmpOb1NGUnJXbkprTVZwMFVteHdWMkV6UWtsV1ZFa3hVVEZhZEZOclpGUmlia0pvVld0V1lWZEdXWGRhUms1VFRWWktlbFl5ZUU5VWJFNUdVMnQ0VjAxV2NGaFhWbVJHWlVad1NWVnNaR2xoTTBKNFZsY3dlR0l5UmtkWGJsSk9WbXMxVmxSV2FFTldNV1J5VjIxMFZrMUVSbGhXTWpWM1Yyc3hSMk5JU2xwaE1sSkhXbFZhYTFaV1JuTmFSMmhvVFdwb00xWXhXbE5SYlZGNVZtdG9WRmRJUW05VmJURnZWMVpXY1ZSdE9XdE5WbkJaV1RCVk5XRlZNVmhsUm1oWFZqTm9kbFpIZUdGT2JVcEdUMVphYVZaRldsVldha0poWVRGa1dGUnJXbUZTTW1oUFZtMDFRbVF4WkZkV2JHUnJUVlpzTlZVeWVGZFdNa3BJWVVac1YySllhRE5WZWtaM1ZteGtkR1JIY0ZkaVNFSTJWMVJDYTA1SFJraFdiazVZWWtad1dGUldXbmRYUm14VlVtczFiRlpzV25sWGExcHJZVmRLUm1OR1pGaFdNMmgyVmxSR1VtVkhTa2xVYldoVFpXMTRVVlp0TUhoVk1XUkhWMWhzVGxaWFVsWlVWbFozVm14V2RHUklUbGRpVlhCYVdWVm9ZVll5U2xWU2EzaFhUVlp3V0ZwR1drZGpNV1IwWVVkb1RsZEZTakpXYlhSclRrWnNXRlJZWkU5WFJUVlZXVzEwWVZZeGJITmFSRkpZVW0xNGVsbFZZelZYYkZwelkwaG9WazFXU2toV1YzTjRWMFpXZFdKR1ZsZGlWMmhKVjFaYVlWTXhTbk5hU0U1WVlrWndjRmx0ZEV0VFZtUnpXa1JTYWsxWFVrZFVWbHBoWVRGS1ZWWnJPVnBYU0VKWVZXcEdZVll4YTNwaFIzQk9WbTEzZWxaR1dsZGhNa1pXVFVod1VtSkhhRmRaYTJSVFZVWlNjbGR1VGs5aVJUVjVWakl4TUZSc1NraGxSMFpYVm0xUk1GVjZTa2RXTVdSWllrZG9VMkV6UWxsV2JYQlBWVEpPYzJKR1ZsSldSVnB4VkZab1ExTkdiRlphU0dSV1RWWndTRll5ZUVkV01WbzJVV3BTVldFeGNHaFdha1pYWXpGa2MxZHRiRk5XUmxwWVZtdGFZVll5VVhoVWJHUmhVMFZ3VjFsclZURlhSbHAwWkVoa2JHSkdWalZhVlZVMVZqRlpkMk5GYUZkaVJrcElWbTF6ZUZJeVRrWmxSbVJPVm01Q1dWZFljRWRTTWsxNFkwVmtWV0pYZUZsVmJGSlNaREZhZEUxVVFscFdNR3cxVmtjMVUxWnNaRWhWYkVKWFlrWndNMVpFUm1GamJHUjFXa1p3VjJKclNscFhiRlpYVFVaYWMxTnVUbGhpYldoWFdXeG9iMk5zV2tWVGEzUlRUVlUxZUZWdGVIZFViRXAxVVdzeFYyRXlVVEJYVmxwaFZqRktkVkpzWkdsU2JrSjNWbGN4TkdNd01IaGFSbVJXWVRKU1ZsUldWVEZUVmxwMFpFWmtWMVl3Y0VsWlZXaERWbTFLV1ZWcVNtRldiSEJoV2xaa1QxSnRVa2RVYXpWWFRWVndTVlpyV21GWlYwbDVVbXRrVkZkSFVsbFpXSEJ6V1Zac1ZWSnVaRnBXYmtKWVZqSXhNR0ZyTVZkalNHeFZZa2RSTUZaVVFYaFNWbHB5WWtab1YySkZjRkZYV0hCSFZqRkplR05GV21GU2JXaHZWRlphZDFkc1pGZGFTSEJPVm10d1NGZHJXbXRYUjBwR1RsWm9WMkpZVW1oVVZscHJZMnh3U1ZwR1ZtbFNiWGN3VmxSS05HTXhaRWRYYms1WVlsZG9XRlZyVm5kVFJscHhVbXM1YTFac2NIcFZNakZ2Vkd4a1JsTnRPVmROVm5CeVZGVmtVbVZXVW5WVWJHaG9UVzFvVUZadGVHdFZNazVYWWtoS1YySnRVbk5WYlhoM1YxWndWbGR0ZEZkV01IQkhXVEJvYzFkck1VZFhiRkpYVFVkU1RGVXdXbGRqVm1SMFVteGtWMkpyU25aV2JURjNVekZPZEZadVVsVmhNbWh2Vlcxek1WZEdWblJsU0dST1lrWnNORll5ZUU5Vk1ERllWVzVzVlZadGFGQldNR1JHWlZaV2RHRkdXazVTTVVwVlZtMTBZV014WkZoVWEyUmhVbXMxVDFadGRIZFhWbHB4VTJwU2FFMVdiRFJXTWpWUFlXeEtkVkZzYUZkaWJrSllWV3RhWVdOV1RuSmtSM1JYWVRGdmVGZFVRbUZrTVZKMFUyNVNhRkpHY0ZoWmJHaERVMFp3UlZKck9WTk5WVFV4VmxjeGQxVXlSalpXYm1SWVZteEtSRnBFUm5OV01XUjFWVzE0VTAxR2NGaFdSbHByVGtaa1IxZHJhRTlXVkd4WVZXcENWMDVHYTNkaFJVNVhZbFZXTkZac2FHOVdNa3BaWVVkb1lWSlhVbGhWYlRGVFUwZFNSMXBIYkdoTlNFSkpWbTE0WVZsWFNYbFRXR2hXVjBkNFZWbFVSbmRqVmxaMFpVaGtXRkpzY0hoV1IzTXhZa1pLYzJOSWFGWmlXRkYzVmpCYVNtVkdUbFZUYkZwWFRUSm9lVlpzVWt0VE1XUkhZak53YWxKdFVsaFZiR1F6VFVaYWRHTkZaRlJOYXpWNVZERmFhMWRIU2toVmJrSldZa1pLV0ZZeWVHRldWa1p6V2taU1RsWllRalpXTW5SaFlqRlNjMWRyWkZSaVJscFdWbXBPYjFOR1VuSlhia3ByVFZad01GVnRlSGRXTWtWNlVXdHNWMVpGYTNoVlZFWmhaRVpPY2xwR1VtbGlhMHB2VmxkMFYxbFdaRWRYV0dSaFVtczFWRlJXV2t0bGJGbDVaVVU1VldKRk5VZFZNblEwVmpBeFYyTkdhRmhXYlZKSFdsVmFkMU5XVm5OYVIyeG9UVEJLTkZac1kzZGxSMGw1VW10a1dHSnNTazlXYlhNeFZteFNWMkZGVGxkTlYxSjVWakl4TUZack1VVlNiR2hYVFdwV00xWXljM2hTTWs1SlUyeHdhRTFzU2toWGJGWmhZVEZhVjFKdVRtRlNNbWh2VkZkd2IwMHhXWGhYYkU1U1lsWkdOVlp0ZEc5V1JtUkpVVzA1Vm1KVVJuWldNVnBYWTFaU2RFOVhkRTVXYmtKYVYxUkNWazVYUmxaTlZtaHNVbTFvV0ZacVRtOWtiRnBJWlVkR1QySlZjRWRVTVZwaFlWWmFSbGRzVmxkaGEwcG9XVlJHYTFkR1VuSlhiVVpUVFcxb1VGWnRNREZSYlZGNFdrWmtWMkpIVW5KVVZscHpUbFpWZVdWR1pGZE5hM0JKV1ZWYWMxWXlTbGxoUkU1V1pXdGFNMVp0ZUd0a1IxSklZMFprYVZORlNUSldNVkpEWVRBMVNGSnJhRmRpYXpWWldXdGFkMWRHVWxkWGJtUllVbTE0VmxWdGN6RmlSbHB6VjI1c1dHRXhjSEpaVm1STFVtMU9SMXBHYUZkTk1tZ3lWbXhTUjFWdFZraFRhMnhWWWxkb1ZGcFhNVFJWVmxwMFRVaG9WazFYVWtoV01XaHpWR3hhV0ZWc1dsVldiRm96Vm0xNFYyUkhVa2xVYkdScFZsaENZVmRXVm05WlZsbDVVMnhXVTJFemFGaFVWbHAzVjBad1IxZHJaR3BOVjFJd1dWVmtiMVJzWkVaVGFrcFhZbGhTY2xSclduTlhSbEpaV2tVNVdGSlVWbFpYVnpFd1dWWlplR0pJVG1GU1JrcFpWVzB4TkdWc2JGWlplbFpZWWtad2Vsa3dhRzlXYXpGWFUydG9WMVl6VGpSV01GcFhaRmRLUjFac1pHbFdNbWhLVmpGYVlWbFdUWGhUYms1aFUwVTFXVmxyV25kalJteDBaRVYwVkZadFVucFhhMUpUWVdzeFdGVnJaRlZXYkhCb1dWUkdTMVpXV25KUFZuQllVMFZLV1ZaWGNFZFpWbGw0WVROd2FGSXpRazlXYlRFelpXeGFSMWRzWkdoTmExcFhWRlZvZDFWdFNraGhSbVJhWVRKU1ZGWlZXbE5qYkdSMVZHczVhVkpVVmpWV2FrbDRUVVpTYzFOcmFHeFNNRnBZVm0weFVrMUdWalpTYlhSVFRWVTFXbGt3Wkc5Vk1rVjRZMFp3V0ZZelVuSldWM040VWpKS1JWZHNTbGhTTVVwNlZsY3hORmxXWkhOaVJscGhVbGRTVjFSV1duZE5WbFpZWlVWT1YwMXJjRnBaVlZwVFZqSkdjbGRyZUZkaGExcFlXWHBHYTJNeFpIUmlSazVYVW14d2FGWnFSbUZpTWxGNFUxaHNWMkpyTlZoWmJYTXhWakZzVlZOc1RsaFNiSEF3V2tWb2EySkhTa2RXYWxaaFZsWlZNVlpxUmxwa01WcHhWV3hrYVZkRlNsVldiWEJDWlVaSmVWUnJaRlppUjFKUFZtMDFRMWRXWkZsalJXUlRUV3N4TkZaWE5VdFVNVnAwVld4c1ZtSkdXbmxhVmxwaFpFVXhWVkZ0YUdsV2JIQktWbXRqTVZVeFduTmFSV2hzVW0xb1lWbHNhRTVsUm10NFYyeGthMUl4V2tsVmJYaDNWakpLUm1OR1pGZGhNbEYzVmtSS1IxSXhUblZVYlhCVVVqSm9XRlp0TVRSVE1VNUhZa1pXVTJFelVuSlZiWGhoVFZacmQxZHRPV2hTVkVaWVdUQm9jMWRHV25OWGJXaFdaV3R3VkZVd1dtRmpiVXBJWVVaT2FWWXlhRnBXYkdRMFZqSk5kMDFJYUdGU2JWSlhXVlJLVTFac1VsZFdWRVpVVm14d01GcEZXbXRXTVZsM1kwVnNXbFpYYUVSV2JURkxWMVpXY1ZOdFJsZGlTRUpvVjJ4YWExUXhTblJWYTJSVllYcFdXRlJXVm5kVFZscHlWMjFHV2xZd2JEVlZiWFJyVmtaa1NGVnNiRnBYU0VKNlYxWmFjMVpXU25WYVJuQlhZbXRLV1ZacVNYaE5SMFp5VFZaa2FsTkhlRlpaYTJSU1RVWmFWVkZZYUZOV2JIQjVXV3RhYjFZeVNrWmpSa1pZVjBoQ1NGWnFSa3BsUjA1R1YyMUdVMkpYYUhaV1JscGhaREZrYzFwR1pHRlRTRUpQVm0xMGQxTkdaSEpYYlhSWVVqQndSMVJzV205V01rcFpWVzFvVlZac2NISlpNbmgzVTFad1IxWnRiRk5pV0dOM1ZteFNTMDVIVFhoYVJXUllZbXMxV1Zsc1pHOVhSbFp5Vm01a1ZGSnNjSGhWYlhNMVlURmFjMk5JY0ZaTmFrWjJWa2Q0YTFKc1RuUlBWbVJPVm01Q2VWWkdWbXRWYlZaWFZXNVdWV0pIYUc5VVZ6RnZWVVphZEdWSGRGWk5helZZV1d0b1MxWXlTblJWYms1V1lsaG9NMVl4V25kV2JHUjBaRVprVjAxSVFraFhWRUp2WXpGa2NrMVZaRmhpUmtwWVZGVmtVMVJHVlhkWGJHUnFWbTFTTUZWdGVHdFdNa3B5VTI1YVYySlVSak5WYWtwU1pVWk9XV0pHVW1oTmJXaDJWbGN4ZWsxV1pFZFdia1pWWWxSc1VGbHJXbk5PUmxsNVpVVTVWMUpVUmtaVlYzQlBWbFphYzFkdVNsZE5SMUpIV2xaYVYyUkhSa2RYYXpWVFRWVndWbFp0Y0VOWlYwMTRXa1pvVldFeVVtaFZiWE14VkRGYWRHUklaRmhXYkhCNFZUSndVMkZGTVZoVmEyaFdUV3BXVUZsWGVFdGpNazVIWVVad2FWSXlhRlZXYWtKaFYyMVdWazFXV210U2F6VlBWbXhTVjA1V1pGZFdiVVpYVFZac00xUlZhSE5oUms1SVpVWnNWMkV4V2pKVVZWcDNVbFpLY2s5V1pFNVdiRzk0Vm14amVHTXhWWGxUYkdSVVlrVktXRlp1Y0VKbFJsWlZVbTVPVjAxWFVqRldWM014VmtaSmVGTnVjRmRXTTJoVVZXcEdUMUl4WkhWVmJYUlRaVzE0V0ZaR1pEQmtNVTVIWVROa1dHSkZOVmxaYTFwelRteHNWbHBIT1ZkTmEzQmFXVlZrYjFkdFZuSlhia3BhVFdwR1ZGVnFSbE5qYXpWWFdrZG9UazFGVmpSV2JUQjNaVVUxU0ZOWWJGUlhSMmhZVmpCa2IxZFdiSFJqZWtaWFZtMTRlVmxWVms5WGJGcHpZMGh3VjAxdWFHaFdSM2hoWkVkV1IxcEdhR2hOVm5CdlYxZDBZVk15VFhsVWEyeG9VbTFTVDFsdE1XOWxWbHB6Vld0MFZFMVdiRFJXUjNoellXeEtkRlZzYUdGV00xSkxWRlZhWVdSSFRrWmFSbkJYVFVSV05WWkhlR0ZoTVd4WFUyNVNWbUpyU2xoWmExcDNUVEZhVmxkdFJsTk5WM1EyV1ZWa2MxUnNXbk5qUm14WFlXdGFkbGw2UmxKbFJuQkdZVVphYVZKVVZsZFdiVEUwWkRGU1IxWllaRmhpYTNCeVZGWmFkMDFHVm5SbFNHUlhUV3RaTWxadGRHOVdNVWw2WVVaa1ZXSkdjR2hhUlZwTFpGWk9jMVZ0YUdobGJGcFpWbXRhWVZsWFVYbFNhMlJwVWtad1ZGbHJaRk5qYkZaMFpFaGtiR0pHY0ZsVVZtaFBWbXN4V0ZWclpGWk5ibWg2Vm1wS1JtVkhUa2RoUm1SWFVsWndVRmRzVm1Ga01VcHpZMFZrVm1KWGVGUlVWbFozVGtaYWMxa3paR3hTTUd3MVZXMTBhMWRIU25KWGJGcGFZa1pLZWxaRVJsTldNV1IxVkdzNVUySkhkekZYVkU1M1ZqSkdSazFXWkdsU1JUVldXV3RhWVdSc1dYbE5WVnBzVWpBMVNGVlhlSGRXTVZsNFUyeHNXRmRJUWtoWlZFcFBWakZTZFZSdFJsTldSbHBaVmtaYVYxWXdNSGhYV0doaFUwZFNWRlJXWkZOTlJscDBaVWQwVjFZd2NIbFpNR00xVm0xS1dXRkZlRnBoYTFwVVZtcEdZV1JXY0VkYVJrNXBWbXR3WVZZeWRGZGhNREZJVW14YVRsZEZjSEJWYTFwTFYwWlNXR05HWkZSU2JIQldWVEowTUZZeVNraFZha1pXWWxob2NsbFdXbUZTYkZwWldrWmthVmRGU2tsWFZsSkhXVlpaZUZadVZsWmlSVXBZVkZjeGIxWldaRmRWYTNST1RXeGFlbGRyV2xkVmJVcEdUbFpPVlZac2NETldNVnBXWlZkU1NFOVdaR2xXV0VKSVZsUkplRkl4V1hsU1dHaFlZbGRvWVZac1duZFdSbkJHV2taa1ZGSnJjREJhUlZwcllVZFdjMWRVU2xkTlZuQllXVlJLVG1WR1dsbGFSVFZZVW10d2RsWlhlRk5XTVdSSFZXeG9UMVo2YkhGV2JUVkRWakZaZVdWSFJtbFNhM0I2VlRJMWMxZEhSWGhqUmxKYVZtMVNURlZxU2s5U01rcEhZVVprVGsxdGFGcFdha1poV1Zac1YxTlliRlJoTW5oWFdWaHdWMWRHVWxWU2EzUldWbTFTV1ZwRlpEQldhekZZVld0b1YwMVhhSHBXUjNoaFVteE9jMWRzY0doTlZuQTJWa1pTUjFVeVRYaFhibEpRVm0xb2NGVnROVU5YVmxweFUxUkdhMDFXYkRWVk1uaFhWVEpGZW1GSFJsVldlbFoyVmxWYWQxSnNjRVphUms1T1ZqRkpkMWRXVm10aU1WSnpXa1ZhVkdGNmJGaFpWM1IyVFVac1ZWRlVSbFJTYTNCYVdXdGFWMWRHU1hwaFJsWllWbXhLU0ZwRVNrOWpNVnAxVW14V2FWWkhlSGhXVnpFMFdWZFdSMVpZYkU1U1JscFlWV3BDZDFOR2EzZGhSemxYWVhwR1dWbFZhR0ZYYkZwelZtcFNXazF1YUdoWk1WcGhZekZrY2s1WGJHbFdNbVExVm1wR2EwMUdiRmRWV0doVVltczFhRlV3V2t0V1JteHlZVVZPV0ZKc1NsWlZiWFF3VkRGYWRGVnViRmRXTTFKeVdWUkJlRlp0U2tWVmJIQk9VbXh3YjFZeFdtRlRNbEpJVW10a1ZtSklRbTlVVmxwMlpWWmtjMVp0UmxwV01EVllWa2MxUjFWdFNraFZhemxYWWxSV1JGUnRlRnBsVjFKSFdrWndWMkpHV1RGV1Z6QXhVekZSZUZkdVVteFNiV2hoVm1wT1RtVkdjRWhsU0Vwc1ZqRmFTRmRyWkhkV01rWTJWbXBhVjFaRmJEUlVWVnBUWkVaT2NscEhjRk5YUmtwWlYxZDBhMVF3TlVkaVJGcFRZa1p3Y2xSVlVrZFRiR3hXVjJ4T2FGWnJjRnBWVjNoM1ZqSktWVkpVUW1GU1JWcHlWV3BHWVdSV1NuTlRiR2hUVFZWd05sWnNZM2hPUm14V1RWWmtXR0V5YUU5V2JHUlRWakZTVjFkdVRrOVNiRlkxVkd4a1IxWXdNVmRpZWtwV1ZtMW9kbFp0ZUdGU2JHUjBZVVp3YkdFeGNIbFhXSEJMVWpGS2NrNVdaRlppUlRWUFdXeGtiMWRXV25GU2JYUk9VbXhzTkZkcmFFdFViR1JHVGxab1dtSllhRXhXVlZwaFl6RldkVlJzYUZOaVNFSTBWbFpqTVdFeFdYbFRhMlJZWVd0S1ZsWnRNVTVOVmxsM1drVjBVMDFyY0VaV01uaHJWakpLUm1ORlZsZGlXRUpNVlhwR1NtVldVbkphUjJoVFlsWktkMVpYTURGUk1WSlhXa1pzYWxKWFVsUlVWM040VGtaYVdFNVZkRlZOVm5CNVZHeG9RMVp0Um5KT1dFcFZZbGhvYUZwRlZYaFdWa1p6VjJzMVYxWXpZM2RXYlRFMFlqSkplRmRyWkdGU1YyaHpWVzE0WVZsV1duSldibVJYVW0xME5GWXllR3RoTVVsNFYydGtZVkpXY0ZoV1IzaGhZekpPUlZac1pHbFdSVll6VmtaV2ExSXhTWGhVYmxaVllsaENWVlZxU205WFJscDBUbGhrVjAxV1draFdNblJYVlRKS1ZsZHVSbFZXYkZWNFdsZDRhMk5zWkhSUFYyaFRWa1ZhWVZaV1pIcGxSbVJIVjFod1ZtSnJjRmRhVjNSaFZVWlZkMWR0Um1waVNFSklXVlZrYzFVeVNuSlRhazVYWWxSRmQxWnFSbUZrUmxaWllVWm9hV0V6UWxoWFZsSlBWVEZrUjFWc2FHeFNXRkpWVm0xNGQxZFdjRVphUldSWFlrVndlbGt3YUhOWGF6RkhWbFJHVjAxdWFHRmFWekZIVTBkR1IxcEhiRk5pYTBwMlZteFNRMkV4V1hoVWEyaFdZVEpTV0ZsWWNGZFhSbHB5VjIxR1ZHSkdjREJaTUZZd1ZERktjMkpFVWxoaE1WcDJWbFJHYTFOV1JuTlViSEJvVFZoQ1RWWnRNVFJaVjFKWVZHdGtZVkl6VWxoWmJYUkxVakZhV0UxVVVtdE5hM0JJVlRJMVUxWnRSbkpUYldoV1lrZFNWRnBIZUdGVFJURldWMjE0YVZKV2NEVlhWbFpoWWpKR1JrMVdXbXBTYTFwWldWUkdTMU5HYkRaU2JVWnFZWHBHVjFsclpHOVZNa3BHWTBoa1YySllVbkpVYTFwclZqRndSMXBIUmxOU1ZYQlZWMWQ0WVZsV1RrZFhiR2hzVW5wc2NGVnRjekZTTVZKellVVjBWMkpWY0ZaVmJHaHJWbGRLV1dGSVNscE5ibWh5V1hwR1UyTXhXblJpUms1WVVsVnJlRlpxUmxOUk1XeFhWbGhvWVZKWFVsbFpWRVozVmxac2MxcEhPV2hTYkZwNVZtMHhSMVl4U25Sa1JGWmFaV3MxZGxacVNrdFdiVTVHWVVaYVRtRnJXalpYVmxwclVtMVJlVlJyWkdwU2JWSnZWRlpvUTJJeFdYaFhiWFJXWWxaYVdGWnROVmRXVjBwSVlVaENWbUpZYUROV2JYaHJWakZXY2s5V1drNVdia0pKVm14a05HSXlSblJXYmtwWVlrWktWbFp0ZUhkTk1WSldWMnhPVjAxcldrZFVNVnByVmpBeFNWRnNhRmhXUlVwb1dXcEdZV05yTVZsV2JXaFRWbXR3V1ZaR1ZtRmtNa1pIWTBWYVdHSkhVbGxXYlRWRFUwWlplVTFYT1doU1ZFWklWakZTUTFZeVNraFZhazVXWVd0YVlWcFZXbmRTTVhCSVkwWk9WMDFWY0dGV01XUTBZVEpKZUZWWWFGZFhSMUpZV1ZST1UxVkdiSEpYYms1UFVteHNOVlJWVWxkaFJURkZVbXhrV21FeFNsUldha0Y0WTFaYWMxRnNaRTVTYmtKNVZsUkNhMUl4VGtaUFZtUllZbGQ0Y0ZsVVFuWk5iRnAwVFVob1QxSXdNVFZXUnpWUFYwZEtjMWR0YUZaaVdFMTRWa1JHWVdSSFVrbGFSbWhYWWtoQ05sWXlkRk5WTVZwV1RWWmthVkpHU2xoVVZtUnZZMnhhY1ZOclpHcE5WVFY2VjJ0YVYxWXdNSGRUYkd4WVlrZFJNRmxVUmxwbFJuQkpWRzF3VTAweWFIZFdWekV3WkRBMVIxZHVUbUZTUmtweVZGWmFTMlZzV1hsT1ZtUldZbFZ3U1ZwVldtOVhiVXBIVTJ0U1ZXRXhjR2hXYkZwTFkyczVWMVZzVG1obGJGa3hWbXBLTUdFeFNYaFdXR1JPVTBkNGIxVXdaRk5YUm14WVpFVjBhbUpIZURCWmVrNXZWakF4V0ZWcVJsWmlXR2hRV1ZaYVlWWXlUa2hoUm1ScFYwVktSVlp0Y0VKTlZrbDVVMnRzVkdKSGFIQldhMlEwVjFaYWRHTkZUbGROUkZaWVZqSjRiMVF4V2xoVmJHaGFZa1phTTFadGVGZGtSVFZZVW14a1RtRXhjRFZXYWtsNFlqRmtjazFZVm1oVFJYQm9WVzE0ZDAweFZuRlNiR1JxWVhwV1dGZHJaSE5XUmtwV1ZtcFNWMkpVUWpOYVJFcFNaREF4VjFwR1dsaFNNbWhZVjFjeE1HUXhVWGhYYmxKT1ZtczFXRlp0TVRSbFZtUnlXWHBXV0ZKcmNIcFpNRkpIVjJzeFIxZHJlRnBoTVhCTVdrVmtWMUl4WkhOWGJHUnBWakpuZVZadGVGTlNNV3hZVkc1U1ZXRXlVbGxaYTFwM1ZERnNkRTFYT1dsTlYxSllWakl4UjFaRk1YSk9WRUpYVWpOU2FGWkhlR0ZrUmxaMFQxWldWMDB5YUVoWGExSkhWMjFXUjFwSVVsTmlSa3BQV1Zod1JrMUdXbkpaZWtaWFRWWldOVlV5ZEc5aFJrNUdVMnhrV21KSGFIWlVWRVphWlVaa2RHUkdhRk5OVlhCSlZqSjBhMDFHVW5OWGJsWlNZVEo0V0ZsWGRIWmtNV3h4VTJ0MFUwMVZOVEZXUnpGM1ZrWktWVlpzYUZoV00xSm9WWHBHYTFJeVRrZGhSM2hUVFVad1ZsWlhjRWRaVms1SFdraEtXR0pWV205V2JYaDNWMFpaZUZWclRsZE5WbkJIV1ZST2IxWnNXa1pYYmtwaFVsWndURll4WkVkU01rWklZVWRvYkdKR2NGbFdiVEI0VFVaWmVHSkdhRlZpYXpWdlZGUktOR014Vm5GUmJVWnFZa1phZUZWdGREQlZNREZYVW1wU1YwMXVUVEZXYkdSTFVtczFWbHBHV2s1aWJFbzJWbTF3UzFKdFZrZFVia3BvVW01Q2IxbFVSbmRUUm1SelZtMUdXbFl4U2xoV2JUVlBWbGRLU0dGR1VsVldla1oyVm1wR1dtVkdjRVZSYkdST1ZqTm9XVmRYZEdGaE1rWlhVMjVPV0dKR1dtRlphMXBMWld4cmVXVklUbXBpUjFJeFYydGtORlV5U2tkaU0yUlhVak5vVjFSc1dtRldhekZaVTIxd1UxWXhTbGRYVjNScllqQXdlRmRZWkdGU1ZuQnpWbTE0WVZac1ZsaGxSM1JvVWpCV00xWXhVa05XTVZsNllVZG9WbVZyV21oV2FrWkxaRlpTZEdGR1RrNWliV2hXVmpGa01HSXhSWGxWYms1WVlteEtjMVZ0Y3pGV1JsSllaRVprVDFac2NFaFpWV00xVjJ4YWNrNVZaRmROYm1oNlZqSXhSbVZHV2xsaFJtUk9WbTVDV1ZkVVJtRlVNbEpHVDFaa2FGSXllRlJVVmxaM1dWWlplV1JHWkdoTlJFWklWakkxVTFaSFNraFZiR3hhWWxSV1JGWXhXbk5XVms1MFQxWlNVMkpJUWxkV1ZFb3dUVVphUjFkdVNsaGhhMXBZVldwT2IyTnNiRlphUlZwclRXdHNObGt3V210V01VcFhZMGM1V0dFeFNraFhWbVJPWlVkT1JtSkdaR2xXVm5CVlYxZDBZV1F5VVhoWGJsSnNVbnBzVTFSV1pGTmxiRmw0WVVoT2FHSkZjRlpaYTJNMVZsWmFjMk5JY0ZWV1JWcFVWbXBHYTJSSFVraGhSMnhUVmtaYVNWWnRjRXRPUm14WFYxaHNWR0pHV2xSWmExcExWMFpzVlZKdVpHaFNiWFEwVmpKek5XRnRTa2xSYTJoWFVucEdlbFpxUm10U2JFNXlZMFprYUdFeU9UTlhWbEpMVkcxV1YxTnVUbUZTYkVwd1dXdGFkMVpHWkZoTlZGSnJUVmRTU0ZscmFFdFpWa3B5VGxVNVZWWnNjR2hhVlZwWFpFVTFWazlXWkU1aE1XdDVWbTB4TkdJeFpFaFNXR3hXWW01Q1dGWnJWbUZVUm5CSFYydGthazFZUWtoWlZWcHJWR3N4Vm1OR2JGZGhNWEJvV1ZSR1QyUkdXbkphUm1ocFlrWndWVmRYZEZka01rNUhZa2hPV0dFelVsZFZiWGgzVjFaU1YxVnNUbWhOUkVaWlZsZDRiMVl4V1hwaFNFcFhZV3RhYUZWcVJtdGtSVGxYVjIxc1UyRXpRa3BXYkdONFRrWlplVlZyYUZWaE1YQldXV3RvUTFkR2JISmhSVTVZWWtkU1dGWnRNRFZoTURGWFlrUk9WVlp0YUZoWlZWcEtaVmRHU0ZKdFJsZE5NVWw2Vm10V1lWVXlVa2hXYTFwaFVqTkNUMVp0TlVOT2JGbDVaRWRHYUUxV1NucFdNbmh6VlcxRmVsVnNhRnBpUmtwSVZGUkdWMVpXU25WVWJHUk9WakZLWVZkWGRHRlpWMFpHVFZoU2FGSnRhRmxXYlhoTFZFWnNjVk5yT1ZOTlZuQXhWbGN4ZDJKSFJYaGpSbVJYVW14d2FGcEVRWGhTTVZaelYyeGFhVkpVVm5kV1Z6RXdaREpXYzJKSVNsWmlSVFZaV1d0YWQxZFdiRlpoUlhSWFRWWndSMVZ0Y0ZOV2JVcEhZMGRvV2sxcVJreFZha1pyWTJzMVdHSkhiRmROYldONFZtMXdSMWxXYkZkaVJtUlZWMGQ0VjFsVVNtOVhSbXhWVTJ4T2FsSnNXakJVYkZaUFlXeEtjMkpFVGxkTmJsRjNWbXhhWVdNeVNrVlZiR1JPWVd0YVNWWnRNWHBsUm1SSFZtNUthVkp0VWxSVVZFWkxUbXhhZEdWSGRGTk5SRlo2VmpJMVQyRkdTblZSYlRsVlZteHdNbHBYZUdGV1ZrNXhWV3h3VjJFeWR6QldNblJ2VlRGV1IxZHVUbGhoZW14aFZtdFdZVTB4VlhsbFIwWlhWbXMxZUZaWGVIZFdNREZIWTBab1YxSnNXblphUkVaWFpFWk9jMWRzYUdsU2JrSlpWMWQwWVdRd01IaFhhMXBZWWtkU2NWbHJaRk5OVmxwSVpVZDBWV0pHYkRSVk1uQmhWMFphUmxOdVNsVldWbkJVV1hwR2ExZFhSa2RWYldocFVsaENXbFl4V2xOVE1WWnlUVlZrV0dKcldsUlphMXAzWXpGYWRHVklaRTVXYkZZMVdsVmpOV0ZHU1hkalJYQldWak5vTTFacVNrdFdWa3BWVVd4YWJHRXhjRWhYYkZaaFZqSlNWMVZ1VWxOaVJUVllWV3BPYjFac1duSlhiVVpYVFd4R05WWnROVTlYUjBwelUyNU9WbUpHU25wWmFrWlhZMVpLZEZKdGVHbFNiWGN4VmtkNGIyRXhaRWRUYms1cFVrWndXRlp1Y0Vka2JGcHhVMnRrYW1KRmNGcFpWVnByWVVkRmVHTkliRmRoYTFweVZYcEdUMU5HV25KYVJsWm9aV3hhVUZadGVHOVJNV1J6VjI1R1UySlZXbkJVVjNoSFRrWldjMkZIZEZWaVJUVkpXVlZhYTFkdFNsbFVXR2hYVFZad2Vsa3llR0ZXVmtweldrZHNVMDB5WnpGV2JYQktUVlpzVjFWdVVsUmhNbEpaV1ZkMFMxWnNXblJsUjBacVlrWnNNMWRyVmpCVk1ERnlZbnBLVmsxdWFHaFpWbHBoVWpGa2NtSkdaRTVXYmtKdlZsaHdSMU15VFhoalJXeFZZa1p3Y0ZWdE5VTmtiR1JYVld0a2EwMVhVbGhYYTFwellXeEtXRlZzV2xWV00wMTRXbFphVTJNeFpIUmtSbkJYWVROQmQxWnNaRFJWTVdSMFVsaHNWVlpGU21oVmExWmhZVVp3UmxwRk9WTmlWa3BKV2tWVk1WWXlSWGhoTTJSWFlsUkZNRmxxU2twbFJtUlpZa1pPV0ZJemFGaFhWM1JyVGtaa1IxVnNXbUZTYXpWeVdXdGtOR1ZHVm5SbFJUbFhUVlp3ZVZSc1VrTldWVEZYWTBoS1dsWnNjRXhhUmxwSFkxWmtjMXBIYkZoU01tZDVWakZrZDFJeFZYbFVia3BPVm0xU2NGVnRkSGRqUmxaeFZHMDVhRkp0VW5wWGEyaDNWR3haZUZOdWNGZE5WMmh5VmpCa1JtVnNWblZTYkZaWFRUQXhORlpYTVRSV01XUklWbXRzWVZKc1duQlZiR2hEVG14YWRHVkhPV2xOVjFKSVZqSTFUMWRIU25KalJtUmFZa1pLU0ZZd1dsZGpWa3AxV2taT1RsWnVRalpXVkVsNFl6RlZkMDFXV21wU2JIQllWRmMxYjJOc1VsWlhiWFJyVW14d01WWkhNVWRWTWtwSFkwWmFXRlo2UVhoVlZFWlNaVVprZFZWdGRGUlNNVXA2Vm0weE5GTXhaRWRYYmxKUFZsUnNiMVZ0ZUhkbFZtdDNWV3RPVjAxV2JEWlpWV2hoVmpKR2NsSnFVbFpoYTNCUVZXMHhWMU5HU25OYVIyeFVVbFZ3TWxadE1IaE9SbXhYVTFoc1ZtRXlhRmRaVkVaM1ZWWmFkR042UmxoU2JGcDZWbTAxUzJFd01WZGpTR2hXVFc1Q1JGbFdWWGhXTVVweFZXeGtUbUZzV2xWV2JYUnJVekpPY2s1V2JGTmlSbkJ2V1ZST1EwMXNXblJOVkZKYVZqQTFXRlpYTlU5V1YwcFlZVVpTV21FeVVYcFVWVnBoWTFaT2NWVnNWazVXYlhkNlZrWmFZV014Vm5SU1dHeHNVbXh3VmxadGVIZE5NVkpWVW0xR2FsWnJjREJWYlhoUFlWWkplRk5xVWxkaGEyOHdXVlJLUjFZeFpISlhiR2hZVTBWS1dWWnFRbTlSTVU1SFlrUmFVMkpJUW5OVmJUVkRVMnhhU0dWSE9XaFNNVnA2VmpKNGMxWXhXalpTV0dSaFVrVndTRlZxUm10amJIQkhXa2RzVjFadVFqVldhMXByVGtac1YxcEZaR2hOTWxKWldXeG9VMWRHVWxkWGJtUlVVbXhzTlZwVmFFOVdNREZ5WTBad1dsWldTbEJYVmxwaFl6Sk9TR0ZHWkU1U2JGa3dWbTB4TkdReFNYaFhibEpvVWpOb2IxUldhRU5UYkZweFVteE9VazFyV25sVWJGcHJWMFprU0dWR1VsZE5SMUoyV1RGYVYyUkhWa1prUm1ST1ZtNUNOVlp0TURGaE1WcHlUVlpzVW1KSGFGaFVWelZ2VlVaWmQxZHNjR3ROVjFKNVdXdGFZV0ZXWkVoaFJrWllWbXh3YUZkV1pFOWtSbEp5Vm14U2FWSXhTbmRXVjNCQ1RVVXhSMXBJVG1GVFNFSnpWVzB4VTFOR1dsaE9WWFJhVm10d01GWlhOVU5YYlVWNFYycE9WMVpzY0doYVJXUlhVakZrY2s1V1pHbFRSVXBLVmpGa01HSXhUWGhpUm1SVVlUSlNWVmx0Y3pGV01XeHpZVWM1V0ZKc1NucFdNbmhQVmpBeFYxZHViRmRTTTJoeVZrZDRZV1JIVVhwalJtaFhVbFZ3YjFkV1VrZFhiVkYzVFZac1UySkhVbkJaYlhSTFYxWmtXR1ZHVGxOTlZrcElWakZvYjFkSFJYbFZia1pWVm14d2FGcFhlR3RqYkhCSlZHeGFUbUV6UWtsWFZsSlBZVEZaZVZOcmFGWmhhelZYV1ZkMFlWVXhjRmRYYkU1clZteEtlbFl5TVhOaFZrcFpVV3hhVjAxWFVYZFpWRVpXWlVaV1dXRkdXbWxTYmtKWVYxZDBWMlF5VG5OVmJHUllZbTFTVDFWdGVFdFhSbHBZWlVVNVdGSXdjRWhaTUZKRFdWWmFWMk5JV2xkTlIxSkhXbFZrVDFOV1RuTmpSbVJPVFcxb1RsWnRjRU5aVmxsNVZGaG9WbUpyTlhGVmFrcHZWREZhZEdWR2NFNVNiSEF3VkZaU1ExZHNXWGROVkZKWFRXNW9jbFpyWkV0amF6VlpVbXhhYVZKcmNGbFhWRUpoVmpKU1JrNVdXbFZoZW14WVdXdG9RMDVHV2xWU2JUbG9UVlpHTkZZeGFHdFdNa1p5VGxaYVYySllhRE5hUjNoaFpFVXhWbHBIY0dsU1ZGWTJWMVpXWVdReVJsZFRXR3hvVWtWd1dWWnRlR0ZoUm1SWFYydDBWMDFWTlRGV1Z6RXdWVEpHTmxadVpGZFdNMEpJVlRJeFVtVkdaSE5oUlRWWFVtdHdXVlpHV21Gak1EVkhWMWhvYUZORk5XOVZiWFIzWld4WmVXVklUbGROYTFZMFZqSjBORmRzV2xkalNFcFhZV3RhTTFWcVJsTmpNa1pIVkcxc1UxZEZSWGhXYWtaclRVWnNWMWRZYkZOaVIxSm9WV3hhZDFaV2JIUk5WazVZVW14d2VGWkhkRTlXYkVwMFpVaG9WbUpVUlhkV2FrRjRWMFpXYzJOR2NHaE5iRVl6Vm14U1FtUXlWa2RVYms1WFlrZFNWRmxzV2tkTk1WbDRWMjEwVjAxck1UUldNbmh6WVZaS1ZXSkdhRnBpUm5CTVZqQmFhMWRIVmtkYVIzUk9WbFJXV1ZkVVFtRlpWbVJJVTJ4V2FWSnRhRlpXYWs1VFRURlplV1ZJVGxkaVJuQjRWbGQ0YjJGV1NuVlJiR3hZVmtWS2FGbFVSbk5XTVdSMVZXeGFhVkl5YUZoWFYzaFRVakZhUjFadVJsTmlSVFZ5VldwQ2QxTkdaSEpYYlRsV1RWWndXbFZYZEhkV01rcFZVV3BTVlZaWFVrZGFSRUV4Vm14d1IyRkdhRk5OYldoaFZtMXdRMkV3TlVkWGJHUnBVbXhhVkZsdE1WTmpWbHAwWlVkR2JGWnNjREJVVmxaclYwWktjMk5FUW1GV1ZuQm9WbTB4UzFkV1ZsbGFSbVJYVFRBME1GWnFSbUZTTWsxNFkwVmtZVkl5ZUZSWlZFNURVMnhaZUZkdGRHeGlWbHBJVmpJMVMxUXhXblJsU0VaV1lsUkdWRmt3V2xwa01YQklUMVphVjJKV1NsbFdiVEI0VFVaWmQwMVlTazVXUmtwWldWUktiMVZHV25GVGEzUlVVbXhhZWxsVldsZFdNVXBXWTBVeFYyRXhjR2hYVm1SUFl6RmFkVk5zVW1sWFJrcFFWMWQwWVdReFRsZFhXR3hyVW5wc1ZWUlhkR0ZUUmxWNVpVWmthRlpyY0RCYVZWcHJWMnhaZWxWdGFGZFNWbkJvV1RGYVMyUkhVa2RhUlRWb1RWaENURlpxU2pCWlZsRjRWVzVTVkdFeVVuRlZiVEUwVjBac2NscEdTazVTYlhoV1ZUSjBhMVV3TVZaT1dIQmFWbFp3YUZsV1drcGxiVVpIWVVab1YwMHlhREpYVjNCQ1pESldSMWR1VmxOaVJUVndWV3hTVjJWR1drZFhiVVpyVFd4YWVsZHJhRXRYUjBwVllrYzVWMkpZYUROV01uaFhWMFV4VmxwR2FGTmlTRUkyVm1wS05HSXhXbGhTV0docVUwaENXRmxYZEdGVlJtdDVaVWQwYWsxcldrbFpWV1J2WWtkS1IyTkdjRmRoYTFweVZHdGtTbVZXVGxsYVJUVlVVakpvV1ZkWE1YcE5WbVJYWWtoS1lWSnJOWEZaYTFwaFpVWldXRTVYZEZkU2EzQjZXVEJXYzFsV1dsaFZXR1JYWWxoT05GVnNXa2RqVmxwellVZG9UbFpZUW5aV2JURjNVekZOZUZwR2FGTmhNbWh2VlcwMVExZEdWbk5XYkhCT1VteHdXVmt3Vm10WGJGcDBWV3hzVm1KWVVuSlhWbHBLWlZkR1JrOVdjR2xTTVVveVZtMXdSMWR0VmtkYVNFNVZZa1pLVDFWcldtRlRiRnBWVW0wNWFVMVdiRFZWTWpWUFZrZEdObUpHYUZwaVIyaFBXbFZhYTFZeFpIUlNiWFJUVmtaYVdGWnJaRFJpTVZsNVUyNUtWR0V5YUZsV2JYaGhZMnhTVmxkdGRGTk5WVFV4VlRJeGQxVXhTbGRqUm1oWFlsaENVRmxxU2xOak1XUlpXa2RHVTFadVFucFdWekUwWkRGa2MySkdXbGhpYlZKdlZXeFNSMWRzVmxoa1JGSllVakJ3U0ZZeU1XOVhiRnBHWTBaQ1lWSldjRXhaTW5oM1UwWktjMVJ0YkZkaE0wSlNWbTEwWVdGdFZraFNXR1JQVjBVMVdWbHRlRXRVTVZsM1drWk9WMVpzU2xoV01qVlBWREZhYzJORmJGVmlSbFV4VmpCYVNtUXlUa2xpUm1ST1ltMW9lVlpxU1hoU2JWWlhWbTVPVm1KSFVsUlZiRnAzVG14a2NsWnNXbXhTYlZKSFZERmFiMkpHU25SVmJrSldUVVphVEZVeWVHRmtSMVpJWkVVMVUwMUdXVEZXVjNodll6RmFTRk5yYUZaaVIzaGhWbXRXZDJSc1dYaFhiazVYVm10d01WZHJaRFJoVmtsNllVWnNWMkZyYjNkYVJFcExVakZrV1dGR2FHaE5iV2haVm0xd1QySXhaRWRYYmtaVFlUTlNXVlp0ZEdGbFJsVjVaVWM1VjAxcmNFaFpNR00xVmpBeFYyTkhhRlpOYWtaWVZUQmFTMWRYVGtoalJrNU9ZbGRvVmxacldtcE5WMGw0Vm10a1dHSkhhSEpWYlRGVFdWWmFkR042UmxoU2JHdzBXVlZvVDJGRk1WWmlSRTVYVFdwQk1WWnNXbUZrUmxaelZXeFdWMVp1UW05WGExWldUVlphZEZWclpHaFNhelZQVlRCV1NrMVdXWGhWYTA1YVZqQnNORmRyYUZOV1IwVjVWV3hXV2xaRmNIWlpWVnBYWTFaU2RFOVdaRTVYUlVwWlZqSjBZV0V4V2tkVGJrcHFVa1ZLYUZWc1duZFZSbHB4VW10MGFrMXJOVWhaTUZwcllVZEZlVTlVVGxkTlZuQnlWbGN4VjFJeGNFZGlSMnhUWVhwV1dsWlhjRTlpTWxaWFdraE9ZVkpGU2xWVVZtUlRVMFpzY2xkdE9XaE5WVFZKVmxkek5WWldXbk5qUkU1aFZsWndXRnBGVlhoV1ZrWjBZVVUxVjFkRlNUSldNVkpEVlRGSmVGZHVTazVYUmxwV1ZtdFdZVmRHYkZoa1NHUlZVbXhhTUZSV1ZUVldSa2wzVjJ0b1dHRXlVbnBXTUZwS1pWZEdSVlpzWkdsWFIyaFZWbGR3UjFadFZrZFViR3hwVW14YWIxUldhRU5YYkdSWVpFZDBhVTFyTlVoV2JUVkhWVEpGZWxWdVRsZGlXR2d6VmpGYVUxWXhWbk5VYkdSVFZrVmFSMVpYTVRCaU1XUnlUVlZrV0dKWGFGaFpWM1JoWVVaV2RHVkhkR3RTVkd4WVYydGtjMVl4U2xkalJscFhZa1pLU0ZkV1pFWmxWbFp6WVVaV2FFMVlRbTlXVnpCNFZURlJlRlp1U2xkaVZWcFpWbTB4VTFac1ZsaE5WRUpvVmxSR1dWWlhkRzlXTURGeFZteENWMkZyV25KVk1HUkhVakZ3UjJOSGJGTk5iV2hTVm10a01GbFdiRmhWYTFwT1ZteHdhRlZ0Y3pGVU1WcDBaRWhhYTAxWFVsbGFSV1JIVmxVeFYxTnFRbFpOYm1oMldWVmFTMlJXUm5OaFJuQlhUVEZLYjFkVVNqUlZNazV6WTBWYWFsSXphRlJaYTJoRFdWWmtXR1JIUmxkTmExcEhWRlpvVDFaSFNraGxSbXhYWW01Q1IxcEVSbXRXTVdSMFVteE9UbUV6UWt0V2EyUTBZVEpHVjFkc1pHcFNiV2hZVm01d1JrMUdjRVZSV0doVFRWWmFlbGRyV21GaFIxWjBaVVprV0ZZemFGaGFSRVpQVWpGa1dXSkhjRk5XVkZaYVYxWm9kMUl4VGtkaE0yUllZVEExV1ZsclduZFhSbXQzV2tjNVdHSldXbmxaTUZwRFZtMUtSMk5GYUdGU1ZuQk1XWHBHZDFJeGNFaGlSMmhPVW0xME5WWnRNSGRrTWxaSVZWaG9VMkpzU2xoWlZFcHZWbXhzY2xwR1RsaFdiWGd3V2tWb2ExWXdNVmhsU0d4WVlURndVRlpzVlhoWFIxWkZVV3h3VGswd1NrVldhMlEwVXpKU1IxWnVUbGhpUm5Cd1ZtdFdWMDB4V25Sa1JscHNVbXh3TUZaSGRHdGhSa3B6WTBVNVdsWXphR2hXVmxwaFpFZE9SbVJHVWs1V1dFSTFWa2Q0WVdNeFdsaFRhMnhTWWtkb1YxbHJXbmROYkhCWFYyMUdVMDFZUWtaV1YzaHZZVlphYzJORmJGZE5ibEoyVmxSS1IyTXhUbGxqUjJoVFlrVndhRlpxUW05Uk1VbDRZMFpvYkZJd1dsUlVWbHAzVFVaUmVGcElaRlZpUm5BeFZWZDRkMVl4V1hwaFNGcGFZV3RhY2xVd1drOWpiR1J5VDFaa1RsSnVRbTlXTVZwVFV6RlZlRlpZYUZaaVJuQlpXV3RvUTJOc1VsZGFSazVzWWtad1NWcFZaREJoUmxweVlrUlNWazFYYUhaV2FrcEhZMjFLUlZWc1ZtaE5iRXBKVm0xd1IxUXlVbGRYYms1VVlsZG9UMWxzWkc5WGJGcHlWMjFHV2xack1UUldiWFJyWVZaT1JsZHNWbHBXUlhCVVdURmFjMWRYVGtaYVJtaHBVbXhaTVZkc1ZtdE5SMFpIVTFoa1dGWkZjRmhaYkdodlkyeGFjVkpyZEdwTmF6VktWVEo0ZDJGSFJYaGpSVEZYVmpOQ1NGbFVTazVsVmtweVYyczVWMkpXU2xwV1Z6RXdaREZzVjFkdVRtRlRSMUpVVkZaa05GZEdWWGhoUnpsWFlrZFNTVmxWV25OWGJVcEhWMjFvV21GcldsaFpNVnBIWXpGd1JrNVZOVmRpV0dOM1ZqRmFWMkl5UlhoYVJXUlVWMGRTY1ZWc1pHOVpWbEpXV2taT2EySkdiRFZhVldSSFZUSktTRlZxUWxwV1ZuQnlXVlZrUm1WSFRrZFdiR2hvVFZoQ2IxWnJVa3RWTVVsNFZHNVdWV0pHV205YVYzaGhaREZrV0dWSGRHbE5WM2hZVmpJMVUxUnNUa2hoUlRsV1lsUkZNRll3V25OamJHUjBVbXhXYVZKVVZrcFhWbFpoWXpGa2MxZHJXbXBTYkVwWVZGWmFkMlZzYkRaVGEyUlRUVlpLZWxadGN6RldNa3BJVDFST1YwMXVhRmhXYWtwR1pVWldXV0ZHVW1saGVsWjNWbGQwWVZsWFJrZFdiazVoVWxSV1QxWnRlSE5OTVdSeVZtcENWMDFFUmxsV1YzQkhWMjFGZUdOSVNsZFNla1pNV2tWa1IxTkZPVmRhUjJ4WFVsVnJkMVpzYUhkU01rVjRXa1ZrVkdKcmNGbFpiR2h2Vmtac2MxZHJkR3RpUm5CSVZqSXdOVlZyTVVWV2JuQlhUV3BXVkZaSGVHRlNNVTUwVW14a2FWZEhaM3BXYWtKaFZqSlNSazVXWkZWaVYzaFVXVlJPUW1ReFduTlpla1pTVFZad01GVXllRmRXTWtWNFUyMUdWMkpHY0ROWlZWcDNVbXh3UjFwR1VsTk5WWEJJVmtSR1lWUXhVbk5YYkdSb1RUSlNXRmxzYUVOVFJteHhVMnRhYkZKc1dqRldSM2h2WVZkS1JtTkdhRmhXTTFKeVdXcEdjMVl4WkhWU2JGWnBWa2Q0ZGxaWE1UUmpNREI0VjFoc2JGSXpVbTlVVmxwelRURlNjMVp0ZEZoU01GWTFWbFpTUTFZeVJuSmpSWGhhVFc1b1VGa3llSGRTTVhCSFdrZHNWRkpWYkRWV2FrWmhWVEZOZUZOdVVsWlhSMUpQVm0xNGQxZEdiSEphUms1cVVteGFlRlV5TURWaFJrcHpZMFJDWVZaWFVraFpWRUY0VmpGa2NtRkdaRTVXTW1oNVZtcENhMUp0Vm5OU2JsWlZZa2hDY0ZWdGVIZGlNVnBWVW0xR1ZtSldXa2hYYTJoVFlURktkRlZyT1ZaaE1WcExXbGQ0WVZaV1RuRlJiRnBPVmpGS1NsWlVTakJoTVdSSVUydG9WbUpYYUZkWlZFWmhUVEZaZDFkc1pHcFdhM0F3VlcweGQxUnRSWHBSYTNCWFZucEZNRlpFUmxOak1VNTFWbXhLYVZKdVFsbFhWM2hUVW0xUmVGcEdaRmhpYXpWWlZXMTRkMDFXV2toTlZXUldUV3R3V0ZVeU5XRldNVnBHVTI1S1YxWkZXbkpWYWtaWFl6RndSMXBHWkZOV2JrSmhWbXhqZUU1SFRYZE9WbVJxVW14d2FGVnJWa3RYUmxKV1ZXdGtiRlpzYkRWVWJHaFBWakpHTmxKdWFGWldiRXBJVm1wS1MxSXlUa2hoUm5Cc1lURndiMVpxUm10U01VbDRXa2hLVDFadFVuQlpWRUphVFd4YWRFMUlaR3hTVkZaSVZqRm9jMVpYU25KalJrWlhZbFJHVkZscVJsZGtSMDQyVW14V1RsWnNXWHBXYlRFd1RVWmFTRk5yWkdwVFNFSllWbXBPVW1ReGJGVlJXR2hYWVhwR1ZsWlhlRzloUlRGWFkwUktWMkpHU2t4VmVrcFBaRVpTY21KR1RtbFNia0ozVmxkd1IxTXdNWE5YYmtaU1lsVmFWMVJXV25kbGJHUnlZVVU1V2xacmNGWlphMXBUVjIxRmVWVlljR0ZXTTJoaFdsWmtVMUl4Y0VoaFJUVlhZbXRLU2xac1VrcE5WazE1VW01T1ZXRXlhSE5WYlhoM1dWWnNWVk5zVGxkU2JrSlpXbFZrUjFZeFduSk9XR3hoVWxad1ZGWlVRWGhXYlVWNllrWmtWMlZyVlhkWFZsSkxVakZPUjFOc2JHbFNhMHBWVldwR1MxZFdaRmhsUnpsU1RWVTFTRll5ZUZkV1IwcEdUbFpTVlZadFVsUlVWbHBXWlZVeFdFOVdXazVoTTBKSlYxUkNiMWxXV1hoVGJsSldWa1ZLVjFwWGRIZFdSbXcyVW0xMGFtSklRa2hXTWpGdlZHc3hWbU5HU2xkaVIwNDBWR3RhYzFZeGNFWmFSbWhZVWpKb2RsWlhjRTlWTVdSWFZtNUdVbUp0VWxoVVZscHpUbFp3Vmxkck9WZE5SRVo1V1RCYVlWWnRTbGxoUmxKWVZteHdhRlpxU2s5VFIwWkhWMnMxVTAxVmNGWldiR040WldzMVYxZFliRk5oTW1od1ZXMXpNV05HYkZWUmJrcHNWbXh3TUZwVldrOVdSVEZGVm10b1dtRXhjSEpXTUdSTFkyczFWMkpHY0ZkTk1tZDZWbXBDWVdNeVVraFZhMnhoVW01Q1dGbHJhRU5PUmxweVdraHdUMVpzUmpSVk1qVlBZVlpLUms1V2FGVldlbFoyV1RKNGMxZEhUWHBoUjNCcFVqRktOVmRXVm1Ga01WSnpVMjVXVW1KdGVGaFpiR2hEVkVaV05sTnJPV3BOVmtveFZrZDRVMkZXU1hoVGJFSlhZbFJCZUZWVVNrcGxSbVJaWVVab2FWWldjRmRYVjNoaFdWWmtSMWR1VWs5V1ZHeGhWbTEwZDJWV1VuTmhSVTVZWWtad1IxUnNWbE5XTURGMVlVaEtWMDFIVWxSVk1GVTFWakZPY2s1WGFFNWliVTR6Vm1wR2EwMUdiRmRYV0doWVlrZG9WRll3WkZOVlJsbDNWbFJHV0ZKdGVIcFpWV00xVkdzeFdWRnNhRmROYWtWM1ZtcEdZV014VG5GUmJGWk9WbTVDYjFaclpEUlRNVXB6V2toR1YySkhVbFJVVkVwdlRXeGtjbFZyWkZwV01EVjVWRlphYzFVeVNraFZiVGxWVm5wR2RsWXhXbXRYUjFaSFZHeE9UbFpyY0VsV2JUQXhVakZWZVZOc2JGWmlhMXBoVmpCb1EyVnNXWGRYYkhCc1ZsUkdXbFpIZUc5Vk1rVjZVV3BXV0ZZelVsUlhWbHBhWlZaT2NtRkdXbGhTTVVwYVZtMHdlRlV4U1hoalJtUllZa1UxV1ZacVFtRlRWbXQzVjJzNVYwMUVRalZaVlZKVFZqSktTRlZxVGxkU1JYQkxXbFZhYTJOc2NFaGlSbEpUVjBWS01sWnNaRFJXYXpGWFdrWmtXR0pzU25OVk1HUlRWREZXZEdWRmRGaFNiSEJaV2xWVk5XRkdTWGRYVkVwV1lsaG9lbGRXV21GV01rNUpWMnhrYVZkRk5EQlhWRVpoV1ZkT2RGWnJaR0ZTTW1oUFdXdFdkMVJzV25OVmEwNW9UVlZzTkZVeGFHOWhiRXBZVlc1R1ZtRnJiekJXYTFwVFYwVXhXRTVYZUZkaVNFRjNWa1phYjJFeFZYZE5XRTVUWVd4S1dGUlhjRmRWUm1SWFYyczVVMDFWTlhwV1YzaDNZVVV4VjFacVVsZGhNVXBJVjFaa1UxSnJOVmRYYkZab1pXMTRkMVpYTURGUk1EVlhWMWhzYTFKck5WZFVWM1JoVWpGU1YyRkZkRmhTTUhCSldWVmFiMVpXV1hwUmJHaFhWbFp3ZWxZd1pGZFNiVkpIWVVaT1RsSnVRa3BXTVZwWFdWWnNXRkpyYUZOaGJIQllXVmQwZDFkR2JGaGtSWFJvVW0xU1dGZHJWVFZXTURGV1RsUkdWMVl6YUZCWlZscHJVbXhPYzFGc1pHbFhSVXBKVmxod1FrMVhUWGhqUldSb1VqTlNWRlJWV25kaFJscDBZMFZPV2xadFVsaFdiVFZQWVVaSmVsVnRPVnBoTVZvelZGVmFkMVpzWkhWVWJHUk9ZVE5CZUZaV1pEQlVNV3hYVjJ4a2FsSnRhRmhaYTFwM1ZVWnNObEp1WkZSU01EVkhWR3hrYjFSc1duUmtSRlpYWVd0YWNsUlZaRVprTURWV1drWm9hRTFzU2xaWFYzUmhXVlprUjJKSVNtRlNSa3BaVlcxNFlVMUdjRlpoUjNSb1RXdHdTRll5ZUdGV2JVcFpWRlJHVjJGclJqUldha3BQVWxaS2MxcEdaRTVOUkVVd1ZtMXdRMWxXVG5SV2EyUlZZbXMxYjFWdE1WTldSbXh6VjJ0a1RrMVhVbmxXVjNRd1ZqQXhWMkpFVWxkTmJtaDZXVlphU21WdFJrZFdiRnBvWVRGd1RWWnFSbUZaVmtsNFkwVldVbUpZVWs5V2JGSlhVMVprVjFWck9XaE5WMUpKVlRKMFlWUXhXblJsUm1SYVlrZG9kbFJVUm5kWFIxWkpVMjEwVGxZeFNqVldhMlEwWWpKR1YxZHVUbXBTUmxwWVdWZDBkazFHVmxWU2JYUnFZWHBHV2xadE1XOVdSa3BaVVcwNVYxWXphSEpXVkVaVFVqRmFkVkpzVG1sU1ZGWjRWa1phWVZNeVZuTmFTRXBZWVhwc2IxWnRjekZTTVZWNVRWVmtWMDFyY0ZaVlYzQlBXVlpLUm1OR1RtRldiSEJvV1RKNGEyTnJPVmRhUm1ST1ZsaENXVlp0TVhkUk1rVjNUbFZrV0ZkSGFIQlZNRlozWVVaV2RHTjZSbXBXYkhBd1dsVmtSMkpIU2tkaVJGWlZWbXhhY2xacVNrZE9iRXB6WVVad2FFMVZjRkZXYWtKclVtMVdWMVZzVmxOaVIxSndWakJrYjFSV1pISldiWFJYVFZVMVdWVXlkR3RaVmtsNVpVWm9WbUpZYUROVWJGcGhaRVV4V1ZwR1VrNVdWRVV3VmxSR2IySXhiRmRVYTFwUFYwVktWMWxzVWxkU1JscEZVbXhPVjFacldubGFSVnBUVmpKS1NWRllaRmRTYkhCMldrUktTMUl4VG5WVWJYQlRVbFZ3V0ZaR1l6RlZNV1JIVjFoa1lWSllVbFZWYlhoaFpXeGFXR1ZHWkZkTlZYQlhXVEJWZUZZeVNsbGhSMmhZVm0xU1ZGVXdXbE5qYkdSMFVteE9hVkpZUWxGV2JURTBZakZGZDA1WVRsaFhSM2h5Vlc1d2MxWnNVbGRYYm1ST1VteFdOVnBGWkRCaFIwcEdZMFJDV2xaV2NHaFdha3BHWlVaa2NscEhSbE5TVm5CVlZtMHhOR0V5VWtkVGJsSnJVbXMxV0ZWc1duZGhSbGw0Vld0T2FFMUVWa2hXYkdoelZrZEZlV0ZJU21GV00xSk1WakJhYzFkSFVrbFRiWGhUWWtoQ1IxWlhNSGhOUmxwSFUyNUtUMWRIZUdGV2JGcDNZVVpzVjFkcmRHcGlWVFZJV1d0YWIxWXdNSGhUYm14WVZqTkNTRlY2UmtwbFJtUjFWbXhPYVZKVVZuZFdWRUpYVXpKV2MxZHNhRTVUUjJoUFZXeFNWMlZzYkhKWGJVWlhUVlp3U0ZZeWVHdFdWbGw2VlcxR1ZWWXphRmhaZWtaWFkyeHdSMXBGTldoTk1FcEtWakZTUTJJeGJGZGFTRkpUWW10d2NWVnNaRzlaVm5CWVpFZEdWbEp0ZHpKVmJUVnJWa1pKZDA1VmFGZFNNMDE0V1ZaYVdtVlhSa2RqUm1Sb1lURndiMVpzVWtkVGJWWlhWbXhzYUZKc2NHOVVWM2hMWkd4YVIxVnJkRlpOVjFKWVdXdG9TMWxXU25KT1dFWlhZbGhvVEZZd1dscGxWVEZXV2taV2FWSnVRalpYVkVKWFl6RmFWMWR1VGxSaE1VcFlXV3RrVTFSR1ZuRlRhemxVVmpBMVNGa3dWVEZWTWtweVVtcGFWMkpZUWtSWlZFWkxaRVphY2xwSFJsUlNhM0IyVmxjd2VGVXhXa2RXYms1WVltMVNjRlJXWkZOWGJHdDNWbTEwVjFaVVJsbFdWM2h2VjJzeFIxZHVXbHBXTTJoTVdUSnpNVll5U2tkWGJXeFRZa2M1TmxZeFpIZFNNV3hZVld0YVRsWnNXbGRaYTJoRFYwWlNWMVpzY0U1V2JIQjVWMWh3UjFaVk1WaFZhMmhZWVRGYWRsbHJXa3RXVjBwSFlVWndhVkpyY0VsV2JYUmhZMjFXUjFwSVZsVmlXRUpQVm0wMVExWXhXbGhOVkZKV1RWWldOVlV5ZUhOaFJrcDBZVVpvVlZaNlZsUldNRnB6VmxaS2MyTkhkRTVTUlZwaFZsUkplR1F4VlhsVGJHaG9VbTFvV0ZWdE1VNWxSbXh4VW10MFUwMVhVbHBYYTJSSFZURmtSMU5zVmxkU2JIQnlWbFJCZUZZeFdsbGlSM2hUVFRGS2RsWlhjRU5XTURWSFlUTmtWMkZzU2xsVmFrSjNVMFpaZVUxWE9WaFNiSEF3VmxkNFUxWXlSbkpYYkdoaFVteHdXRnBGWkU5U01WSjBZVWQ0YVZKdE9UWldiVEIzWkRKV1JrMVZhRlpYUjFKUVZqQlZNVmRXV1hkYVJ6bFlWbTE0ZVZac1VrZFdNVXB6VTJ4b1dHRXhjRkJaYTFwaFl6Rk9jMkZHWkdsV1JWWXpWbXBDWVZOdFVYbFVhMnhwVW0xU1QxbHRNVzlYVmxweFUycFNXR0pXV2pCVmJYUmhZa1pLZFZGdE9WcFdSVm96Vm14YVlXUkZNVlZWYkdST1lYcFdObFpzWXpGVE1WWkhWMjVLVDFkRlNsaFVWV1JUWkZaU1ZsZHRSbXRTTVVwSldUQmtNRlJzU2tkWGJHeFhUVzVTV0ZsVVJtRlRSazUxVkd4U2FWSXhTbWhXYlhSWFpHc3hSMkpHV2xoaVZWcHhWRlpvUTFOV1VYaFhhemxXVFd0d1NsVldhR3RXTVVwelkwWm9XbFpGY0VoYVJWcExZMVprYzFwSGJGUlNWWEJhVm10YWFrMVhTWGxWYms1WVltdGFWVmxVVGxOV1ZscDBaRWRHYkdKR2NEQmFWV1F3WVVaSmQxWnFUbHBOUm5CMlZqQmtTMUl4WkhSaFJuQlhVbFp3VFZkVVNucE9WbGw0WTBWa2FGSXlhSE5aYkdodlYyeFplRmR0T1d0TlZtdzFWbFpvYjFkSFNuTlRhemxYWVRGYVRGa3llRk5XTVhCSFZHMTRhVkp0ZHpGV1IzaFhZVEZhY2sxWVNtcFNiSEJoV1ZSS2IxUkdXbk5YYlVacVRWZFNNVmt3V2xkaFZrcDFVV3hzV0ZkSVFreFZha1pQVW1zNVYxcEhhRk5oZWxaUVZsUkNWMU5yTVhOWGJrNVdZVE5DY2xSVlVsZFhSbGw1VGxaT1YxSXdWalZaVldNMVZtMUtSMk5GZUZkTlJuQlVWbTE0YTJSV2NFaGxSMnhUVFRKT05WWnNZM2hPUjBWNVVtNUtUbFp0ZUZOWlZFcHZXVlphYzFkdVpGWlNiWGhZVmpJeFIyRnRTbFpPVldoYVRVWndjbGxXV210U2JFNXlUVlprVTJKR2NIbFdiR040VmpGWmVGVnVWbFJpVlZwVVdXdFdkMlF4WkZoa1JtUnJUVmRTU0ZkcldtOVViRTVJWVVoQ1ZWWnRVbFJWTUZwelkyMUdSazlYYUZOaE1qaDVWMWQwVms1V1dsZFhibEpXVmtWS2FGWnRlSGRqYkd0NVpVZEdhMUl4U2toV2JYTXhZVVV3ZDFOcmNGZE5Wa3BFV1dwS1VtVkdaRmxpUmxKcFVqTm9kbFpVUW1Ga01XUkhZa1pvYTFOSFVsWlZiWGhoWlVaVmVXTjZWbGRTYkd3eldUQldiMWRIUlhoalNGcFhZVEZ3VEZadE1VOVNhelZYV2tkc1dGSXlhRlpXYkdSM1VqRlJlVlZyWkZoaWEzQm9WV3BDWVZaV1ZuUmxTR1JZVm0xU1dWcEZaRWRoTURGeVRsVm9WMkpVVmxSWmExcFBVMFpXZFZOc1ZsZGlTRUY2VjJ4V1lWWXhaRVpOVmxwaFVtMVNWRlpyVm1GWFZscHhVMnBDYVUxWFVrbFZiR2h2WVd4T1IyTkhSbHBXUlZvelZrVmFVMlJGTVZaa1JsSlhZVEZ3TmxadE1UUmhNVmw1VWxod1VtSklRbGhaYkdoRFVrWmtWMXBGV214V2JFb3hWa2N4UjFaR1NuSmpTR3hYVm5wQ05GbHFSbUZTTVZaelYyMW9VMVpVVmxwV1Z6RTBaREpXUjFaWWJHcFNhelZYV1Zod1IxZEdhM2RWYTA1WFlYcEdNVlpYTlV0V01rVjVWV3RrWVZadFVraFZha1ozVWpGYWMxcEhiRlJTVlZreVZtMHhkMUV4YkZoVldHaFVZbXMxY1ZWc1pGTmhSbFowWlVWMFYxSnNjSGxYYTFKVFYwWmFjMkpFVm1GU1YxRjNXVmR6ZUZZeVNrVlZiR2hvVFZad2IxWnRkR3RUTVdSSVVtdGthRkp1UW5CVmFrcHZUV3hrVlZKdFJsWk5WbXcwVjJ0b1MxZEhTbGxoUmxKYVlrWndTMXBWV21Gak1YQkZWV3hXVG1FeGNGcFdWM2h2WkRGV2RGTnJiRkppUjNoWVdWZHpNV1JzYTNsbFNFNXFWbXR3TUZWdE1YZFViVVY2VVd0MFYxWkZiekJaYWtwSFYwWk9jMXBHVW1saWEwcGFWbTF3VDFVeVJrZFdhbHBTVjBkb1ZGUlhjekZUUmxsNVpVZDBhRkl3VmpOWk1HaGhWMFpaZWxWdGFHRlNSWEJZV1hwR2ExZFhTa2hqUms1WFZrWmFZVll4WkRSV01WbDNUbFZrYUUweVVtOVZiR2hUVjFac2NsZHVaR3hpUjNReldWVldNRll5UmpaU2EyeFhWak5TZGxadGMzaFRSbFp5WVVaYWFHRXhiM3BXVkVKclV6RkplVkpyWkZWaVIxSlpWV3hXZDFWR1duUk5TR2hPVW0xNFdGbHJXbXRoVmtwMFZXeFdXbUpZYUV4V01GcHpWbFpPYzFSdGNGZGlSbkEyVmpKMFUxVXhXWGhYYmxKc1VtNUNZVlJWV25kamJGbDNWMjFHYWsxWFVqRlpNRnByVkcxR2MxZHViRmhXYkVwRFdsVmFXbVZXVW5KYVIyeFRUVVp3VlZadE1ERlJNbFpYVjI1R1ZHRnNTbUZXYWtGNFRsWmFTR1JJVG1oaVJYQXdWbGMxUTFZeVJYaGpSMmhYVFZad2NsWnFSbmRTVmxaelZXczFWMDFWY0VwV2JUQjNUVlpaZUZkc2FGUmhNbmhUV1d4U2MxWnNXbkZVYlRsVFRWaENSbFZ0TVVkaGJGcHlZMFJDVm1KWWFHaFdSM2hoWkVkU05sRnNaR2hoTW5RMFZsZHdSMVl5VWtkVWJrcGhVbTFvY0ZaclpEUmlNVnAwWTBVNVZrMXJXa2hXVnpWUFYwZEtWbGRzVmxaaGExcG9WVEJhYTJOc1pIVmFSbVJPWVROQ1MxWldaSGRaVmxsNVVtNUthbEpGTlZsV2JYaDNWakZ3VjFkck9XdFdiSEI2VlRJeGMxVXdNWFJoUnpsWFlsUkdNMVpFUmxabFJsSnlXa1phYVdFelFscFhWM1JyVlRKT1YxZHVVbXBsYTFwelZtMHhNRTB4WkhKVmJFNW9VbXh3ZWxrd1dtRldNa3BaVlc1d1YyRnJSalJhUmxwWFpFZEdSMXBHVGxOV2JrSnZWakowVTFGdFZrZFhiazVZWW1zMVdWbHJaRzlXUmxKWFZtNWtXR0pHY0hsV01qRkhZVVV4Y21KRVRsVldWMmgyVm1wS1IyTXlUa2RWYkhCWFVsUldWVmRVU2pSV01sSklWbXRvVTJKSGFIQlZha1pMVGxaYWNWTnFRbFZOVm13elZGWm9TMkZzU25WUmJVWlhZa1p3TTFacldscGtNV1J6WTBkNGFWSnNjRFpYVmxaclVqRlZlRk5zWkdwVFIzaFlXV3hvUTFOR1pGZGFSazVYVFZVMU1WWkhlRmRoVmxsNVlVWkNWMUpzY0ZoYVJFWnJWakZrZFZWck5WUlNNVXA2VmxjeE5GWXdOVWRhU0VwWVlsaFNiMWxyVm5kbGJHdDNWMjVPV0dKVmNFaFdNakZ2VmpKS1dXRkljRnBOYm1oeVdrWmFVMk5yTlZaT1ZtUm9UVEJGZVZadE1YZFRiVkYzVGxaa1dGZEhVazlXYlRGVFkwWldjbGR1WkZwV2JIQjZWMnRqTldGR1NuTmpTR2hXWWxoU00xbHJaRXRXYkdSeVlrWndWMVp1UVhwWFYzUnJVbTFXYzFKdVRsTmlSMUpZVld4YWQySXhXbk5WYTNSVllsWmFXRlpYTlV0WlZrbDVZVVpTV21FeFdqTldiRnBoWkVkV1NFOVdTazVXTTJoWlZtcEpNVlV4VW5OVWEyaG9VbXRLVjFsc1VrWk5SbGwzVjIxR2FrMXJXa2xVTVZwdlZUQXhTVkZxV2xkV1JXOHdWbFJHYTJNeFpISlhiV3hzWVRCd2FGWnRlR0ZrTVdSSFkwVmFZVkp0VWxWVmJYUjNUVVpyZDFkck9XaFdhelZIVlcxd1QxWXdNWFZoUm1oYVlXdHdSMXBWV2xkWFYwcEhWVzFvVG1KWGFGbFdNV1F3WVRKSmVGcEZaRmhpYTFwV1dWaHdWMVF4V25STlZGSllVbXh3ZWxsVll6VldNREZGVW01c1ZXSkdXblpXTW5oaFZqSk9TR0ZHWkZObGExcEpWMWh3UjJFeVRYaFRiazVoVWpKNFdWVnRkSGRPVmxwellVaGtVMDFWTlRCV2JYUnJWbTFLYzFkc1pGcGhNVlY0V1RCYVZtUXhXbkprUm1oWFlraENXbGRzVm10U01rVjNUVlpvVm1FeWFGbFpWRXB2VlVaYWNWTnJkRmRpUjFJeFZXMTRkMkZXU25WUmJUbFhWa1ZLYUZsVVNrOWtSa3B5V2tkR1UySlhhRlZXUmxadlVURnNWMXBHWkZkaVZHeFRWRlphZDAxR1ZYbGxTRTVvVW10d1IxUnNXbUZYYlVwSVlVaGFXbFpXY0doWk1WcExaRlp3UjFSc1pHbFNiVGt6VmpGYVYxWnJNVmRYV0d4VVlUSlNiMVJVU2xOWFJteHpZVVZPVlZKc1NsZFhhMVpoWWtaS2RWRnJaRnBXVm5CUVdWWmtSMDVzV25WaFJtUlhaV3RKTUZkWGNFZGpNVmw0V2toV1ZHSkhVbkJXYkZwM1ZqRmFXRTFVVWxkTlJFSTBWakZvYzFSc1dsaFZiR2hXWWxoU00xWnRlRmRrUjFaSVQxWm9VMDFHV1RCWFZFSmhWVEZaZUZkcldtcFNWMmhXV1d4b2IyRkdhM2hYYlhScVRWaENSMVJzWkhOaFZrcFpVVlJHVjJGcmIzZFdWRVpLWlVaa2RWVnNaR2xTTVVwWFYxY3hNR1F5UmtkV2JrWlZZVEExV0ZWdE5VTlhWbEpYVld4T1dGSnNjSHBaTUZwelZsWmFjMU5zVWxkaE1WWTBWbXBHVDJOdFJrZGpSMmhPWWxkb1NsWnRlRk5UTVUxNVZHNUtUMVp0VW05VmJYaGhWMFpTVlZKcmNHeGlSbkJXVlZjeFIyRnJNVmRqU0hCWFRXNW9XRlpVU2t0VFIwWkhWV3h3V0ZORlNsbFdWRUpoV1ZaYVYxUnNWbE5pV0VKUFZtMHhNMDFHV2xWVFZFWlZUV3RhZWxVeGFITmhSa3AwVlcxb1YyRnJOVlJVVkVaYVpERmtkRkp0Y0ZkaE0wRjNWMnRXYTJReFVuUlNXR2hxVWxkb1dGVnFUbTloUm14VlVteHdhMDFFUmxoV01qRjNWVEZLV1ZGc2JGaFdNMUp5VmxSQmQyVkdXbk5XYkU1cFYwWktlRmRXYUhkU01XUnpWMnRvVGxkRk5WaFZiWFIzVjJ4V1dHVklaRmhTYkc4eVZXMXdZVlpXV25OalNFcFdZV3R3VEZWcVNrdFRSMDVIVkd4a1RsWllRbWhXYlhocVpVVTFTRlJZWkU5V1YxSndWVzE0ZDJGR1ZuSldhM1JZVm14YWVGVlhOV3RXUmtwMFpFUk9WMkpVUlhkV2FrRjRVbFpLY1ZKc2NGZFdiSEJWVm0xd1MxTXhaRmRWYmtaV1lrWndUMVZ0TlVOWFZtUlpZMFYwVTAxVmJEUlhhMmhUWVZaS2NrNVlRbHBXUlVvelZtcEdZV05XU25SUFYzUk9WbFJGTUZaVVJtOWlNVnBZVWxoc2FGSnNXbUZXYTFaM1ZrWmFkR1ZJVG1wTldFSkpWREZhVjFSc1dYcGhSbkJYVW14d2RscEVTa3RTTVU1MVZHMXdVMUpWY0ZkV2JUQjRZakpPYzFkdVNsZFhSMmh4VkZaV2QyVkdXbGhsUjNSV1RXdHdXVmxWVWt0V01rcFpWVzFvV2xaRldsQlZNRnBMWTIxR1NHRkdUbWxUUlVvelZteGpkMDFXUm5SV2JrNVlZbXR3VjFsVVNsTlpWbHB4VW10MFUwMVdTbGhXTWpBMVZteEtjMkpFVm1GV1ZsVXhWbXBLUzFkWFJrVlViRlpvVFZoQ2IxWnRjRWRqYlZaMFVtdGtWV0Y2VmxoWmJYUkxWMVphY2xkdFJscFdNR3cxVlRKMGExWlhSWGxoU0U1V1lsUkdkbFp0ZUdGa1YwNUhXa2QwYVZKcmNGZFdWekF4VkRKR2RGTnJhRlpoYTBwWFdXeFNSbVF4V2xWVGEzUlRUV3RzTmxsVldtOVdNVXBXWTBjNVdGWnNTa3hWYWtaYVpVZE9SbGRzYUdobGJGcFpWbGN4TUdReFpITlhibEpxVWxSc1YxUlhkR0ZUUmxwellVaE9WV0pHY0hsWk1HaExWbFphVjFOc2FGZE5SbkJoV2xaVmVGZEZPVmRYYXpWb1RUQkpNVlpzVWt0T1IwMTRWMWhvV0ZkSVFtOVZiWGhMVjBac1dHUkZXbXhTYlhjeVZXMHhNR0V4V25OVGJuQllZVEpTZWxacVJtRmtWa1p4VTJ4a2FFMVlRbTlXYlhCTFZHMVJkMDVXV21GU01GcFZWV3hvUTJSc1dsaGxSemxXVFZkU1NGWlhlRzloTVU1SVZXeFdWMkpVUlRCV2FrWnJWMWRPUjFwR2FGTk5TRUpLVm14a01HUXhXbk5YV0hCb1UwWndXRmxzVWtkVVJsWnhVMnM1VkZKcmNEQlZiWGhyVmpKS2NsTnFWbGROYmxKWVYxWmFUbVZXVWxsaFIwWlVVbGhDVVZadE1IaFZNazVIWWtaV1VtSnRVbUZXYlhoM1RVWndWbHBJWkdoTlJFWkdWVzE0YjFZd01WaGhTRnBhVm14d1RGcEZXbGRqTVZweldrVTFVMDF0YUVaV2JYaFRVakpOZUZwR2FGVmhNbmhXV1d0a2IxWkdiSE5oUnpsWVlrZFNlVlp0TVRCVk1ERlhZMFpvVmsxcVZsQlpWbHBMVWpGT2MyRkdWbGROTUVwSVYydFNSMWxYVGxkU2JHeG9VbTFTVDFsWWNGZFNNVnBYV2tSU1dsWXdXbGhYYTFadllVWktkR1ZHYUZwV1JYQlFWR3RhVjJSRk1WZGFSbEpUWWtWd05WWXlkR3RqTVZWNVUyeGtWR0pIZUZoV2FrNXZZMnhTVmxaVVJsTk5WMUl4VmxjeGQxVXhXWGhUYkd4WFVtMVJNRlY2Ums5U01WcFpZa2Q0VkZKVVZuWldWekV3WXpBMWMxWnNhR3hTYXpWWVZtMTRkMWRHYTNkVmF6bFlZa1p3V0Zrd1pHOVpWa3BZVld4Q1ZtSllUVEZXYWtaclkyczFWMVJzVGxkV00xRjZWbTF3UjFsV1ZYaFZXR3hWVjBkNFZWbFVTbE5XVmxsM1drWk9XRlp0ZUhsV01qRkhWakF4V0dWSWJGZE5ibEYzVm10YVMyTXlUa2xoUmxwcFZrVldNMWRXWTNoVE1VNVhVbTVLYWxKdGFHOVVWM2hMVFd4YWRHTkZkRk5pVmxwNlZXMDFVMVV5U2toVmJHaGFZa1p3UzFwWGVHRmpNVlp5V2tab2FWWnNjRmxXYTJNeFV6SkdSMU51VG1wU2JXaFhXV3RhWVUweFdYaFhiWFJYVFZoQ1JsVlhlSGRXTWtwSlVXdHNXRll6VWxSWFZscFdaVlpLY1ZkdGJGUlNXRUpaVjFkNGIxUnRWa2RWYkZwWVltdHdjbFJXWkZObFZsRjRWMjEwVldKVlZqUldNVkpMVmpGYWRGUnFVbFpoYTFwaFdrUkJlRll5UmtkWGJHaFRUVlZ3YjFadE1UQldNV3hYVjFob2FsSldXbE5XYTFaaFYxWmFkR1ZGZEU1U2JYUXpWakp6TldGR1duSk9WV1JXVFdwR1NGWnFRWGhYUmxaVlVXeGthR0V4Y0RaV2JYQkhaREZLYzJORlpGaGlWM2hVVkZaV2QxbFdXWGhhUkZKWFRWZDRXVlpHYUc5aFZrNUdZMGRvVm1FeGNFeFpla1poWkVVeFYxUnRlRmRpVmtwaFYxUkNZV0V4V1hkTldFcFlWa1Z3VjFsc1VsZGxiRnB4VTJ0MFdGWnJXbnBWVjNoclZHMUtjazVFUWxkV00wSk1Wa1JHVDFkR1VuSmFSMFpUVFcxb2RsWkdXbTlSTWxKelYyNUtXazB5YUZCVmJYTjRUa1paZVdWSGRGWk5hM0I1Vkd4a2IxWnRSbkpqU0ZwYVlXdGFWRlp0ZUd0a1ZsSnlUMWRzVTJKWVkzaFdNbmhYV1ZkRmVGcElUbGhYUjFKWVdWZDRZVmRHVm5WalJtUlhVbXh3VmxVeWRHRmlSbGwzVjJ0d1YxSXphR2haVmxwclVtc3hWVlZzYUZkTk1FcEpWMnRTUjJFeFRrZFhia3BvVW1zMWNGVnFSa3RrTVZwWVRVaG9UazFFUmtoV01qVkhWa1prU0ZWc1FsZGhhMHBZVkZSR1UxWXhaSFJrUjJoWFlUTkNTVlpVU2pSaU1WcFhWMjVTVm1Kc2NHaFZhazV2WVVad1JscEdaRlJTTVVwSVZsZDRUMVJzU25WUmEzQlhUVmRSZDFkV1pGSmxWa3B5VjJzMVdGSlVWbFpYVjNSaFdWWmtSMkpJVG1oU1ZUVlZWVzE0ZDFac1ZuUmxTR1JwVW10d01WVlhkSGRXTWtwVlVtdG9WMVpGY0V4V2FrWlBaRlp3UjFwR1pHeGhNRmt3Vm14YWFtVkdWblJXYTJScVVsZDRWVmxyWkZOalJscHpWMjVrYTJKR2NFaFdNakV3Vm1zeFZrNVdhRmRpUjJoNldXdGFTbVF4WkhSUFZuQm9UVlp2ZWxacVJtRmpNVnB6V2toU2ExSnRVbGhaYTJNMFpWWmFkRTFVVWxaTlYzaFlWVEZvZDJGR1NYbGhSMFpoVmpOU2FGa3llSE5PYkU1eVQxWlNVMDFXY0VwWFYzUmhZVEZaZVZOdVNsUmhla1pZV1d4b2IxWkdWalpSVkVaVVVteGFXbGxWV21GaFYwcEdZMFphV0ZaNlJUQlZla3BIVWpGV2MxWnNWbWhOUkZaYVZsY3hOR1F5VmxkWGJsSk9WbGRTYjFWdGRIZGxiR3QzVjIxR1YyRjZSakZaVlZwRFZqSkZlR05GZUZwTmJrMTRWakZrUzFJeVJraGhSVFZwVWxoQ1MxWnRNVFJWTVVsNFlrWmtWRmRIYUdoVk1GVXhWMFpzY2xwSE9WaFNia0paV2tWYWExUnJNVmRqUm5CYVRVWlpkMVpVUVhoV2JVcEZWV3hvYUUxdGFGbFdiVEI0VWpBMWMxZHVUbGRpUm5CdldWUkdkMVJXWkhOWGJVWmFWbXRzTkZrd1ZsZFdiVXBKVVd4b1dsWkZiM3BVVlZwaFl6RndSVlZ0YUU1V2JYY3hWbFJLTkdNeFduUlRhMmhvVW14d1dGbFhjekZXUmxsM1YyeE9hazFYVWpGV1IzaHJZVlpKZUZOcVdsZGhNbEV3V1dwS1IxWXhaSE5hUm1oWFVsVndXbFp0ZEZkVE1WcEhWMnRXVTJKSVFuTldiWFIzVjJ4c1ZscElaRmRTYXpWSFZUSjRjMVl4U25OWGJrcFhWa1ZhY2xWcVJtRlhWbkJIWVVkb1RrMVZjRFJXYTFwaFlqRkZlRlJzWkdsVFJYQlpXVmh3YzJJeFduRlJiR1JPVFZkNFZsWkhOVTlXTURGeVkwWmFWbUpZUWxCV2JURlhZMnhLY1ZWc1dtbFhSVFF3Vm0weE5HUXhTWGhqUldSb1VtczFUMVpzYUVOVmJGcDBUVWhrYTAxc1draFdiR2h2VjBkS1NGVnVRbFpOUm5CTVZrUkdZV05zWkhKa1JtaFhZa1p2ZDFaR1dsTlZNa3BIVjI1U1ZtSnRlRmxXTUdoRFYwWnNWbFpZYUdwaVZUVkhXVlZhZDFSc1NuVlJiVGxYWWxSQ05GVjZSbUZXTVU1MVUyMW9VMkpyU2xsV1JsSkNUVVV4UjFkdVVrNVhTRUpQVm0weFUxZFdXa2hrUjNSb1lrVndWbFp0ZUZOWGJVcFpWV3RvVldKWWFHaGFSVlY0VjFad1IxUnJOVmROTW1oaFZtMTBZV0l5U1hoYVJXaFVZbXR3V1ZsclpGTlpWbXhWVTJ4T2EySkdiRE5XTW5oUFZqRmFjbU5JYkdGU1YxRXdWbXBLUzFOV1JuTmpSbVJUWWtad01sZFhjRWRYYlZGM1RWWmtXR0pYZUZSVmJYUjNWMnhrVjFWcmRHbE5WbHBJV1d0YWExZEhSWHBSYms1WFlXdEthRlV3V21GWFIxWkpXa2RvVjJFelFYaFdWbVI2WlVaWmVWTnNiR2hTTW1oWlZtMTRkMU14Y0ZaWGJVWnJWbXMxTUZwRldrOVViVXAwWVVaR1YySlVRak5VVmxwR1pVWndSMXBHYUdsaE1YQldWbTEwVjFsV1duTlZiR1JoVWtaS1dWVnRlSGRUVm5CR1lVVTVWMkpWY0ZkWk1HaHpWbGRLUjJOSVNsZE5ha1pNVlRCa1IxTldaSE5XYkdSVFZtMDVObFp0TVhkU01rVjVWRmhvVm1Kck5XaFZiRkpYVjBaU1YxWnVUazVOVm13MVdrVmFhMWRzV1hkV2FsSlhWbnBXVkZaVVJtdFRWa1p6Vkd4d2FFMXRhRVZXYWtaaFdWZFNTRlpyYUZOaVdGSndWVzAxUTFJeFdsaE5TR2hPVWpCV05GVXlOVXRoYkVwMVVXMUdWMkpIVWxSVVZFWmhWbFpLY21SR1pGZGlTRUkyVjFkMFlXRXlSbGRhUldob1VucHNXVmxVUmt0VVJsWnhVbXR3YkZack5YbFdiWGh2WVZaS1ZWWnVaRmRoYTBwb1ZYcEtWMUl4WkhKYVJtaHBWbFp3VmxaR1pEUlpWMVp6VjI1T2FGTkZOVzlaYkZwaFpWWlplV1ZIT1ZkV2JHdzJWbGQ0YjFaWFNsbGhSbWhYVFVkU1ZGVXhXbmRTTVhCR1RsWk9VMVp1UW1GV2JYaFRVekF4UjFaWWFGaFhSM2hVV1cxMGQxZFdiSFJPVlU1WVVtMTRXVnBGYUd0V1ZrcHpWMjVvVm1KVVZuSldWRUY0VmpKT1JWRnNjRmRXYkZZMFZtcENZVk14V25SVWEyUlZZa2RTY0ZaclZrcE5SbHBJWkVkR1YySldXbGhXVjNoellVWktkR0ZHYkZaaGEzQjJXa1JHWVZkRk1VbGhSMnhPWVhwV05sWnRNREZVTWtaSFUyNUtUMVpzY0ZaV2JYaDNWRVpaZDFkc2NHeFdNVnBKV2tWYVYxUnNXbGxSYWxwWVZqTlNWRlpxUm1GV01XUjFWR3hvYVdFelFtaFdiWGhyVlRGT1IxVnVVbXhTV0ZKeFZGZDBZVk5HWkhKV1ZFWm9WakJXTTFrd1ZtRldNa3BWVVdwT1lWWldjRTlhVlZwM1VqSkdSMVJ0YUU1aVJYQlpWakZrTUdJeFJYaGFSV1JwVTBWd2IxVnNWVEZXYkZwMFpVaGtiRkpzV2pCVVZsWnJWbXN4UlZKdWJGVldiRXBZVm0weFMxZFdWblZUYkdoWFlraENUVmRVU25wTlZtUlhVbTVPV0dKWGVGaFZiWGgzVW14YWRFMUlhRTlTYlhoWlZrWm9jMVV5UlhsbFIyaFdZbGhOZUZaRVJuTldWa3B6WTBVMVUySklRbGRXVnpCM1RsZEdWazFXWkdwU2JYaFhWRmR3VjFSR1drVlNiSEJzVmpCYVNGZHJXbmRXTURCM1RWUlNWMVl6VW1oWFZtUlBZekZ3U1Zac1ZtbFhSVXBRVm1wQ1YxTXhUbk5YYTFaVFlsaFNjVlJXV2t0bGJGbDVUbFprVm1KSFVrbFdWM2h6VmpKRmVGZHJlRmRoYTFwVVdYcEdkMUpzY0VkYVIyaHNZVEZ3V1ZadE1IaE9SazE1VW10b1ZHRXhjSEZWYlRFMFYwWldkR1ZJWkdwaVIzaDRWVEo0VDJGck1WaFZiSEJZWVRKU1NGWlVSbHBsUms1elVteG9WMDB5YUZsWGExSkhWREpOZUZkc2JHbFNNMmhVVkZSR1MyUnNXbGhqUlU1WFRVUkNORll5TlZOaGJFcHlUbFpvVlZac2NETlZha1pXWlZVeFdFOVdhR2xXYkhBMVYxUkNZVkV4WkhSV2JrcFlZV3MxVjFSV1duZFZSbXcyVW10a2FrMVlRa2RVYkdSelZqQXhkR0ZHYUZkaVZFVjNWMVphYzFZeVNrZGhSbHBZVWpGS1VWWnFRbFpOVm1SWFlraFNhMUl3V2xoV2JURTBUVVpTVjFkck9WZE5WbkI2VlRKNGIxWXdNWEZXYkVKWFVqTk9ORlpxUms5ak1rWkhXa1UxYUdFd1ZqUldiVEYzVXpGTmVGTlliRlZoTVhCb1ZXMTRkMVF4YkZoa1IwWlVWbXh3ZUZVeWNGTlhSMHBYVjI1d1YySlVWbFJaVlZwTFpFZEdSMkZHY0doTmJXaEVWMnhrTkZsWFVraFVhMXBoVWpKb1QxbFljRmRPVmxwRlVtMUdhVTFyV25wVk1XaHpZa1pLZEdGR2FGcGlSa3BZVld0YVZtVlhWa2hTYlhSVFRWWndTbGRVUW10T1JsVjNUVlZvYTJWclNsaFphMlJPWlVaYVJWSnRkRlJTYXpWNVdWVmtORlV5UmpaV2JXaFlWbXhLU0ZwRVNrZFNNV1JaV2tab2FWSlVWbGxXUmxwdlVURk9SMVpZYkU1V1JVcFdXV3RhYzA1c2JGWlhiWFJYVFZad1IxbHFUbXRaVmtwR1kwVjRWbUZyV25KYVJscFBZMnM1VjFwSGJHaE5TRUoyVm0wd2VFNUdiRmhWV0d4V1ltczFjRlZ0TVZOaFJsWnpWMjVrYWsxV1duaFZWbEpIVmtaS2MyTkVRbUZXVjAweFZtcEJlRkpXUm5GV2JIQlhWbTVDTmxadGNFSmxSbGw1Vkd0c1ZHSkhVbFJWYkZwM1lVWmtjMVp0Um10TlZUVllWakkxVDFkSFNsaGhTRTVhWVRGd00xWXllR0ZqTVd0NllVVTFVMDFWV1RCV01uUmhZVEZrU0ZKWWJGWmlSM2hoV1d0a2IxWkdXbkZTYkU1WFRWZFNNVmRyWkRSaFZrcDBaSHBHV0dFeFduRlViRnBoVjBaT2NsZHRjRk5XTW1oWlZrWmtkMUZyTVZkWGJsSk9WbGhTV1ZadGVHRmxSbHBJVFZWa1YwMXJjRXBWVjNCaFYwWmFSbUo2UWxkaGEzQlFXVEp6TlZZeGNFaGhSazVPWWxkb05sWXhXbE5TTWxGNFZHNU9XR0pyTlZkWlZFNVRWREZXZEdWR1pFOVNiR3cwV1ZWb1QxWXhTWGRXYWxaYVZsWndjbFl5ZUdGU2F6VlpWMnhrYUdFeGNGVldiVEUwWVRKU1YyTkZaR2hTYXpWd1ZqQmtUMDVXV25OWk0yaE9VakJXTlZWdE5VdFViR1JHWTBaQ1YySkhVblpXTVZwelZsWktkVnBHV2xOaVNFSTBWbFJLTUUxSFJuUlRhMXBQVjBkb1YxUlhOVzlqYkd4WFYyMTBVMDFWTlRGWlZWcHZZVlpLYzJOR2FGZFNiSEJvVlRJeFYxWXhVblZUYlVaVFRXMW9WVmRYZEc5Uk1sRjRWMnhvYWxKWFVsVlVWbHB6VGtaa2NsZHRPVlZpUjFKS1ZWZHpOVll5Um5KVGJuQlZZVEZ3YUZwRlZURldiSEJIV2taT1RsSnVRVEpXYkZKTFRrZEplRmR1VWxSaVIzaHZWV3hvYjFkR1VsZFhibVJYVW14d2VGVnROVTlVTWtwSFkwaHdXR0V4Y0hKV1IzaFBVbXhPY21OR1pFNVdNVVl6Vm14U1IxZHRWa2hUYTJSaFVtMW9jRlZxU205WFJtUlhXa2h3VGxadGVGaFphMXBYVlRKS2RGVnNXbFppVkVWNlZGZDRWMlJGTVZaYVIyaHBVbTVDTmxacVNURmtNV1JJVWxob2FsSnJTbGhWYWs1UFRrWmFkRTFWT1ZOV2JIQjZWMnRrYzFZeFNsZFhXSEJYVFZad1ZGVnFSbE5rUmxweldrWmFhVkl6YUhaV1YzQkRXVlphVjFadVRsWmlSMUp5V1d0YWQxZFdVbFpWYTJSV1lYcEdlVlJzVm05V01rcFZWbXhTV21FeGNGQlZNRnBYWkZaR2MxWnNaR2xUUlVZMlZtdGFWMWxYVVhoVGJrNXFVbFp3YUZWcVNtOWlNWEJZWkVkR1QySkdjRlpWTW5CRFlVVXhWMk5HYUZkTmFsWlFXVmQ0VDFJeVRraFNiR1JvVFZad2IxWnJWbUZaVjAxNFkwVmFhMUpzU2xoWlZFWjNUbXhhY1ZOWWFHbE5hMXBIVkZaYWMxVnRSalpXYkdoYVlrZG9SRlV3V210V01XUjFWR3hvVTJKRmNEWldNblJoVmpKR1YxTlljR2hUUm5CWVZtcE9iMVpHV25GU2JVWlRUV3R3U2xVeWVHdGhWMHBYVTJ4R1dGWXpVbWhhUkVaaFl6RmFkVlZyTlZOU2JIQjJWbGQ0VTFJeFpFZFdibEpxVW1zMVdGUlZVa2ROVm14V1lVZEdXR0pHY0ZoWk1GWXdXVlpLUmxkdVNscGxhM0JJVldwS1QxTkhSa1pPVm1oVFZsWnJlVlp0Y0VkWlZsbDRZa1pvVmxkSGFHaFZiR1J2VjBac1ZWTnRPVmRTYlhoNldWVmFUMVl4U25OalNHeFhZbFJHU0ZZd1drdGtSbFoxWWtaa2FWWkZWak5YVmxKQ1pVZE9jMXBJVG1oU2JIQlBXVzB4YjFkV1duUmpSV1JvVFZVMVNGWnROVTloVmtwMFZXNUNWMDFIVW5aWmFrWnJWakZhZEZKdGFFNVdiWGN3VjFSQ1YxbFdiRmRUYms1VVlrWktZVlpyVlRGU1JtUlhWMjEwVjAxV2NEQmFSV1F3Vkd4YWMxZFVRbGRoYTI5M1YxWmFhMU5HVG5KaVJrcHBVak5vV1ZkV1pIcE5WbHBIWVROc2JGSXdXbGxWYWtGNFRteHNWbGRyT1ZWaVZWWTJWVmQwYzFZeVNsVlNWRUpYVmtWd1NGVXdXbUZrVmxKellVZHNhV0V3Y0ZwV01XUTBWVEZLZEZWWWFHcFNWbHBWV1d0a1UxZEdVbGRhUms1WVlrZDRlVlpzVWtkV01ERldZMFprV2sxR2NIWldha1pMWXpGa2MxVnNXbGRTVlZZMFZtMXdTMU14U1hoYVNGSm9VbXMxVDFSV1ZuZFhiRnB5VjIxR1dsWXdNVE5VYkdoUFZqSktTR0ZJU2xaaE1YQk1WakZhYzJNeFduUlNiWGhYWWtkM01WZHNWbGRVTVdSSVUyeGtXR0p0ZUZoVVYzQlhWRVprVjFkcmRHcE5helZIV2xWYWQySkhSWGhqUm14WVYwaENURlZxUmtwbFJsWjFVMnM1VjAxdWFGbFdSbU40VldzeGMxZHVVazVUUjJoUFZXMHhORmRXVm5OaFIzUlZZa1p3V1ZaWGVITldNREZJVld4U1YxWldjR2hhUlZWNFZqRlNjMkZHVG1sU00yUTJWbXBLTUZVeFZYbFNia3BPVm0xU1dWbFhkR0ZaVmxKV1drYzVWbEp0ZUZsYVZWWXdZV3N4V0ZWdWFGWldNMmd6VmtkemQyUXhUbkppUm1ScFVtdHdSRmRzVm1GWGJWWlhWRzVLVjJKSFVuQlZiWGgzVjFaa1dHUkhSbXROYkZwWVZqSTFSMVZ0U2xsVmJGWlZWbXhhZWxSc1dsWmxWMUpIV2tab1UwMUlRa3BXYkdRMFlqRnNWMWRZY0doU01taFdXV3hvYjFsV2NGWlhiWFJyVW10d2VsWlhjekZXTVdSR1UxUktWMkZyYjNkWmFrWktaVVprYzJGR1VtaE5iRXA0VmxjMWQyTXhiRmRYYmtwWFlsVmFUMWxyYUVOWFZuQldXa1ZrV0ZKcmNGWlZiWGhoVmpGYU5sSllaRmRTTTJob1ZqQmtVMDVzU25OYVJtUnNZVEZaZWxZeFdsTlNNV3hYV2tWa1ZXSnJOVzlWYWs1dlZrWnNjbFp1WkZoV2JWSlpWRlZTUjFWck1YTlhiR2hYVmpOb2FGWXdaRXRXYkdSMVUyeGFhVkpyY0VsV2FrbzBZVEpPYzFwSVRsVmlSbHB3Vld4b1ExTkdXbkZUYWtKcVRWWnNOVlZ0TlV0WFIwcHpZMGRHV2xZelVtaFpNbmhXWkRGa2NrOVhkRmRoZWxZMVZrUkdZV0V4VW5SVGJHaG9VbTE0V0ZSV1pGSmtNV1JYV2taS2EwMUVSa3BaVlZwdllWZEZlbEZzY0ZoV2VrWTJWRlphYTFZeFduVlNiRXBYVWxWd1VGZFhkR0ZaVlRGSFkwWmFXbVZzV2xoVVZWSkhaVlpyZDFadVpGZGlSbXcyVlZkNFUxWXlSbkpqUldSaFZteHdWRmt4V2xOak1WcDBZa1pPVGxaWVFrdFdha293VmpGc1YxVlliRlZpYXpWeFZXeGtVMkl4Vm5GVGFsSnFVbXh3ZUZVeU1EVlhSbHB6WTBoc1YwMXFSak5XUjNoYVpESktSVlZzWkZkTk1VcDVWMVphWVZNeVRYaGFTRTVWWWtkU1QxVnFSa3ROYkdSVlVtMUdWazFXYkRSWk1GWnJWbGRLV1dGR2FGcGlSMmhUV2xkNFlXTldUbGxoUlRWVFlrZDNlbFpHV205VU1XUklVMjVTYkZKdGFGWldibkJYVWtac1ZsZHRSbXBXYXpWNVdrVmFUMVJzV2xWV2FsWlhZVEpPTkZWcVJsWmxSazV6WWtaS2FWSXphRmxXYlhCUFVURk9SMWRzVmxSaVJUVllWRlphWVUxV1draGxSMFpvVm14c05sbFZXbGRXTVVwMFZHcFNXbUZyV25KWmVrWnJWMWRHU0ZKc1RsTldXRUl6Vm10YVlWWXhXWGRPVldSaFUwVndXVmxzYUZOWFZsWnhVVzVrVkZadGVGZFdiRkpYVmpKR05sSnJiRmRXZWxab1ZtcEtSMk5zWkhWalJuQnNZVEZ3ZVZkclZtRlRNazE0Vm01T1ZXSlhlRmxWYlhSYVRXeGFkRTFJWkd0TmJGcEhWRlpXYjFVeVJYbFZiR3hhWWxoU00xa3dXbGRqYkdSMVdrWmtUbFp1UWpSV2EyTjNUbFpaZUZOdVRtcFRSMmhYVkZjMVUyTnNiRmhOVlhSVVVteGFNVmxyWkVkV01WbDRVMnRzVjJKR1NrTmFSRXBYVjBaS2NtRkdRbGRpVjJoMlZrWmFZV1F5VmxkWGJsSnFVbGRTVlZsc1dtRlRSbHAwVGxaa1YxWXdjRWhXTWpBMVdWWlplbUZIYUdGU1JWcG9WakJWZUZKV1NuTlRhelZYVmtaWk1sWnRjRXBOVmxWNVVtNU9WR0pIYUZkWmJYUkxWbXhhY1ZSc1RteGlSa3A2VmpKNGEyRXhTWGhUYTJ4aFVsWndjbFpxUVhoU01XUlZVbXhvVjJKR2NHOVhWbEpIWVRKU1IxUnVTbUZTYldod1ZtcEtiMWRXV2tkV2JVWnJUV3hhZWxsclVtRldSMFY1Vld4U1ZWWnNjRXhhVjNoeVpERmtkR1JIYUZkaE0wSmhWbFpqZUZJeFdYZE5XRlpvVW0xb1dWWnRNVk5TTVhCWFYydDBXRll3V2toV1Z6RnpWVEpLU1ZGc2NGZE5WMUYzV1ZSR1ZtVkdaSFZVYkZwcFVqRktXbGRYTUhoVk1rNVhZa2hLV0dKdFVuTlZiWGhoVFVaU1YxWnRkRmRoZWtaNVdUQldjMVl4V2paV2JuQlhUV3BHUjFwVlpFOVRWazV6V2tkb2FFMVlRazVXYlhCRFlURlZkMDVZVGxOaWF6Vm9WVzB4VTFReFVsWldibVJVWWtac05GbFZhR3RWTURGWVZXcENWMkpZVW5KV2JURkxZekZrYzFac2NHaE5iRW95VjFSQ1lWWXlVa2hWYTJ4aFVtMW9XRmxyYUVOWGJHUnpWbTFHYUUxclZqTlVWbHB2Vm0xS1NHRkdiRnBXUlZveldrZDRjMVpXU25KalIzUk9WakZKZUZaVVNqUldNVmw1VTJ4a1ZHSkdXbGhXYTFaTFlVWnJlVTFXU214U2JWSXhWbGQ0VDJGV1RrWlRiR3hZVm14S1VGVlVSbk5XTVdSMVZHMUdVMUpyY0ZoV1JscHJWVEpXYzFwSVNsZGlhelZYV1d4V2QwMVdWbGhsUnpsWFZteHdlbGt3VWs5WlZsbDZZVWhzWVZadFVsaFZNR1JUVTBkU1IxUnJOVmRYUlVwTVZtcEdZVll4YkZoU1dHeFRZVEZ3VDFVd1pGTldSbXhZWTNwR1dGSnNTbGxVYkZwUFZqRktjMk5GV2xaTmJtaE1XV3RhUzJSR1ZuTmpSbkJvVFZoQ1ZWZFdXbUZUYlZaMFVtdGtWbUpIYUZoWmExWjNWRlprV0dORlpHcE5WbXcwVjJ0b1YxWkhTa2hWYmtKYVlrWndURll3V21GU01XUjBUMVpLVGxadGR6Qldha1p2WXpGU2MxZHNhRlppVkd4V1ZtMTRkMDB4Y0ZkWGJFNXFUV3RhU2xaSGVHdFdNREZKVVd0c1dGWkZTbWhXVkVaYVpVWmtjbGRzVG1oaVJYQlpWMWQ0VTFJeFZrZFdia1pUWVhwc2NWUldhRU5UVm14eVYyMDVWazFXY0ZwVlYzUnJWakpLVlZGcVVtRlNSVnBMV2xWYVYyUldWbk5hUjJoT1lrVndXbFl4WkRCaE1EVklVMWhvVjJKc1NrOVdibkJ6WTFaV2RFMVVVbGRpUmxvd1ZHeGtNRll3TVhKalJXeFhWak5vZWxkV1dtRldNazVIVVd4d1YwMHdOREJXYWtKclZqRkplVkpyWkdGU1ZGWnZXV3RhZDFac1duUmtSM1JQVW0xNFdGVXhhRzlXVjBweVRsaENWbUpVUmxSWk1GcGhZMnhrZEZKc1RsZGlTRUphVjFSQ1YyRXhaSE5YV0doVVlUSjRXRlZxVGxOaFJscHpXa1YwV0ZJd1draFdWM2hyWVVVeFYyTkhPVmRoYTBwb1dWUkdZVll4U25WVmJFSlhUVEZLVUZadE1ERlJNRFZYVjJ0a1dHSlViRlJVVmxwelRsWlZlVTVXWkZaaVZYQkpXVlZrUjFZeVJuSk9WbEphVmxad2VsWnRlR3RqTVZKMFpFWk9UbFp1UWt0V2JHTjNaVWRSZVZKc1pGaGlhelZ4Vld4a05GZEdVbGhPVms1b1VteHdSbFZ0ZUU5aGJVWTJVbXh3VjFaNlJuWldWRVpoVWpGa2MySkdhRmROTW1oVlZsY3hlbVZHU1hoalJXUmhVbTFvYjFwWGVHRmxiRnAwVFZSU1dsWXhXbnBaYTFwaFYwZEdObUpIT1ZaaVJrcElXbGQ0Vm1WWFZrbGFSbWhUWWtkM01sWnNZekZUTVZsNFYydGFhbEpyU2xkWlYzUmhZMnh3UjFkcmRHcE5WbG93V1d0YWIxVXlSWHBSYkU1WFlXdGFjbFJWV25OWFJsWlpXa1UxVjFZeFNuaFdWM2hoWkRKR1IxWllaR0ZTYXpWeFZXMTRZVTFHY0VaaFIzUnBVakJ3U1ZwVmFITldNVmw2WVVoS1YyRnJSalJXYlRGTFRteE9jMXBIYkZoU01taEdWbTB4ZDFNeFNuUldiR1JYWW10d2MxVnROVU5VTVd4WVpFZEdWbFpzY0ZsWk1GWnJWa1V4Y2sxVVVscE5SbHAyV1ZaYVMyUkhSa2RWYkhCWFVsYzVObFpHWkRSWlYxSkdUVlpXVW1KR2NFOVdiR1F6VFZaYWNsZHRPV2xOVjNoWVZUSjRiMkZHU25SaFIwWlhZVEZhTTFwSGVHRmpiR1IxVkcxd2FWTkZTa2xXYTJRMFlqRlZlVk5zYkdoU1JscFpWbTE0WVZkR1drVlNiVVpVVW1zMWVWbFZXbUZoVjBweVUyeHNXRll6YUZSVmJURlNaVVprY21GSGVGTlhSa3A0Vmtaa2VrMVdUa2RhU0VwWVlrZFNXRlJYZEhkVGJGWllUVVJXVjAxclZqUlZNblJ2VjBaYWMyTklTbFpOUm5CTVdUSjRkMU5IUmtkVWJXeFRZbXRLWVZacVNqUmhNRFZIWWtaYVRsZEZOVmxaYlhSaFZURnNjMVp0UmxoV2JYaDZWakowYTFReFNuUmtSRTVYWWxSR1NGWXdXa3BrTWs1SFkwWndWMVl5YUVWV2JUQjRVekZKZVZSclZsVmlSbHB3VmpCa2IySXhaRmxqUldSclRWVndXRlp0TlU5WlZrcFZWbXhvV21KSGFIRmFWVnBoWkVVeFNWcEZOVmRpUlZrd1ZqSjBWMkl4VlhsVGJrcHFVbTE0WVZsVVNsSk5SbVJYVjIxR2FtSkdjREJWYlhoWFZUSktSMWRZY0ZkaGEyOHdXa1JLUzFJeFpITldiRTVwVWpKb1dsZFdVa2RrTVZaSFYydG9iRkl6VWxSWmExVXhaVlp3UmxkdGRHaFdhMnd6Vkd0U1ExWXhTbk5YYldoWFlsUkdVMXBFUVhoV01rcEhWMjFzVjAxdGFGWldNVnBUVVRKUmVGcElUbGhpYkVwUFZtdGFTMVpXVWxkWGJVWlVVbXh3TUZwVldtdFdhekZ5VjFSS1dtRXhjRlJXYkZwaFpFZEdSbFZzV2s1aWJXaFlWMnhhYTFZeFRrZFRibEpvVW1zMVQxWnRNRFZOTVZsNVpVWmthVTFyTVRSV01XaHZWa2RLY2s1WVJsWk5SbG96Vm0xNGMxWldTblZhUm5CWFltdEtXRlpxU2pSaE1rWnlUVlpvVm1GclNtRldiRnAzVlVac2NscEZkRmhXTUZwSVdUQmFhMkZXU1hoVFdIQlhWbXhLVEZaWE1WZFNNWEJKVm14V2FWWXphRlpXVjNodlVURmtjMXBHYUd4U2F6VnhWRlprVTFkR2JISmhSWFJZVWpCd2VWUnNXa05YYlVWNFkwUk9WMDFXY0ROVmJYaDNVbFpHYzJGSGJGTmlhMGt5VmpGU1ExbFhTWGhhU0VwT1ZsZFNjVlZ0ZUV0WFJteFlaRVZrVDFKc1ZqTldNbmhyWVdzeGNsZHJhRmROYmsxNFZtcEtTMk5zVG5OWGJHUk9ZbXhLV1ZkV1VrZFdiVlpIVkd4c2FGSnNjSEJaYTFaM1pERmFXRTFJYUdsTlZuQklXV3RhVjFVeVNrbFJhemxYWWxob00xUlZXbE5XTWtaSVpFWmtVMVpGV2tkV1Z6RXdZakZrZEZKWWFHcFRSWEJZV1ZkMFlXTnNWWGRhUldSVFRWaENTRmt3WkhOWFJrcFZVbFJDVjJKVVJUQlhWbVJPWlZaV2NtRkdXbWhOYm1odlZsZHdUMUV4WkVkaVNFcFlZbXh3Y2xSV1pGTmxiRnAwWlVkMFZXSkZjREJXVjNSdlZqQXhjVlpzUWxwV00yaFFWVEJrVjFJeVJrZGpSMnhUVFcxb1ZWWXlkRk5TTWsxNFdrVmFUbFpzY0hKVmJYTXhWREZhYzFWc1pFOWlSbXcxV2tWa1IyRkZNVmRUYWtKV1RXcFdWRmxWV2t0T2JVcEhZa1prYVZkSGFFMVdWbEpIWkRGYWMxcElTbXRTYlZKUFZteFNWbVZHV25KWk0yaHJUVlpXTlZVeWVHdFdSMHAwVld4b1dtSkhhRlJXTUZwclZqRmtjazlXWkU1V01VbDRWbXRrTkZsWFJrWk5XRTVVWWtad1dGVnRlSGRoUm5CRlVtMTBVMDFYVWxwWmExVTFWakZhU0dWSVdsaFdNMUpZV2tSQmVGSXhaSE5oUlRsWFZsUldXVlpHVmxOU01VNUhWMWhzYTFKR1NsaFVWbHAzWld4cmQxcEhPVmhpVmxwNVZqSjRiMWRyTVhGU2JGSldZV3RhYUZreWN6RlhSMFpJWlVkb1RsWnNiRFpXYlRCNFpERk5kMDFWYUZSWFIyaFpWakJrYjFkV2JIUmxSWFJYVm0xNGVWZHJVbE5XYXpGWVpVUkNXazB6UWtoV01uaGhZekpPU1dKR1pHbFdSVnBKVm10a2VtVkdaRmRTYms1aFVtMVNUMWxYZEZkTk1WcHhVVzFHVkdKV1draFhhMmhMWVVaS2RHRkhPVlZXTTJoSVZGUkdZV05zY0VWVmJIQlhZbFpLU2xac1pIZFpWbFowVTJ0b1ZtSlViR0ZXYTFaaFRURlNXR1ZIZEZoV01EVkhXa1ZhVTFSc1dsaGtla0pYWVRKTmVGWnFSbUZrUms1eVdrZHdWRkpWY0ZoWFZtUXdaREpTYzFkdVJsTmlWVnB5Vld4U1IxWnNXbGhsU0dSWFRWWndSMVV4VWtOV01rcElWVlJDV2xaRlduSlZNRnBQWTIxR1IxZHRiRk5OTW1oWlZqRmtNRmxXVFhoVWEyUllZbXRhVkZsc2FGTmpWbXh5V2taT1RsSnVRa2RXTW5ocllVWmFjbU5FUmxaV2JXaHlWbXBHUzFKc1RuVlhiSEJzWVRGd2FGZHNWbUZoTVdSWVZHdG9hRkpyTlhCVmJHaERWMVphZEUxVVFsZE5WM2haVmtjMVQxWXlTbkpYYkZKYVlrZG9WRmt5ZUdGa1IxWkdaRWQ0YVZJeFNqVldha2wzVGxaYWNrMVZWbE5oYTBwaFZteGtUazFXV25GUldHaHJWakJhU2xVeWVGZFdNVnAxVVdwYVYySlVSalphVlZwUFYwWktjbHBIUmxOaVYyaFZWa1pqZUdJeGJGZFhXR2hoVWtWS1dGbFljRWRYVmxwSVRsVTVWMDFyY0hsV01uaFBWMjFLUjFkdGFGZGlSbkJZV2tWa1YxTldjRWRWYkdScFlUQndXVlpxUm05a01WbDRWMWhzVTJGc2NGUlpiVEUwVjBac2MyRkZUbWhTYkhBd1dsVmtSMkZyTVZaT1dHeGhWbFp3Y2xsVlpFWmxiRVp5WWtab1YxSlhPSGRYVmxKTFZURlplRlZ1VmxWaVIxSndWV3BHUzFkV1drZFhiR1JyVFZVMVdGWXhhSE5pUmtsM1YyMUdWMkpZYUVoVWExcHJZMnhrZEU5V1drNWhNVmt4Vm14a05HSXhaSFJUYTJoV1lteHdXRlZyVm1GbGJHdDVaVWRHYTFadVFraFpNRnByWVZaSmVsa3paRmRpV0VKTVZHdGFVbVZHWkhKWGF6VllVbGhDZDFaWGRHRlRNV1JIVjI1U1RsWjZiSEpaYTFwelRURmtjbFpxUW1oaGVrWlpWbGR3UjFadFNsbGhSMmhYVWpOb1RGbDZSbUZqVmxaellVWmtVMVpZUW5aV2JYaFRVakZrZEZaclpHcFNWM2hZV1d4V1lWWkdXbkpYYlVaWFZtMVNXVnBGV210aE1ERllWV3hvVjAxcVZraFdhMlJMWkZaR2MxRnNaR2xYUjJnMlZrZDBZVlp0VmxaT1ZscHJVakpvY0ZWc1VsZFRNVnBYV1ROb1UwMVhVbnBXTW5SaFYwZEZlbUZHYUZWV1ZuQXpXVlZhYzA1c1NuVmFSazVwVm10d1NWWnJaSHBOVmxsNVUyNUtWR0pIYUZoWmEyUlBUa1pTY2xwRldteFNiRm94VmtkNFUxZEdTWGxoUmxwWVZtMW9NMVZxUm10U01rcEpWR3hhYUUxWVFsQldWekI0VlRGa1IxcElTbGRXUmxwWVZGVlNSMWRHV1hsalJXUlhUVlZzTmxsVmFFdFhiRnB6WTBkR1lWWjZSa2hWYWtaaFl6SkdSMXBGTlU1V1Z6azFWbTE0WVZVeFNYaGlSbWhWVjBkb2FGVXdXbUZXTVd4WlkwWmtXRlpzV25oVmJYUXdWakZLZEZWc2JHRldWMUpJVmpKNFlXTnJOVlpoUm1ST1lteEtNbGRXVWtkVGJWWnpWbTVPYUZKc1dsaFVWRVpLWld4a2MxZHRSbXBpVmtZMFdXdFNZVll5U2toVmJrSlhZa2RvUkZacVJtRlhSVEZWVld4YVRsWnRkekJXVkVvd1dWWmtTRk5yYUdoU01taFhXV3RhZDFZeGNGWlhiVVpyVWpGYVNGWkhNVEJWTURGSlVXdG9WMUl6YUdoWlZFWlRZekZrYzJGR1FsUlNNbWhaVjFkNFUxRXdNSGhqUlZaVVlrZFNWRmxZY0VkV01XUnlWMjA1YUZacmNERlZWM2hEVmpKS1ZWSlVRbUZTUlZwWVZXcEdhMlJXVW5SU2JFNVRZVE5DV2xacldtRmhNRFZJVm01T2FWSnNjRmxaV0hCellqRnNjMVp1WkZSU2JYUXpXVlZvYTFkR1NYZFdhbEpYVFZkb2NsWnFRWGhTTWs1SVVtMUdVMUpXY0hsWFZFbDRVekZKZUZkdVNrOVdiVkp3V1ZSQ2QxbFdXblJOU0doclRWVXhORlpHYUc5WlZrcFlZVVpTV2xaRldqTldha1p6WTJ4d1NFOVhjRk5pUm05M1ZrZDRWMVF5UmxaTlZtUnBVa1pLV0ZSWGNFWmtNVnB6Vmxob1YwMXJjRVpXVjNoclZUSldjMWRzYkZkaVZFSTBWWHBHYTFZeFNuVlViRnBwVW14d1dWWlhlR0ZrTVZKWFYyNU9WMkpWV205VVZtUlRVMVphV0dSSGRGcFdhM0F3V1ZWb1ExWXlTbGxoUkU1VllsaG9hRmt4V2s5alZrWjBZVVUxVjAxVmNFdFdiRkpMVGtac1YxcEZhRlJpUmxwd1ZXMTRkMWRHYkZoamVrWlhVbTE0VjFZeWVHdGhiRnB5WTBod1YxSXphSEpaVmxwaFZqSk9SbVJHWkdoTmF6UXdWMWh3UjFadFZsZFRiR3hxVW10d1dWVnFSa3RYVm1SWVpFZDBWVTFFVmtoV2JUVkhWVEpLV1ZWdVJsVldiVkpVV2xaYVdtVlZNVmxhUmxwT1lUTkNTRmRVUW1wT1ZsbDRWMWh3VW1KRlNtRlpWM1IzVTBaV2NWSnRkR3RXYkZvd1dsVmFUMVJyTVZaalJGWlhZa2RPTkZSVlpGSmtNREZXV2tkb1RrMXNTbHBYVjNodlZUSkplRmR1VW10VFIxSlpXV3RhWVZkR1dsaGtSRUpYVFVSR2VWa3dXbmRXTVZvMlZtdG9XRlpzY0doV01GcFhZMjFTU0ZKc1pGZGlhMHAyVm0xd1IyRXhUWGhUV0doWFlteEtiMVZzVWxkalJscHhVMjAxVGxac2NEQmFSV1JIVm1zeFYxSnFVbFppUjJoMlYxWmFTMWRHVm5WUmJGcE9VbXhXTkZadGNFZGpNVnBYVW01V1lWSXpRazlXYlhoMlpERmFSMWRzVGxaTlZtdzFWVEowYTFkSFJuSlRiV2hYWWtad1lWcEVSbk5XTVdSeVpFZHdUbUY2Vmt0WFYzUmhWakpHVjFOWWJHaFNSbkJZV1ZkMGMwNUdWblJOVm1SVVVteEtlVll5TVRSVk1rcHlVMnhzVjJKVVJUQldNbk40VWpGd1IySkhjRk5XTVVwWFZrWmtlbVZGTlZkWGEyaHJVak5TYjFWdGRIZE5SbHBZVGxWT1YySlZjRWxaVlZaVFZtc3hkV0ZIYUZwTlZuQk1Xa1ZhUzJSSFJrWk9WbVJvVFZkME5GWnRNVEJaVjBsNVZGaG9XR0V5YUZSV01HUTBWakZzY2xwSE9WcFdiWGhXVlcxNFlXSkdTblJrUkU1WFRXcEdTRmxYYzNoWFJsWnhVbXhvYUUxc1JYZFdiWEJMVXpGT1YxSnNiR0ZTYlZKVVdXdG9RMVpXV2xkVmEyUm9UV3N4TkZkclduTmhSa3AwWVVoQ1ZtRnJjSFpaVlZwclZqRldjbHBIZEU1aE1YQkpWakowWVdFeFpFaFNXSEJXWWtkNFYxbHNhRzloUm5CWVpVaE9WMkpIVW5wWGExcHJWRzFGZWxGcmRGZFdiSEIyV2tSR2ExTkdUbkphUjNCVFRXMW9hRlpHWkhkU01WVjRZMFphV0dKdFVsVldiWE14VFVaV2RHVkZPV2hXYkd3MVdWVmFZVll3TVZoVldHUmFZV3RhUjFwRVFURlhWbEp6WVVkc2FFMVlRbGRXYlhCRFlUSkplVlJyWkZaaVIxSlpXVzF6TVZReFVsZFhhM1JZVW0xNFYxWnRNVEJXTWtZMlVtNXNXazFHV25wV01uaGhWMFpXY21GR2FGZGlTRUpvVjJ4a05GWXlVa2hTYTJScVVtMVNXRmx0ZEVkT2JGcHpXa2hrVTAxclZqVldWM1JyVmtkS2MxTnVTbFppV0UxNFdXcEdVMVpXUm5KalJUVnBVbTVCZDFkclZtdGtNa3BIVTFoa1RsWkdTbGhVVm1SdlkyeGFTR1ZIZEZOTlZUVXdWREZhWVdGV1drWlhiRlpYWVd0S2FGbDZTazVsUmxwMVUyeFdhR1Z0ZUZWWFZ6RXdVekZKZUZkc2FFNVhTRUpQVm1wQ2QxTkdXWGxPVlhSVlRWWndNVlZYTVVkV01rcEhZMFJPWVZJemFIcFdha1pyWTIxT1NHVkdUbWhsYkZZelZtdFNSMWxYUlhoWFdHeFhZbXR3V0ZZd1pGTlhSbEpYVjI1a2FGSnNjREJVVmxwclZrWktjazVZYkZwaE1YQllXVlphU21WR1RuVmFSbVJwVjBkb2IxZHJVa3RXTVVsNFkwVmthRkl6VWxSVVZWcDNWbXhhUjFkdGRGWk5WVFZJVmpGb2MxUXhXbFZpUm1oYVlrWmFXRlJzV21GWFIxWklUMVprYVZaWVFtRldiR1IzVkRGc1YxZFljR2hUUjNob1ZXdFdZVmRHYTNsbFJrNXFUVmhDU0ZkclZURldSa3BXWTBWMFYyRnJXbFJWVkVwS1pVWlNXV0ZHYUZoU00yaFZWMWN4TUdReFpGZGlTRTVYWWxWYWIxVnRlR0ZsVmxwMFRsZDBWMkpGY0hwV01qVnZWbTFLVlZadVNsZFdSVVkwVmpGYVIyTnNjRWRXYld4VFRWVnZNbFl4V21GWlZtUjBWbXhrYUUwelFuQlZiVEZUWTBaYWNsWnJjR3hpUjFKNVZsZDBNRll3TVZaaVJGSlhWak5vZWxsVldrdGpNV1IwVDFaV1YyVnJXakpXYlhoaFlURlplRlp1U21GU00xSlBWbTAxUTA1c1pGaGtSemxVVFZkU1NWVXllR0ZYUjBwSVpVWmtXbUpIYUhaV1JWcGhaRWRXUjFkdGVGZFdSVnBIVm0wd2VHSXhWWGxTV0hCU1YwZFNXRmxyWkU1bFJtdzJVbXh3YkZKdFVscFpNRnBoWVZkRmVsRnNiRmRTYlUxNFdXcEdjMVl5VGtkWGJHaG9aVzE0ZUZkWGVGZGtNVTVIV2toS1dHSllVbFpaV0hCSFZqRnJkMVZzWkZkTlJFWllXVEJvUzFaWFJYaGpSVGxoVm14d1dGa3llSGRTTVhCSVlrZG9UazFGY0ZSV2JUQjNaVVUxU0ZWWWJGVmhNbEpaV1cxMGQxZFdiSE5XYlVaWFVteHdNRnBWYUd0WFIwcElaRVJPVjJKVVJYZFdNR1JMVWpKS1JWVnNXazVpYkVvMlZtMXdTMU14WkZkV2JsWllZa2hDV0ZSVVNtOVVWbHAwWlVkR1dsWXdNVFZWYlhScllXeEplV0ZGT1ZkTlJscE1XV3BHWVdOc1pIUlNiSEJYWWxob1dWWXlkRmRaVmxKelYyNU9XR0pIVW1GWmEyUlRaR3hhUlZKdFJtdFNWRlpYVmtkNFUxWXlTa2hrZWtaWVlURmFhRmxVU2tkamF6RlhXa1pvYUdFd2NGaFdSbU14VlRKR1IxZHJWbE5pU0VKeVZGWmtVMDFHVm5SbFNHUm9VbFJHZWxVeWNFdFdNa3BaVlcxb1dGWnNjRXhaZWtaM1UxWldjMVJ0YkZoU2EzQldWbXRhWVZsWFVYaFViazVZWWtkb1QxVXdaRzlqYkZKWFYyNU9UMVpzVmpWYVJXUkhZVWRLUm1ORmFGZE5ibWgyVmpKNFlWSnRUa2RVYkZaWFZtNUNObFp0ZUdGVE1rMTRXa2hTYkZKdFVtOWFWM2hhVFZaYWRHTkZjR3hTTVVZMFZteG9jMVpIU2tobFJ6bFdZbFJGTUZZeFdtRmtSVEZYVTIxMFRsWXpVVEZXUmxwaFlURlZkMDFXYUZaaWJYaFlXV3hvYjFWR2JGZFhhemxUWWtVMU1WbHJXbXRWTWtwSFkwWldWMVl6UWtoWlZFWktaVlpPY21KR1VtbFNNbWgyVmtaU1IxTXlVbk5YYkdoc1VtczFWRlJYZUdGbGJGcHpZVWhPYVZKcmJEWldWM2h2VmxaYWMxZHFUbUZXTTJoNVdrUktSMUp0VWtkYVJUVlhZbFJvTlZac1kzaE9SbEY0WWtaa1dHSkhhRmRaVkU1dlZqRnNXR1JIUm1waVIzY3lWVzAxYTFVd01YSlhhMmhYVWpOTmVGbFdXbHBsVjBaSFlVWmthVlpGU1hwWGExSkxWakZLY2s1V1dtaFNiSEJaVldwS2IySXhXbFZSYkZwT1ZqQTFTRlp0TlZOaVJrNUlWV3hzVjJKVVJUQmFWM2h6Vm14a2NrOVhhRmRXUlZwWlYxUkNVMUV4YkZkVGJHaG9VbXRLV0ZWclZtRlVSbXcyVW0xR2FsWnNXbnBaTUZwclZqQXhkR0ZFVmxkaVZFWXpWVmN4VjFOR1VuVlZiRlpvVFd4S2VGWlhNVFJrTVdSSFZXeFdVMkV4Y0hKVVZscDNUVVpTVm1GSE9WWk5SRVo1Vkd4U1ExWXhTWHBWYldoWFZsWndZVnBFUm10ak1rWkhXa2RzVjFKc2NFWldiVEUwV1ZkRmVGcEdhRlZoTVhCeVZXMTRTMVF4V25OVmJHUlVZa1p3V1ZSV1VrTmhSVEZYWTBac1ZrMXVhSFpaYTFwTFpFZEdTRkpzWkdoTlZsWTBWbGQwWVdFeFdYaGFTRkpUWWxoU1ZGUldXbmRUYkdSeVZteGFUMVpzVmpOVVZsWnZZVEpXY2xOc2FGZGhhelYyV2tkNGMyTldTblJrUmxKVFlYcFZlRlpVU25wT1ZsbDVVMnhzYUZJeWFGbFdhazV2Wkd4c2NWSnNUbE5OYTNCR1ZqSjRUMkZXU1hoVGJtaFhZbFJGTUZWNlNsZGpNV1J5WVVkNFUwMHhTbGRYVjNSaFpESldWMkV6WkZoaWJWSlpWV3BDZDFOR1dYbE9WWFJYWWxWYWVWa3dWalJXYXpGSFkwWkNXazFxUmtoVk1HUlRVakZTYzFSc1pGTmlTRUpvVm0xd1IyRXdOVWRXV0doVVYwZG9WbGxVU2xOWFZsbDNXa1pPV0ZadGVGWldSM1JQWVcxS1IxTnNiRnBOTTBKSVZtdGtTMU5IVmtsaVJtUk9ZbTFvZVZkV1ZtRlpWMDUwVkd0V1UySkdjRmhVVkVKTFlqRmFkR05GZEZSTlZuQllWVzAxUjFadFNrZGpTRTVhVmtWYU0xbHFSbUZrUjA1R1drZG9UbUpGY0ZsV2EyTXhWREZrU0ZOc2FHeFNiRXBoV1d4b1UxUkdXbGRYYlVaclVsUkdTbGRyVlRGV01rVjRZak5rVjJKVVFYaFdSRVpyVTBaT2RWUnNVbWhsYlhoWlYxWlNSMlF4VWtkYVJtUllZbFZhY2xWc1VrZFhSbHBJWlVjNVYwMXJjRWhaYWs1clYwZEZlRmR1U2xWV1ZuQmhXa1JCZUZkV1RuUmpSazVwVjBkb2IxWnRNVFJoTWtsNFZtdGtXRmRIZUhOVmFrSmhWa1pzY2xwR1RrNVdiWFF6VmpKNGExWXdNVlpqUm1oYVRVZE5NVll3WkVabFJtUjFVMnhrYUdFeGNGRldWM0JIVkRKU1YxWnVVbWxTYXpWWVZXMTRkMDFzV25KWGJVWmFWakExTUZaV2FHOVhSMHB5VjJ4V1dsWXpVa3hXTUZwVFYwZFNSMXBGT1ZOaVZrbzFWbTB3ZDA1V1dYaFRXR1JxVTBkNFlWUlZXbmRTUmxweFVWaG9VMDFYVWpCWlZWcHJZVWRGZUdOR1ZsZGlWRVV3V1ZSS1UxSXhUblZUYXpsWFZrWmFXVmRYZUc5aE1EVnpWMjVTYWxKWVVsQlZha0pYVGxaV2RFNVdUbGRTTUZZMVZsYzFSMVp0UlhoWGJXaFhUVlp3ZWxac1drdGtWbkJJWTBkc1UySnJTbGhXYkZKTFRVVXhTRkp1VWxSaE1YQlFWakJrTkZsV1duTlhibVJxWWtkNFYxZHJWbUZpUjBwR1YyeGFWazF1YUhKV1ZFRjNaVmRHU1dKR1pGZGxhMGt3Vm0xd1IxTnRWa2RXYmxaWFlrWmFjRlZxUmt0a01WcFlZMFZrVkUxc1JqUldNbmh2WVd4S1ZXSklRbFZXTTFKb1ZUQmFhMk5zWkhSa1JtUnBWbFpaTVZac1pEUmlNV1IwVTJ0a2FsSXlhRmRVVlZwM1dWWndWMVpVUmxkaVZrcElXVlZhVDFSc1NuTmhNMnhYWWxob2NsUnJaRXBsUm1SWllrWlNhVkl6YUZoWFYzaHJZakZrUjJKSVRtaFNlbXhaVlcweE0wMXNWblJsUjNSWVVteHdNVlZYZEc5V2JVcFpZVWRvVjJGcldreFZiWGhMVmxaS1ZVMUVNRDA9